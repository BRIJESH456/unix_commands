ls
cd
mkdir
rmdir
cp
rm
mv
more
grep :
1. Case insensitive search
grep -i "UNix" test.txt

2. Displaying the count of number of matches
grep -c "unix" test.txt

3. Display the file names that matches the pattern
grep -l "unix" *

4. Checking for the whole words in a file
grep -w "unix" test.txt

5. Show line number while displaying the output
grep -n "unix" test.txt

6. Takes patterns from file
grep –f pattern.txt  test.txt

7. Search a string in Gzipped Files
zgrep –i error /var/log/syslog.2.gz

chmod 
ps 
kill 
ssh 
history
date
cal 
df
du
alias
tar
ping
nohup
ifconfig
whoami
which
whereis
comm
cmp
diff
find
tee
pwd
tail
getopt
basename
uname
sort
wc
cat
man
head
chgrp
chown
crontab
cut
dirname
echo
env
expr
ln
read
split --
test --
touch
tr
uniq
zcat	
sed :
1. Viewing a range of lines of a document
sed -n '5,10p' test.txt

2. Viewing the entire file except a given range
sed '20,35d' test.txt

3. Viewing non-consecutive lines and ranges
sed -n -e '5,7p' -e '10,13p' test.txt

4. Replacing words or character
sed 's/version/story/g' test.txt
sed 's/version/story/gi' test.txt

5. Replacing words or characters inside a range
sed '30,40 s/version/story/g' test.txt

6. Performing two or more substitutions at once
sed -i 's/that/this/gi;s/line/verse/gi' test.txt

7. Replacing the nth occurrence of a pattern in a line
sed 's/unix/linux/2' test.txt

8. Replacing from nth occurrence to all occurrences in a line
sed 's/unix/linux/3g' test.txt

9. Duplicating the replaced line with /p flag
sed 's/unix/linux/p' test.txt
sed -n 's/unix/linux/p' test.txt


--for loop
1.
for i in 1 2 3 4 5
do
	echo ${i}
done

2. 
for i in {1..5}
do
	echo ${i}
done

3.
for (( i=1; i<=5; i++ ))
do  
   echo "${i}"
done

4.
for i in `ls -1`
do
	echo ${i}
done

5. 
for i in "this" "is" "sample" "line"
do
	echo ${i}
done

--if

if [ $? -eq 0]
then
	echo "Successful!!"
fi

--if-else

if [ $? -eq 0]
then
	echo "Successful!!"
else
	echo "Failed!!"
	exit 1
fi

--if-elif-else

a=10
b=20

if [ ${a} == ${b} ]
then
   echo "a is equal to b"
elif [ ${a} -gt ${b} ]
then
   echo "a is greater than b"
elif [ ${a} -lt ${b} ]
then
   echo "a is less than b"
else
   echo "None of the condition met"
fi
