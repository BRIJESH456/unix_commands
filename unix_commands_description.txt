****************************************************ls starts here****************************************************
LS(1)                                                                                  User Commands                                                                                  LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).  Sort entries alphabetically if none of -cftuvSUX nor --sort is specified.

       Mandatory arguments to long options are mandatory for short options too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

       --author
              with -l, print the author of each file

       -b, --escape
              print C-style escapes for nongraphic characters

       --block-size=SIZE
              scale sizes by SIZE before printing them; e.g., '--block-size=M' prints sizes in units of 1,048,576 bytes; see SIZE format below

       -B, --ignore-backups
              do not list implied entries ending with ~

       -c     with -lt: sort by, and show, ctime (time of last modification of file status information); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first

       -C     list entries by columns

       --color[=WHEN]
              colorize the output; WHEN can be 'always' (default if omitted), 'auto', or 'never'; more info below

       -d, --directory
              list directories themselves, not their contents

       -D, --dired
              generate output designed for Emacs' dired mode

       -f     do not sort, enable -aU, disable -ls --color

       -F, --classify
              append indicator (one of */=>@|) to entries

       --file-type
              likewise, except do not append '*'

       --format=WORD
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l, vertical -C

       --full-time
              like -l --time-style=full-iso

       -g     like -l, but do not list owner

       --group-directories-first
              group directories before files;

              can be augmented with a --sort option, but any use of --sort=none (-U) disables grouping

       -G, --no-group
              in a long listing, don't print group names

       -h, --human-readable
              with -l and/or -s, print human readable sizes (e.g., 1K 234M 2G)

       --si   likewise, but use powers of 1000 not 1024

       -H, --dereference-command-line
              follow symbolic links listed on the command line

       --dereference-command-line-symlink-to-dir
              follow each command line symbolic link

              that points to a directory

       --hide=PATTERN
              do not list implied entries matching shell PATTERN (overridden by -a or -A)

       --indicator-style=WORD
              append indicator with style WORD to entry names: none (default), slash (-p), file-type (--file-type), classify (-F)

       -i, --inode
              print the index number of each file

       -I, --ignore=PATTERN
              do not list implied entries matching shell PATTERN

       -k, --kibibytes
              default to 1024-byte blocks for disk usage

       -l     use a long listing format

       -L, --dereference
              when showing file information for a symbolic link, show information for the file the link references rather than for the link itself

       -m     fill width with a comma separated list of entries

       -n, --numeric-uid-gid
              like -l, but list numeric user and group IDs

       -N, --literal
              print entry names without quoting

       -o     like -l, but do not list group information

       -p, --indicator-style=slash
              append / indicator to directories

       -q, --hide-control-chars
              print ? instead of nongraphic characters

       --show-control-chars
              show nongraphic characters as-is (the default, unless program is 'ls' and output is a terminal)

       -Q, --quote-name
              enclose entry names in double quotes

       --quoting-style=WORD
              use quoting style WORD for entry names: literal, locale, shell, shell-always, shell-escape, shell-escape-always, c, escape

       -r, --reverse
              reverse order while sorting

       -R, --recursive
              list subdirectories recursively

       -s, --size
              print the allocated size of each file, in blocks

       -S     sort by file size, largest first

       --sort=WORD
              sort by WORD instead of name: none (-U), size (-S), time (-t), version (-v), extension (-X)

       --time=WORD
              with  -l, show time as WORD instead of default modification time: atime or access or use (-u); ctime or status (-c); also use specified time as sort key if --sort=time (new‐
              est first)

       --time-style=STYLE
              with -l, show times using style STYLE: full-iso, long-iso, iso, locale, or +FORMAT; FORMAT is interpreted like in 'date'; if FORMAT is FORMAT1<newline>FORMAT2, then  FORMAT1
              applies to non-recent files and FORMAT2 to recent files; if STYLE is prefixed with 'posix-', STYLE takes effect only outside the POSIX locale

       -t     sort by modification time, newest first

       -T, --tabsize=COLS
              assume tab stops at each COLS instead of 8

       -u     with -lt: sort by, and show, access time; with -l: show access time and sort by name; otherwise: sort by access time, newest first

       -U     do not sort; list entries in directory order

       -v     natural sort of (version) numbers within text

       -w, --width=COLS
              set output width to COLS.  0 means no limit

       -x     list entries by lines instead of by columns

       -X     sort alphabetically by entry extension

       -Z, --context
              print any security context of each file

       -1     list one file per line.  Avoid '\n' with -q or -b

       --append-exe
              append .exe if cygwin magic was needed

       --help display this help and exit

       --version
              output version information and exit

       The SIZE argument is an integer and optional unit (example: 10K is 10*1024).  Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).

       Using  color to distinguish file types is disabled both by default and with --color=never.  With --color=auto, ls emits color codes only when standard output is connected to a ter‐
       minal.  The LS_COLORS environment variable can change the settings.  Use the dircolors command to set it.

   Exit status:
       0      if OK,

       1      if minor problems (e.g., cannot access subdirectory),

       2      if serious trouble (e.g., cannot access command-line argument).

AUTHOR
       Written by Richard M. Stallman and David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report ls translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/ls>
       or available locally via: info '(coreutils) ls invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                  LS(1)
****************************************************ls ends here****************************************************


****************************************************cd starts here****************************************************
BASH_BUILTINS(1)                                                                  General Commands Manual                                                                  BASH_BUILTINS(1)

NAME
       bash, :, ., [, alias, bg, bind, break, builtin, caller, cd, command, compgen, complete, compopt, continue, declare, dirs, disown, echo, enable, eval, exec, exit, export, false, fc,
       fg, getopts, hash, help, history, jobs, kill, let, local, logout, mapfile, popd, printf, pushd, pwd, read, readonly, return, set, shift, shopt, source, suspend, test, times,  trap,
       true, type, typeset, ulimit, umask, unalias, unset, wait - bash built-in commands, see bash(1)

BASH BUILTIN COMMANDS
SEE ALSO
       bash(1), sh(1)

GNU Bash-4.2                                                                            2004 Apr 20                                                                        BASH_BUILTINS(1)
****************************************************cd ends here****************************************************


****************************************************mkdir starts here****************************************************
MKDIR(1)                                                                               User Commands                                                                               MKDIR(1)

NAME
       mkdir - make directories

SYNOPSIS
       mkdir [OPTION]... DIRECTORY...

DESCRIPTION
       Create the DIRECTORY(ies), if they do not already exist.

       Mandatory arguments to long options are mandatory for short options too.

       -m, --mode=MODE
              set file mode (as in chmod), not a=rwx - umask

       -p, --parents
              no error if existing, make parent directories as needed

       -v, --verbose
              print a message for each created directory

       -Z     set SELinux security context of each created directory to the default type

       --context[=CTX]
              like -Z, or if CTX is specified then set the SELinux or SMACK security context to CTX

       --help display this help and exit

       --version
              output version information and exit

AUTHOR
       Written by David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report mkdir translation bugs to <http://translationproject.org/team/>

SEE ALSO
       mkdir(2)

       Full documentation at: <http://www.gnu.org/software/coreutils/mkdir>
       or available locally via: info '(coreutils) mkdir invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                               MKDIR(1)
****************************************************mkdir ends here****************************************************


****************************************************rmdir starts here****************************************************
RMDIR(1)                                                                               User Commands                                                                               RMDIR(1)

NAME
       rmdir - remove empty directories

SYNOPSIS
       rmdir [OPTION]... DIRECTORY...

DESCRIPTION
       Remove the DIRECTORY(ies), if they are empty.

       --ignore-fail-on-non-empty

              ignore each failure that is solely because a directory

              is non-empty

       -p, --parents
              remove DIRECTORY and its ancestors; e.g., 'rmdir -p a/b/c' is similar to 'rmdir a/b/c a/b a'

       -v, --verbose
              output a diagnostic for every directory processed

       --help display this help and exit

       --version
              output version information and exit

AUTHOR
       Written by David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report rmdir translation bugs to <http://translationproject.org/team/>

SEE ALSO
       rmdir(2)

       Full documentation at: <http://www.gnu.org/software/coreutils/rmdir>
       or available locally via: info '(coreutils) rmdir invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                               RMDIR(1)
****************************************************rmdir ends here****************************************************


****************************************************cp starts here****************************************************
CP(1)                                                                                  User Commands                                                                                  CP(1)

NAME
       cp - copy files and directories

SYNOPSIS
       cp [OPTION]... [-T] SOURCE DEST
       cp [OPTION]... SOURCE... DIRECTORY
       cp [OPTION]... -t DIRECTORY SOURCE...

DESCRIPTION
       Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.

       Mandatory arguments to long options are mandatory for short options too.

       -a, --archive
              same as -dR --preserve=all

       --attributes-only
              don't copy the file data, just the attributes

       --backup[=CONTROL]
              make a backup of each existing destination file

       -b     like --backup but does not accept an argument

       --copy-contents
              copy contents of special files when recursive

       -d     same as --no-dereference --preserve=links

       -f, --force
              if an existing destination file cannot be opened, remove it and try again (this option is ignored when the -n option is also used)

       -i, --interactive
              prompt before overwrite (overrides a previous -n option)

       -H     follow command-line symbolic links in SOURCE

       -l, --link
              hard link files instead of copying

       -L, --dereference
              always follow symbolic links in SOURCE

       -n, --no-clobber
              do not overwrite an existing file (overrides a previous -i option)

       -P, --no-dereference
              never follow symbolic links in SOURCE

       -p     same as --preserve=mode,ownership,timestamps

       --preserve[=ATTR_LIST]
              preserve the specified attributes (default: mode,ownership,timestamps), if possible additional attributes: context, links, xattr, all

       --no-preserve=ATTR_LIST
              don't preserve the specified attributes

       --parents
              use full source file name under DIRECTORY

       -R, -r, --recursive
              copy directories recursively

       --reflink[=WHEN]
              control clone/CoW copies. See below

       --remove-destination
              remove each existing destination file before attempting to open it (contrast with --force)

       --sparse=WHEN
              control creation of sparse files. See below

       --strip-trailing-slashes
              remove any trailing slashes from each SOURCE argument

       -s, --symbolic-link
              make symbolic links instead of copying

       -S, --suffix=SUFFIX
              override the usual backup suffix

       -t, --target-directory=DIRECTORY
              copy all SOURCE arguments into DIRECTORY

       -T, --no-target-directory
              treat DEST as a normal file

       -u, --update
              copy only when the SOURCE file is newer than the destination file or when the destination file is missing

       -v, --verbose
              explain what is being done

       -x, --one-file-system
              stay on this file system

       -Z     set SELinux security context of destination file to default type

       --context[=CTX]
              like -Z, or if CTX is specified then set the SELinux or SMACK security context to CTX

       --help display this help and exit

       --version
              output version information and exit

       By  default, sparse SOURCE files are detected by a crude heuristic and the corresponding DEST file is made sparse as well.  That is the behavior selected by --sparse=auto.  Specify
       --sparse=always to create a sparse DEST file whenever the SOURCE file contains a long enough sequence of zero bytes.  Use --sparse=never to inhibit creation of sparse files.

       When --reflink[=always] is specified, perform a lightweight copy, where the data blocks are copied only when modified.  If this is not possible the copy fails, or if --reflink=auto
       is specified, fall back to a standard copy.

       The backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.  The version control method may be selected via the --backup option or through the VERSION_CONTROL envi‐
       ronment variable.  Here are the values:

       none, off
              never make backups (even if --backup is given)

       numbered, t
              make numbered backups

       existing, nil
              numbered if numbered backups exist, simple otherwise

       simple, never
              always make simple backups

       As a special case, cp makes a backup of SOURCE when the force and backup options are given and SOURCE and DEST are the same name for an existing, regular file.

AUTHOR
       Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report cp translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/cp>
       or available locally via: info '(coreutils) cp invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                  CP(1)
****************************************************cp ends here****************************************************


****************************************************rm starts here****************************************************
RM(1)                                                                                  User Commands                                                                                  RM(1)

NAME
       rm - remove files or directories

SYNOPSIS
       rm [OPTION]... [FILE]...

DESCRIPTION
       This manual page documents the GNU version of rm.  rm removes each specified file.  By default, it does not remove directories.

       If  the  -I or --interactive=once option is given, and there are more than three files or the -r, -R, or --recursive are given, then rm prompts the user for whether to proceed with
       the entire operation.  If the response is not affirmative, the entire command is aborted.

       Otherwise, if a file is unwritable, standard input is a terminal, and the -f or --force option is not given, or the -i or --interactive=always option is given, rm prompts the  user
       for whether to remove the file.  If the response is not affirmative, the file is skipped.

OPTIONS
       Remove (unlink) the FILE(s).

       -f, --force
              ignore nonexistent files and arguments, never prompt

       -i     prompt before every removal

       -I     prompt once before removing more than three files, or when removing recursively; less intrusive than -i, while still giving protection against most mistakes

       --interactive[=WHEN]
              prompt according to WHEN: never, once (-I), or always (-i); without WHEN, prompt always

       --one-file-system
              when removing a hierarchy recursively, skip any directory that is on a file system different from that of the corresponding command line argument

       --no-preserve-root
              do not treat '/' specially

       --preserve-root
              do not remove '/' (default)

       -r, -R, --recursive
              remove directories and their contents recursively

       -d, --dir
              remove empty directories

       -v, --verbose
              explain what is being done

       --help display this help and exit

       --version
              output version information and exit

       By default, rm does not remove directories.  Use the --recursive (-r or -R) option to remove each listed directory, too, along with all of its contents.

       To remove a file whose name starts with a '-', for example '-foo', use one of these commands:

              rm -- -foo

              rm ./-foo

       Note that if you use rm to remove a file, it might be possible to recover some of its contents, given sufficient expertise and/or time.  For greater assurance that the contents are
       truly unrecoverable, consider using shred.

AUTHOR
       Written by Paul Rubin, David MacKenzie, Richard M. Stallman, and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report rm translation bugs to <http://translationproject.org/team/>

SEE ALSO
       unlink(1), unlink(2), chattr(1), shred(1)

       Full documentation at: <http://www.gnu.org/software/coreutils/rm>
       or available locally via: info '(coreutils) rm invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                  RM(1)
****************************************************rm ends here****************************************************


****************************************************mv starts here****************************************************
MV(1)                                                                                  User Commands                                                                                  MV(1)

NAME
       mv - move (rename) files

SYNOPSIS
       mv [OPTION]... [-T] SOURCE DEST
       mv [OPTION]... SOURCE... DIRECTORY
       mv [OPTION]... -t DIRECTORY SOURCE...

DESCRIPTION
       Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.

       Mandatory arguments to long options are mandatory for short options too.

       --backup[=CONTROL]
              make a backup of each existing destination file

       -b     like --backup but does not accept an argument

       -f, --force
              do not prompt before overwriting

       -i, --interactive
              prompt before overwrite

       -n, --no-clobber
              do not overwrite an existing file

       If you specify more than one of -i, -f, -n, only the final one takes effect.

       --strip-trailing-slashes
              remove any trailing slashes from each SOURCE argument

       -S, --suffix=SUFFIX
              override the usual backup suffix

       -t, --target-directory=DIRECTORY
              move all SOURCE arguments into DIRECTORY

       -T, --no-target-directory
              treat DEST as a normal file

       -u, --update
              move only when the SOURCE file is newer than the destination file or when the destination file is missing

       -v, --verbose
              explain what is being done

       -Z, --context
              set SELinux security context of destination file to default type

       --help display this help and exit

       --version
              output version information and exit

       The backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.  The version control method may be selected via the --backup option or through the VERSION_CONTROL envi‐
       ronment variable.  Here are the values:

       none, off
              never make backups (even if --backup is given)

       numbered, t
              make numbered backups

       existing, nil
              numbered if numbered backups exist, simple otherwise

       simple, never
              always make simple backups

AUTHOR
       Written by Mike Parker, David MacKenzie, and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report mv translation bugs to <http://translationproject.org/team/>

SEE ALSO
       rename(2)

       Full documentation at: <http://www.gnu.org/software/coreutils/mv>
       or available locally via: info '(coreutils) mv invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                  MV(1)
****************************************************mv ends here****************************************************


****************************************************more starts here****************************************************
MORE(1)                                                                                User Commands                                                                                MORE(1)

NAME
       more - file perusal filter for crt viewing

SYNOPSIS
       more [options] file...

DESCRIPTION
       more  is  a filter for paging through text one screenful at a time.  This version is especially primitive.  Users should realize that less(1) provides more(1) emulation plus exten‐
       sive enhancements.

OPTIONS
       Options are also taken from the environment variable MORE (make sure to precede them with a dash (-)) but command-line options will override those.

       -d     Prompt with "[Press space to continue, 'q' to quit.]", and display "[Press 'h' for instructions.]" instead of ringing the bell when an illegal key is pressed.

       -l     Do not pause after any line containing a ^L (form feed).

       -f     Count logical lines, rather than screen lines (i.e., long lines are not folded).

       -p     Do not scroll.  Instead, clear the whole screen and then display the text.  Notice that this option is switched on automatically if the executable is named page.

       -c     Do not scroll.  Instead, paint each screen from the top, clearing the remainder of each line as it is displayed.

       -s     Squeeze multiple blank lines into one.

       -u     Suppress underlining.

       -number
              The screen size to use, in number of lines.

       +number
              Start displaying each file at line number.

       +/string
              The string to be searched in each file before starting to display it.

COMMANDS
       Interactive commands for more are based on vi(1).  Some commands may be preceded by a decimal number, called k in the descriptions below.  In the following descriptions,  ^X  means
       control-X.

              h or ?    Help; display a summary of these commands.  If you forget all other commands, remember this one.

              SPACE     Display next k lines of text.  Defaults to current screen size.

              z         Display next k lines of text.  Defaults to current screen size.  Argument becomes new default.

              RETURN    Display next k lines of text.  Defaults to 1.  Argument becomes new default.

              d or ^D   Scroll k lines.  Default is current scroll size, initially 11.  Argument becomes new default.

              q or Q or INTERRUPT
                        Exit.

              s         Skip forward k lines of text.  Defaults to 1.

              f         Skip forward k screenfuls of text.  Defaults to 1.

              b or ^B   Skip backwards k screenfuls of text.  Defaults to 1.  Only works with files, not pipes.

              '         Go to the place where the last search started.

              =         Display current line number.

              /pattern  Search for kth occurrence of regular expression.  Defaults to 1.

              n         Search for kth occurrence of last regular expression.  Defaults to 1.

              !command or :!command
                        Execute command in a subshell.

              v         Start  up an editor at current line.  The editor is taken from the environment variable VISUAL if defined, or EDITOR if VISUAL is not defined, or defaults to vi if
                        neither VISUAL nor EDITOR is defined.

              ^L        Redraw screen.

              :n        Go to kth next file.  Defaults to 1.

              :p        Go to kth previous file.  Defaults to 1.

              :f        Display current file name and line number.

              .         Repeat previous command.

ENVIRONMENT
       The more command respects the following environment variables, if they exist:

       MORE   This variable may be set with favored options to more.

       SHELL  Current shell in use (normally set by the shell at login time).

       TERM   The terminal type used by more to get the terminal characteristics necessary to manipulate the screen.

       VISUAL The editor the user prefers.  Invoked when command key v is pressed.

       EDITOR The editor of choice when VISUAL is not specified.

SEE ALSO
       vi(1), less(1)

AUTHORS
       Eric Shienbrood, UC Berkeley
       Modified by Geoff Peck, UCB to add underlining, single spacing
       Modified by John Foderaro, UCB to add -c and MORE environment variable

HISTORY
       The more command appeared in 3.0BSD.  This man page documents more version 5.19 (Berkeley 6/29/88), which is currently in use in the Linux community.   Documentation  was  produced
       using several other versions of the man page, and extensive inspection of the source code.

AVAILABILITY
       The more command is part of the util-linux package and is available from Linux Kernel Archive ⟨ftp://ftp.kernel.org/pub/linux/utils/util-linux/⟩.

util-linux                                                                             February 2014                                                                                MORE(1)
****************************************************more ends here****************************************************


****************************************************grep  starts here****************************************************
GREP(1)                                                                           General Commands Manual                                                                           GREP(1)

NAME
       grep, egrep, fgrep - print lines matching a pattern

SYNOPSIS
       grep [OPTIONS] PATTERN [FILE...]
       grep [OPTIONS] [-e PATTERN | -f FILE] [FILE...]

DESCRIPTION
       grep  searches  the  named input FILEs for lines containing a match to the given PATTERN.  If no files are specified, or if the file “-” is given, grep searches standard input.  By
       default, grep prints the matching lines.

       In addition, the variant programs egrep and fgrep are the same as grep -E and grep -F, respectively.  These variants are deprecated, but are provided for backward compatibility.

OPTIONS
   Generic Program Information
       --help Output a usage message and exit.

       -V, --version
              Output the version number of grep and exit.

   Matcher Selection
       -E, --extended-regexp
              Interpret PATTERN as an extended regular expression (ERE, see below).

       -F, --fixed-strings
              Interpret PATTERN as a list of fixed strings (instead of regular expressions), separated by newlines, any of which is to be matched.

       -G, --basic-regexp
              Interpret PATTERN as a basic regular expression (BRE, see below).  This is the default.

       -P, --perl-regexp
              Interpret the pattern as a Perl-compatible regular expression (PCRE).  This is highly experimental and grep -P may warn of unimplemented features.

   Matching Control
       -e PATTERN, --regexp=PATTERN
              Use PATTERN as the pattern.  If this option is used multiple times or is combined with the -f (--file) option, search for all patterns given.  This option  can  be  used  to
              protect a pattern beginning with “-”.

       -f FILE, --file=FILE
              Obtain  patterns from FILE, one per line.  If this option is used multiple times or is combined with the -e (--regexp) option, search for all patterns given.  The empty file
              contains zero patterns, and therefore matches nothing.

       -i, --ignore-case
              Ignore case distinctions in both the PATTERN and the input files.

       -v, --invert-match
              Invert the sense of matching, to select non-matching lines.

       -w, --word-regexp
              Select only those lines containing matches that form whole words.  The test is that the matching substring must either be at the beginning of the line, or preceded by a non-
              word  constituent  character.  Similarly, it must be either at the end of the line or followed by a non-word constituent character.  Word-constituent characters are letters,
              digits, and the underscore.  This option has no effect if -x is also specified.

       -x, --line-regexp
              Select only those matches that exactly match the whole line.  For a regular expression pattern, this is like parenthesizing the pattern and then surrounding it with ^ and $.

       -y     Obsolete synonym for -i.

   General Output Control
       -c, --count
              Suppress normal output; instead print a count of matching lines for each input file.  With the -v, --invert-match option (see below), count non-matching lines.

       --color[=WHEN], --colour[=WHEN]
              Surround the matched (non-empty) strings, matching lines, context lines, file names, line numbers, byte offsets, and separators (for fields and groups of context lines) with
              escape  sequences  to display them in color on the terminal.  The colors are defined by the environment variable GREP_COLORS.  The deprecated environment variable GREP_COLOR
              is still supported, but its setting does not have priority.  WHEN is never, always, or auto.

       -L, --files-without-match
              Suppress normal output; instead print the name of each input file from which no output would normally have been printed.  The scanning will stop on the first match.

       -l, --files-with-matches
              Suppress normal output; instead print the name of each input file from which output would normally have been printed.  The scanning will stop on the first match.

       -m NUM, --max-count=NUM
              Stop reading a file after NUM matching lines.  If the input is standard input from a regular file, and NUM matching lines are output, grep ensures that the standard input is
              positioned  to  just  after  the last matching line before exiting, regardless of the presence of trailing context lines.  This enables a calling process to resume a search.
              When grep stops after NUM matching lines, it outputs any trailing context lines.  When the -c or --count option is also used, grep does not output a count greater than  NUM.
              When the -v or --invert-match option is also used, grep stops after outputting NUM non-matching lines.

       -o, --only-matching
              Print only the matched (non-empty) parts of a matching line, with each such part on a separate output line.

       -q, --quiet, --silent
              Quiet;  do  not write anything to standard output.  Exit immediately with zero status if any match is found, even if an error was detected.  Also see the -s or --no-messages
              option.

       -s, --no-messages
              Suppress error messages about nonexistent or unreadable files.

   Output Line Prefix Control
       -b, --byte-offset
              Print the 0-based byte offset within the input file before each line of output.  If -o (--only-matching) is specified, print the offset of the matching part itself.

       -H, --with-filename
              Print the file name for each match.  This is the default when there is more than one file to search.

       -h, --no-filename
              Suppress the prefixing of file names on output.  This is the default when there is only one file (or only standard input) to search.

       --label=LABEL
              Display input actually coming from standard input as input coming from file LABEL.  This is especially useful when implementing tools like zgrep, e.g.,  gzip  -cd  foo.gz  |
              grep --label=foo -H something.  See also the -H option.

       -n, --line-number
              Prefix each line of output with the 1-based line number within its input file.

       -T, --initial-tab
              Make  sure  that  the  first  character of actual line content lies on a tab stop, so that the alignment of tabs looks normal.  This is useful with options that prefix their
              output to the actual content: -H,-n, and -b.  In order to improve the probability that lines from a single file will all start at the same column, this also causes the  line
              number and byte offset (if present) to be printed in a minimum size field width.

       -u, --unix-byte-offsets
              Report Unix-style byte offsets.  This switch causes grep to report byte offsets as if the file were a Unix-style text file, i.e., with CR characters stripped off.  This will
              produce results identical to running grep on a Unix machine.  This option has no effect unless -b option is also used; it has no effect on platforms other  than  MS-DOS  and
              MS-Windows.

       -Z, --null
              Output  a  zero  byte  (the  ASCII NUL character) instead of the character that normally follows a file name.  For example, grep -lZ outputs a zero byte after each file name
              instead of the usual newline.  This option makes the output unambiguous, even in the presence of file names containing unusual characters like newlines.  This option can  be
              used with commands like find -print0, perl -0, sort -z, and xargs -0 to process arbitrary file names, even those that contain newline characters.

   Context Line Control
       -A NUM, --after-context=NUM
              Print  NUM  lines  of  trailing  context  after  matching  lines.   Places  a  line  containing  a group separator (--) between contiguous groups of matches.  With the -o or
              --only-matching option, this has no effect and a warning is given.

       -B NUM, --before-context=NUM
              Print NUM lines of leading context before matching lines.  Places a line containing  a  group  separator  (--)  between  contiguous  groups  of  matches.   With  the  -o  or
              --only-matching option, this has no effect and a warning is given.

       -C NUM, -NUM, --context=NUM
              Print NUM lines of output context.  Places a line containing a group separator (--) between contiguous groups of matches.  With the -o or --only-matching option, this has no
              effect and a warning is given.

   File and Directory Selection
       -a, --text
              Process a binary file as if it were text; this is equivalent to the --binary-files=text option.

       --binary-files=TYPE
              If a file's data or metadata indicate that the file contains binary data, assume that the file is of type TYPE.  Non-text bytes indicate binary data; these are either output
              bytes that are improperly encoded for the current locale, or null input bytes when the -z option is not given.

              By  default,  TYPE  is  binary,  and  when grep discovers that a file is binary it suppresses any further output, and instead outputs either a one-line message saying that a
              binary file matches, or no message if there is no match.

              If TYPE is without-match, when grep discovers that a file is binary it assumes that the rest of the file does not match; this is equivalent to the -I option.

              If TYPE is text, grep processes a binary file as if it were text; this is equivalent to the -a option.

              When type is binary, grep may treat non-text bytes as line terminators even without the -z option.  This means choosing binary versus  text  can  affect  whether  a  pattern
              matches  a  file.   For  example,  when  type  is binary the pattern q$ might match q immediately followed by a null byte, even though this is not matched when type is text.
              Conversely, when type is binary the pattern . (period) might not match a null byte.

              Warning: The -a option might output binary garbage, which can have nasty side effects if the output is a terminal and if  the  terminal  driver  interprets  some  of  it  as
              commands.  On the other hand, when reading files whose text encodings are unknown, it can be helpful to use -a or to set LC_ALL='C' in the environment, in order to find more
              matches even if the matches are unsafe for direct display.

       -D ACTION, --devices=ACTION
              If an input file is a device, FIFO or socket, use ACTION to process it.  By default, ACTION is read, which means that devices are read just as if they were  ordinary  files.
              If ACTION is skip, devices are silently skipped.

       -d ACTION, --directories=ACTION
              If  an  input  file  is  a  directory, use ACTION to process it.  By default, ACTION is read, i.e., read directories just as if they were ordinary files.  If ACTION is skip,
              silently skip directories.  If ACTION is recurse, read all files under each directory, recursively, following symbolic links only if they are on the command line.   This  is
              equivalent to the -r option.

       --exclude=GLOB
              Skip  any command-line file with a name suffix that matches the pattern GLOB, using wildcard matching; a name suffix is either the whole name, or any suffix starting after a
              / and before a +non-/.  When searching recursively, skip any subfile whose base name matches GLOB; the base name is the part after the last /.  A pattern can use *,  ?,  and
              [...]  as wildcards, and \ to quote a wildcard or backslash character literally.

       --exclude-from=FILE
              Skip files whose base name matches any of the file-name globs read from FILE (using wildcard matching as described under --exclude).

       --exclude-dir=GLOB
              Skip  any  command-line  directory with a name suffix that matches the pattern GLOB.  When searching recursively, skip any subdirectory whose base name matches GLOB.  Ignore
              any redundant trailing slashes in GLOB.

       -I     Process a binary file as if it did not contain matching data; this is equivalent to the --binary-files=without-match option.

       --include=GLOB
              Search only files whose base name matches GLOB (using wildcard matching as described under --exclude).

       -r, --recursive
              Read all files under each directory, recursively, following symbolic links only if they are on the command line.  Note that if no file operand is given,  grep  searches  the
              working directory.  This is equivalent to the -d recurse option.

       -R, --dereference-recursive
              Read all files under each directory, recursively.  Follow all symbolic links, unlike -r.

   Other Options
       --line-buffered
              Use line buffering on output.  This can cause a performance penalty.

       -U, --binary
              Treat  the  file(s)  as  binary.  By default, under MS-DOS and MS-Windows, grep guesses whether a file is text or binary as described for the --binary-files option.  If grep
              decides the file is a text file, it strips the CR characters from the original file contents (to make regular expressions with  ^  and  $  work  correctly).   Specifying  -U
              overrules  this  guesswork,  causing all files to be read and passed to the matching mechanism verbatim; if the file is a text file with CR/LF pairs at the end of each line,
              this will cause some regular expressions to fail.  This option has no effect on platforms other than MS-DOS and MS-Windows.

       -z, --null-data
              Treat input and output data as sequences of lines, each terminated by a zero byte (the ASCII NUL character) instead of a newline.  Like the -Z or --null option, this  option
              can be used with commands like sort -z to process arbitrary file names.

REGULAR EXPRESSIONS
       A regular expression is a pattern that describes a set of strings.  Regular expressions are constructed analogously to arithmetic expressions, by using various operators to combine
       smaller expressions.

       grep understands three different versions of regular expression syntax: “basic” (BRE), “extended” (ERE) and “perl” (PCRE).   In  GNU grep,  there  is  no  difference  in  available
       functionality  between  basic  and extended syntaxes.  In other implementations, basic regular expressions are less powerful.  The following description applies to extended regular
       expressions; differences for basic regular expressions are summarized afterwards.  Perl-compatible  regular  expressions  give  additional  functionality,  and  are  documented  in
       pcresyntax(3) and pcrepattern(3), but work only if PCRE is available in the system.

       The  fundamental  building  blocks are the regular expressions that match a single character.  Most characters, including all letters and digits, are regular expressions that match
       themselves.  Any meta-character with special meaning may be quoted by preceding it with a backslash.

       The period . matches any single character.

   Character Classes and Bracket Expressions
       A bracket expression is a list of characters enclosed by [ and ].  It matches any single character in that list; if the first character of the list is the caret ^ then  it  matches
       any character not in the list.  For example, the regular expression [0123456789] matches any single digit.

       Within a bracket expression, a range expression consists of two characters separated by a hyphen.  It matches any single character that sorts between the two characters, inclusive,
       using the locale's collating sequence and character set.  For example, in the default C locale, [a-d] is equivalent to [abcd].  Many locales sort characters  in  dictionary  order,
       and  in  these  locales  [a-d]  is  typically  not  equivalent  to  [abcd];  it  might be equivalent to [aBbCcDd], for example.  To obtain the traditional interpretation of bracket
       expressions, you can use the C locale by setting the LC_ALL environment variable to the value C.

       Finally, certain named classes of characters are predefined within bracket expressions, as follows.  Their names are self explanatory, and they are [:alnum:], [:alpha:], [:cntrl:],
       [:digit:],  [:graph:],  [:lower:],  [:print:],  [:punct:],  [:space:],  [:upper:], and [:xdigit:].  For example, [[:alnum:]] means the character class of numbers and letters in the
       current locale. In the C locale and ASCII character set encoding, this is the same as [0-9A-Za-z].  (Note that the brackets in these class names are part of the symbolic names, and
       must  be included in addition to the brackets delimiting the bracket expression.)  Most meta-characters lose their special meaning inside bracket expressions.  To include a literal
       ] place it first in the list.  Similarly, to include a literal ^ place it anywhere but first.  Finally, to include a literal - place it last.

   Anchoring
       The caret ^ and the dollar sign $ are meta-characters that respectively match the empty string at the beginning and end of a line.

   The Backslash Character and Special Expressions
       The symbols \< and \> respectively match the empty string at the beginning and end of a word.  The symbol \b matches the empty string at the edge of a  word,  and  \B  matches  the
       empty string provided it's not at the edge of a word.  The symbol \w is a synonym for [_[:alnum:]] and \W is a synonym for [^_[:alnum:]].

   Repetition
       A regular expression may be followed by one of several repetition operators:
       ?      The preceding item is optional and matched at most once.
       *      The preceding item will be matched zero or more times.
       +      The preceding item will be matched one or more times.
       {n}    The preceding item is matched exactly n times.
       {n,}   The preceding item is matched n or more times.
       {,m}   The preceding item is matched at most m times.  This is a GNU extension.
       {n,m}  The preceding item is matched at least n times, but not more than m times.

   Concatenation
       Two  regular  expressions  may  be concatenated; the resulting regular expression matches any string formed by concatenating two substrings that respectively match the concatenated
       expressions.

   Alternation
       Two regular expressions may be joined by the infix operator |; the resulting regular expression matches any string matching either alternate expression.

   Precedence
       Repetition takes precedence over concatenation, which in turn takes precedence over alternation.  A whole expression may be enclosed in parentheses  to  override  these  precedence
       rules and form a subexpression.

   Back References and Subexpressions
       The back-reference \n, where n is a single digit, matches the substring previously matched by the nth parenthesized subexpression of the regular expression.

   Basic vs Extended Regular Expressions
       In basic regular expressions the meta-characters ?, +, {, |, (, and ) lose their special meaning; instead use the backslashed versions \?, \+, \{, \|, \(, and \).

ENVIRONMENT VARIABLES
       The behavior of grep is affected by the following environment variables.

       The  locale  for  category LC_foo is specified by examining the three environment variables LC_ALL, LC_foo, LANG, in that order.  The first of these variables that is set specifies
       the locale.  For example, if LC_ALL is not set, but LC_MESSAGES is set to pt_BR, then the Brazilian Portuguese locale is used for the LC_MESSAGES category.  The C locale is used if
       none  of these environment variables are set, if the locale catalog is not installed, or if grep was not compiled with national language support (NLS).  The shell command locale -a
       lists locales that are currently available.

       GREP_OPTIONS
              This variable specifies default options to be placed in front of any explicit options.  As this causes problems when writing portable scripts, this feature will  be  removed
              in a future release of grep, and grep warns if it is used.  Please use an alias or script instead.

       GREP_COLOR
              This  variable  specifies  the  color  used  to  highlight  matched  (non-empty)  text.   It  is deprecated in favor of GREP_COLORS, but still supported.  The mt, ms, and mc
              capabilities of GREP_COLORS have priority over it.  It can only specify the color used to highlight the matching non-empty text in any matching line (a  selected  line  when
              the  -v  command-line  option  is  omitted,  or a context line when -v is specified).  The default is 01;31, which means a bold red foreground text on the terminal's default
              background.

       GREP_COLORS
              Specifies the colors and other attributes used to highlight various  parts  of  the  output.   Its  value  is  a  colon-separated  list  of  capabilities  that  defaults  to
              ms=01;31:mc=01;31:sl=:cx=:fn=35:ln=32:bn=32:se=36 with the rv and ne boolean capabilities omitted (i.e., false).  Supported capabilities are as follows.

              sl=    SGR  substring for whole selected lines (i.e., matching lines when the -v command-line option is omitted, or non-matching lines when -v is specified).  If however the
                     boolean rv capability and the -v command-line option are both specified, it applies to context matching lines instead.  The default is  empty  (i.e.,  the  terminal's
                     default color pair).

              cx=    SGR  substring  for whole context lines (i.e., non-matching lines when the -v command-line option is omitted, or matching lines when -v is specified).  If however the
                     boolean rv capability and the -v command-line option are both specified, it applies to  selected  non-matching  lines  instead.   The  default  is  empty  (i.e.,  the
                     terminal's default color pair).

              rv     Boolean  value  that  reverses  (swaps)  the  meanings  of the sl= and cx= capabilities when the -v command-line option is specified.  The default is false (i.e., the
                     capability is omitted).

              mt=01;31
                     SGR substring for matching non-empty text in any matching line (i.e., a selected line when the -v command-line option is  omitted,  or  a  context  line  when  -v  is
                     specified).   Setting  this  is  equivalent  to  setting  both ms= and mc= at once to the same value.  The default is a bold red text foreground over the current line
                     background.

              ms=01;31
                     SGR substring for matching non-empty text in a selected line.  (This is only used when the -v command-line option is omitted.)  The effect of the sl= (or cx=  if  rv)
                     capability remains active when this kicks in.  The default is a bold red text foreground over the current line background.

              mc=01;31
                     SGR  substring for matching non-empty text in a context line.  (This is only used when the -v command-line option is specified.)  The effect of the cx= (or sl= if rv)
                     capability remains active when this kicks in.  The default is a bold red text foreground over the current line background.

              fn=35  SGR substring for file names prefixing any content line.  The default is a magenta text foreground over the terminal's default background.

              ln=32  SGR substring for line numbers prefixing any content line.  The default is a green text foreground over the terminal's default background.

              bn=32  SGR substring for byte offsets prefixing any content line.  The default is a green text foreground over the terminal's default background.

              se=36  SGR substring for separators that are inserted between selected line fields (:), between context line fields, (-), and between groups of adjacent lines  when  nonzero
                     context is specified (--).  The default is a cyan text foreground over the terminal's default background.

              ne     Boolean  value  that  prevents  clearing to the end of line using Erase in Line (EL) to Right (\33[K) each time a colorized item ends.  This is needed on terminals on
                     which EL is not supported.  It is otherwise useful on terminals for which the back_color_erase (bce) boolean terminfo capability  does  not  apply,  when  the  chosen
                     highlight colors do not affect the background, or when EL is too slow or causes too much flicker.  The default is false (i.e., the capability is omitted).

              Note that boolean capabilities have no =...  part.  They are omitted (i.e., false) by default and become true when specified.

              See  the Select Graphic Rendition (SGR) section in the documentation of the text terminal that is used for permitted values and their meaning as character attributes.  These
              substring values are integers in decimal representation and can be concatenated with semicolons.  grep takes care of assembling the  result  into  a  complete  SGR  sequence
              (\33[...m).   Common  values to concatenate include 1 for bold, 4 for underline, 5 for blink, 7 for inverse, 39 for default foreground color, 30 to 37 for foreground colors,
              90 to 97 for 16-color mode foreground colors, 38;5;0 to 38;5;255 for 88-color and 256-color modes foreground colors, 49 for default background color, 40 to 47 for background
              colors, 100 to 107 for 16-color mode background colors, and 48;5;0 to 48;5;255 for 88-color and 256-color modes background colors.

       LC_ALL, LC_COLLATE, LANG
              These variables specify the locale for the LC_COLLATE category, which determines the collating sequence used to interpret range expressions like [a-z].

       LC_ALL, LC_CTYPE, LANG
              These  variables specify the locale for the LC_CTYPE category, which determines the type of characters, e.g., which characters are whitespace.  This category also determines
              the character encoding, that is, whether text is encoded in UTF-8, ASCII, or some other encoding.  In the C or POSIX locale, all characters are encoded as a single byte  and
              every byte is a valid character.

       LC_ALL, LC_MESSAGES, LANG
              These  variables  specify  the  locale  for  the LC_MESSAGES category, which determines the language that grep uses for messages.  The default C locale uses American English
              messages.

       POSIXLY_CORRECT
              If set, grep behaves as POSIX requires; otherwise, grep behaves more like other GNU programs.  POSIX requires that options that follow file names must  be  treated  as  file
              names;  by  default,  such  options are permuted to the front of the operand list and are treated as options.  Also, POSIX requires that unrecognized options be diagnosed as
              “illegal”, but since they are not really against the law the default is to diagnose them as “invalid”.  POSIXLY_CORRECT also disables _N_GNU_nonoption_argv_flags_, described
              below.

       _N_GNU_nonoption_argv_flags_
              (Here  N  is grep's numeric process ID.)  If the ith character of this environment variable's value is 1, do not consider the ith operand of grep to be an option, even if it
              appears to be one.  A shell can put this variable in the environment for each command it runs, specifying which operands are the results of file name wildcard expansion  and
              therefore should not be treated as options.  This behavior is available only with the GNU C library, and only when POSIXLY_CORRECT is not set.

EXIT STATUS
       Normally  the  exit  status  is  0  if a line is selected, 1 if no lines were selected, and 2 if an error occurred.  However, if the -q or --quiet or --silent is used and a line is
       selected, the exit status is 0 even if an error occurred.

COPYRIGHT
       Copyright 1998-2000, 2002, 2005-2017 Free Software Foundation, Inc.

       This is free software; see the source for copying conditions.  There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

BUGS
   Reporting Bugs
       Email bug reports to the bug-reporting address ⟨bug-grep@gnu.org⟩.  An email archive ⟨http://lists.gnu.org/mailman/listinfo/bug-grep⟩ and a bug tracker ⟨http://debbugs.gnu.org/cgi/
       pkgreport.cgi?package=grep⟩ are available.

   Known Bugs
       Large repetition counts in the {n,m} construct may cause grep to use lots of memory.  In addition, certain other obscure regular expressions require exponential time and space, and
       may cause grep to run out of memory.

       Back-references are very slow, and may require exponential time.

SEE ALSO
   Regular Manual Pages
       awk(1), cmp(1), diff(1), find(1), gzip(1), perl(1), sed(1), sort(1), xargs(1), zgrep(1), read(2), pcre(3), pcresyntax(3), pcrepattern(3), terminfo(5), glob(7), regex(7).

   POSIX Programmer's Manual Page
       grep(1p).

   Full Documentation
       A complete manual ⟨http://www.gnu.org/software/grep/manual/⟩ is available.  If the info and grep programs are properly installed at your site, the command

              info grep

       should give you access to the complete manual.

NOTES
       This man page is maintained only fitfully; the full documentation is often more up-to-date.

User Commands                                                                           GNU grep 3.0                                                                                GREP(1)
****************************************************grep  ends here****************************************************


****************************************************chmod  starts here****************************************************
CHMOD(1)                                                                               User Commands                                                                               CHMOD(1)

NAME
       chmod - change file mode bits

SYNOPSIS
       chmod [OPTION]... MODE[,MODE]... FILE...
       chmod [OPTION]... OCTAL-MODE FILE...
       chmod [OPTION]... --reference=RFILE FILE...

DESCRIPTION
       This  manual  page  documents  the  GNU  version  of chmod.  chmod changes the file mode bits of each given file according to mode, which can be either a symbolic representation of
       changes to make, or an octal number representing the bit pattern for the new mode bits.

       The format of a symbolic mode is [ugoa...][[-+=][perms...]...], where perms is either zero or more letters from the set rwxXst, or a single letter from the set ugo.  Multiple  sym‐
       bolic modes can be given, separated by commas.

       A  combination  of  the letters ugoa controls which users' access to the file will be changed: the user who owns it (u), other users in the file's group (g), other users not in the
       file's group (o), or all users (a).  If none of these are given, the effect is as if (a) were given, but bits that are set in the umask are not affected.

       The operator + causes the selected file mode bits to be added to the existing file mode bits of each file; - causes them to be removed; and = causes them to  be  added  and  causes
       unmentioned bits to be removed except that a directory's unmentioned set user and group ID bits are not affected.

       The  letters  rwxXst  select  file mode bits for the affected users: read (r), write (w), execute (or search for directories) (x), execute/search only if the file is a directory or
       already has execute permission for some user (X), set user or group ID on execution (s), restricted deletion flag or sticky bit (t).  Instead of one or more of these  letters,  you
       can  specify  exactly  one of the letters ugo: the permissions granted to the user who owns the file (u), the permissions granted to other users who are members of the file's group
       (g), and the permissions granted to users that are in neither of the two preceding categories (o).

       A numeric mode is from one to four octal digits (0-7), derived by adding up the bits with values 4, 2, and 1.  Omitted digits are assumed to be  leading  zeros.   The  first  digit
       selects  the  set user ID (4) and set group ID (2) and restricted deletion or sticky (1) attributes.  The second digit selects permissions for the user who owns the file: read (4),
       write (2), and execute (1); the third selects permissions for other users in the file's group, with the same values; and the fourth for other users not in the  file's  group,  with
       the same values.

       chmod  never  changes  the  permissions of symbolic links; the chmod system call cannot change their permissions.  This is not a problem since the permissions of symbolic links are
       never used.  However, for each symbolic link listed on the command line, chmod changes the permissions of the pointed-to file.  In contrast, chmod ignores  symbolic  links  encoun‐
       tered during recursive directory traversals.

SETUID AND SETGID BITS
       chmod  clears  the  set-group-ID  bit of a regular file if the file's group ID does not match the user's effective group ID or one of the user's supplementary group IDs, unless the
       user has appropriate privileges.  Additional restrictions may cause the set-user-ID and set-group-ID bits of MODE or RFILE to be ignored.  This behavior depends on the  policy  and
       functionality of the underlying chmod system call.  When in doubt, check the underlying system behavior.

       chmod  preserves  a  directory's set-user-ID and set-group-ID bits unless you explicitly specify otherwise.  You can set or clear the bits with symbolic modes like u+s and g-s, and
       you can set (but not clear) the bits with a numeric mode.

RESTRICTED DELETION FLAG OR STICKY BIT
       The restricted deletion flag or sticky bit is a single bit, whose interpretation depends on the file type.  For directories, it prevents unprivileged users from removing or  renam‐
       ing a file in the directory unless they own the file or the directory; this is called the restricted deletion flag for the directory, and is commonly found on world-writable direc‐
       tories like /tmp.  For regular files on some older systems, the bit saves the program's text image on the swap device so it will load more quickly when  run;  this  is  called  the
       sticky bit.

OPTIONS
       Change the mode of each FILE to MODE.  With --reference, change the mode of each FILE to that of RFILE.

       -c, --changes
              like verbose but report only when a change is made

       -f, --silent, --quiet
              suppress most error messages

       -v, --verbose
              output a diagnostic for every file processed

       --no-preserve-root
              do not treat '/' specially (the default)

       --preserve-root
              fail to operate recursively on '/'

       --reference=RFILE
              use RFILE's mode instead of MODE values

       -R, --recursive
              change files and directories recursively

       --help display this help and exit

       --version
              output version information and exit

       Each MODE is of the form '[ugoa]*([-+=]([rwxXst]*|[ugo]))+|[-+=][0-7]+'.

AUTHOR
       Written by David MacKenzie and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report chmod translation bugs to <http://translationproject.org/team/>

SEE ALSO
       chmod(2)

       Full documentation at: <http://www.gnu.org/software/coreutils/chmod>
       or available locally via: info '(coreutils) chmod invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                               CHMOD(1)
****************************************************chmod  ends here****************************************************


****************************************************ps  starts here****************************************************
****************************************************ps  ends here****************************************************


****************************************************kill  starts here****************************************************
****************************************************kill  ends here****************************************************


****************************************************ssh  starts here****************************************************
SSH(1)                                                                          BSD General Commands Manual                                                                          SSH(1)

NAME
     ssh — OpenSSH SSH client (remote login program)

SYNOPSIS
     ssh [-1246AaCfGgKkMNnqsTtVvXxYy] [-b bind_address] [-c cipher_spec] [-D [bind_address:]port] [-E log_file] [-e escape_char] [-F configfile] [-I pkcs11] [-i identity_file]
         [-J [user@]host[:port]] [-L address] [-l login_name] [-m mac_spec] [-O ctl_cmd] [-o option] [-p port] [-Q query_option] [-R address] [-S ctl_path] [-W host:port]
         [-w local_tun[:remote_tun]] [user@]hostname [command]

DESCRIPTION
     ssh (SSH client) is a program for logging into a remote machine and for executing commands on a remote machine.  It is intended to provide secure encrypted communications between two
     untrusted hosts over an insecure network.  X11 connections, arbitrary TCP ports and UNIX-domain sockets can also be forwarded over the secure channel.

     ssh connects and logs into the specified hostname (with optional user name).  The user must prove his/her identity to the remote machine using one of several methods (see below).

     If command is specified, it is executed on the remote host instead of a login shell.

     The options are as follows:

     -1      Forces ssh to try protocol version 1 only.

     -2      Forces ssh to try protocol version 2 only.

     -4      Forces ssh to use IPv4 addresses only.

     -6      Forces ssh to use IPv6 addresses only.

     -A      Enables forwarding of the authentication agent connection.  This can also be specified on a per-host basis in a configuration file.

             Agent forwarding should be enabled with caution.  Users with the ability to bypass file permissions on the remote host (for the agent's UNIX-domain socket) can access the
             local agent through the forwarded connection.  An attacker cannot obtain key material from the agent, however they can perform operations on the keys that enable them to
             authenticate using the identities loaded into the agent.

     -a      Disables forwarding of the authentication agent connection.

     -b bind_address
             Use bind_address on the local machine as the source address of the connection.  Only useful on systems with more than one address.

     -C      Requests compression of all data (including stdin, stdout, stderr, and data for forwarded X11, TCP and UNIX-domain connections).  The compression algorithm is the same used
             by gzip(1), and the “level” can be controlled by the CompressionLevel option for protocol version 1.  Compression is desirable on modem lines and other slow connections, but
             will only slow down things on fast networks.  The default value can be set on a host-by-host basis in the configuration files; see the Compression option.

     -c cipher_spec
             Selects the cipher specification for encrypting the session.

             Protocol version 1 allows specification of a single cipher.  The supported values are “3des”, “blowfish”, and “des”.  For protocol version 2, cipher_spec is a comma-separated
             list of ciphers listed in order of preference.  See the Ciphers keyword in ssh_config(5) for more information.

     -D [bind_address:]port
             Specifies a local “dynamic” application-level port forwarding.  This works by allocating a socket to listen to port on the local side, optionally bound to the specified
             bind_address.  Whenever a connection is made to this port, the connection is forwarded over the secure channel, and the application protocol is then used to determine where
             to connect to from the remote machine.  Currently the SOCKS4 and SOCKS5 protocols are supported, and ssh will act as a SOCKS server.  Only root can forward privileged ports.
             Dynamic port forwardings can also be specified in the configuration file.

             IPv6 addresses can be specified by enclosing the address in square brackets.  Only the superuser can forward privileged ports.  By default, the local port is bound in accor‐
             dance with the GatewayPorts setting.  However, an explicit bind_address may be used to bind the connection to a specific address.  The bind_address of “localhost” indicates
             that the listening port be bound for local use only, while an empty address or ‘*’ indicates that the port should be available from all interfaces.

     -E log_file
             Append debug logs to log_file instead of standard error.

     -e escape_char
             Sets the escape character for sessions with a pty (default: ‘~’).  The escape character is only recognized at the beginning of a line.  The escape character followed by a dot
             (‘.’) closes the connection; followed by control-Z suspends the connection; and followed by itself sends the escape character once.  Setting the character to “none” disables
             any escapes and makes the session fully transparent.

     -F configfile
             Specifies an alternative per-user configuration file.  If a configuration file is given on the command line, the system-wide configuration file (/etc/ssh_config) will be
             ignored.  The default for the per-user configuration file is ~/.ssh/config.

     -f      Requests ssh to go to background just before command execution.  This is useful if ssh is going to ask for passwords or passphrases, but the user wants it in the background.
             This implies -n.  The recommended way to start X11 programs at a remote site is with something like ssh -f host xterm.

             If the ExitOnForwardFailure configuration option is set to “yes”, then a client started with -f will wait for all remote port forwards to be successfully established before
             placing itself in the background.

     -G      Causes ssh to print its configuration after evaluating Host and Match blocks and exit.

     -g      Allows remote hosts to connect to local forwarded ports.  If used on a multiplexed connection, then this option must be specified on the master process.

     -I pkcs11
             Specify the PKCS#11 shared library ssh should use to communicate with a PKCS#11 token providing the user's private RSA key.

     -i identity_file
             Selects a file from which the identity (private key) for public key authentication is read.  The default is ~/.ssh/identity for protocol version 1, and ~/.ssh/id_dsa,
             ~/.ssh/id_ecdsa, ~/.ssh/id_ed25519 and ~/.ssh/id_rsa for protocol version 2.  Identity files may also be specified on a per-host basis in the configuration file.  It is pos‐
             sible to have multiple -i options (and multiple identities specified in configuration files).  If no certificates have been explicitly specified by the CertificateFile direc‐
             tive, ssh will also try to load certificate information from the filename obtained by appending -cert.pub to identity filenames.

     -J [user@]host[:port]
             Connect to the target host by first making a ssh connection to the jump host and then establishing a TCP forwarding to the ultimate destination from there.  Multiple jump
             hops may be specified separated by comma characters.  This is a shortcut to specify a ProxyJump configuration directive.

     -K      Enables GSSAPI-based authentication and forwarding (delegation) of GSSAPI credentials to the server.

     -k      Disables forwarding (delegation) of GSSAPI credentials to the server.

     -L [bind_address:]port:host:hostport
     -L [bind_address:]port:remote_socket
     -L local_socket:host:hostport
     -L local_socket:remote_socket
             Specifies that connections to the given TCP port or Unix socket on the local (client) host are to be forwarded to the given host and port, or Unix socket, on the remote side.
             This works by allocating a socket to listen to either a TCP port on the local side, optionally bound to the specified bind_address, or to a Unix socket.  Whenever a connec‐
             tion is made to the local port or socket, the connection is forwarded over the secure channel, and a connection is made to either host port hostport, or the Unix socket
             remote_socket, from the remote machine.

             Port forwardings can also be specified in the configuration file.  Only the superuser can forward privileged ports.  IPv6 addresses can be specified by enclosing the address
             in square brackets.

             By default, the local port is bound in accordance with the GatewayPorts setting.  However, an explicit bind_address may be used to bind the connection to a specific address.
             The bind_address of “localhost” indicates that the listening port be bound for local use only, while an empty address or ‘*’ indicates that the port should be available from
             all interfaces.

     -l login_name
             Specifies the user to log in as on the remote machine.  This also may be specified on a per-host basis in the configuration file.

     -M      Places the ssh client into “master” mode for connection sharing.  Multiple -M options places ssh into “master” mode with confirmation required before slave connections are
             accepted.  Refer to the description of ControlMaster in ssh_config(5) for details.

     -m mac_spec
             A comma-separated list of MAC (message authentication code) algorithms, specified in order of preference.  See the MACs keyword for more information.

     -N      Do not execute a remote command.  This is useful for just forwarding ports.

     -n      Redirects stdin from /dev/null (actually, prevents reading from stdin).  This must be used when ssh is run in the background.  A common trick is to use this to run X11 pro‐
             grams on a remote machine.  For example, ssh -n shadows.cs.hut.fi emacs & will start an emacs on shadows.cs.hut.fi, and the X11 connection will be automatically forwarded
             over an encrypted channel.  The ssh program will be put in the background.  (This does not work if ssh needs to ask for a password or passphrase; see also the -f option.)

     -O ctl_cmd
             Control an active connection multiplexing master process.  When the -O option is specified, the ctl_cmd argument is interpreted and passed to the master process.  Valid com‐
             mands are: “check” (check that the master process is running), “forward” (request forwardings without command execution), “cancel” (cancel forwardings), “exit” (request the
             master to exit), and “stop” (request the master to stop accepting further multiplexing requests).

     -o option
             Can be used to give options in the format used in the configuration file.  This is useful for specifying options for which there is no separate command-line flag.  For full
             details of the options listed below, and their possible values, see ssh_config(5).

                   AddKeysToAgent
                   AddressFamily
                   BatchMode
                   BindAddress
                   CanonicalDomains
                   CanonicalizeFallbackLocal
                   CanonicalizeHostname
                   CanonicalizeMaxDots
                   CanonicalizePermittedCNAMEs
                   CertificateFile
                   ChallengeResponseAuthentication
                   CheckHostIP
                   Cipher
                   Ciphers
                   ClearAllForwardings
                   Compression
                   CompressionLevel
                   ConnectionAttempts
                   ConnectTimeout
                   ControlMaster
                   ControlPath
                   ControlPersist
                   DynamicForward
                   EscapeChar
                   ExitOnForwardFailure
                   FingerprintHash
                   ForwardAgent
                   ForwardX11
                   ForwardX11Timeout
                   ForwardX11Trusted
                   GatewayPorts
                   GlobalKnownHostsFile
                   GSSAPIAuthentication
                   GSSAPIDelegateCredentials
                   HashKnownHosts
                   Host
                   HostbasedAuthentication
                   HostbasedKeyTypes
                   HostKeyAlgorithms
                   HostKeyAlias
                   HostName
                   IdentitiesOnly
                   IdentityAgent
                   IdentityFile
                   Include
                   IPQoS
                   KbdInteractiveAuthentication
                   KbdInteractiveDevices
                   KexAlgorithms
                   LocalCommand
                   LocalForward
                   LogLevel
                   MACs
                   Match
                   NoHostAuthenticationForLocalhost
                   NumberOfPasswordPrompts
                   PasswordAuthentication
                   PermitLocalCommand
                   PKCS11Provider
                   Port
                   PreferredAuthentications
                   Protocol
                   ProxyCommand
                   ProxyJump
                   ProxyUseFdpass
                   PubkeyAcceptedKeyTypes
                   PubkeyAuthentication
                   RekeyLimit
                   RemoteForward
                   RequestTTY
                   RhostsRSAAuthentication
                   RSAAuthentication
                   SendEnv
                   ServerAliveInterval
                   ServerAliveCountMax
                   StreamLocalBindMask
                   StreamLocalBindUnlink
                   StrictHostKeyChecking
                   TCPKeepAlive
                   Tunnel
                   TunnelDevice
                   UpdateHostKeys
                   UsePrivilegedPort
                   User
                   UserKnownHostsFile
                   VerifyHostKeyDNS
                   VisualHostKey
                   XAuthLocation

     -p port
             Port to connect to on the remote host.  This can be specified on a per-host basis in the configuration file.

     -Q query_option
             Queries ssh for the algorithms supported for the specified version 2.  The available features are: cipher (supported symmetric ciphers), cipher-auth (supported symmetric
             ciphers that support authenticated encryption), mac (supported message integrity codes), kex (key exchange algorithms), key (key types), key-cert (certificate key types),
             key-plain (non-certificate key types), and protocol-version (supported SSH protocol versions).

     -q      Quiet mode.  Causes most warning and diagnostic messages to be suppressed.

     -R [bind_address:]port:host:hostport
     -R [bind_address:]port:local_socket
     -R remote_socket:host:hostport
     -R remote_socket:local_socket
             Specifies that connections to the given TCP port or Unix socket on the remote (server) host are to be forwarded to the given host and port, or Unix socket, on the local side.
             This works by allocating a socket to listen to either a TCP port or to a Unix socket on the remote side.  Whenever a connection is made to this port or Unix socket, the con‐
             nection is forwarded over the secure channel, and a connection is made to either host port hostport, or local_socket, from the local machine.

             Port forwardings can also be specified in the configuration file.  Privileged ports can be forwarded only when logging in as root on the remote machine.  IPv6 addresses can
             be specified by enclosing the address in square brackets.

             By default, TCP listening sockets on the server will be bound to the loopback interface only.  This may be overridden by specifying a bind_address.  An empty bind_address, or
             the address ‘*’, indicates that the remote socket should listen on all interfaces.  Specifying a remote bind_address will only succeed if the server's GatewayPorts option is
             enabled (see sshd_config(5)).

             If the port argument is ‘0’, the listen port will be dynamically allocated on the server and reported to the client at run time.  When used together with -O forward the allo‐
             cated port will be printed to the standard output.

     -S ctl_path
             Specifies the location of a control socket for connection sharing, or the string “none” to disable connection sharing.  Refer to the description of ControlPath and
             ControlMaster in ssh_config(5) for details.

     -s      May be used to request invocation of a subsystem on the remote system.  Subsystems facilitate the use of SSH as a secure transport for other applications (e.g. sftp(1)).  The
             subsystem is specified as the remote command.

     -T      Disable pseudo-terminal allocation.

     -t      Force pseudo-terminal allocation.  This can be used to execute arbitrary screen-based programs on a remote machine, which can be very useful, e.g. when implementing menu ser‐
             vices.  Multiple -t options force tty allocation, even if ssh has no local tty.

     -V      Display the version number and exit.

     -v      Verbose mode.  Causes ssh to print debugging messages about its progress.  This is helpful in debugging connection, authentication, and configuration problems.  Multiple -v
             options increase the verbosity.  The maximum is 3.

     -W host:port
             Requests that standard input and output on the client be forwarded to host on port over the secure channel.  Implies -N, -T, ExitOnForwardFailure and ClearAllForwardings,
             though these can be overridden in the configuration file or using -o command line options.

     -w local_tun[:remote_tun]
             Requests tunnel device forwarding with the specified tun(4) devices between the client (local_tun) and the server (remote_tun).

             The devices may be specified by numerical ID or the keyword “any”, which uses the next available tunnel device.  If remote_tun is not specified, it defaults to “any”.  See
             also the Tunnel and TunnelDevice directives in ssh_config(5).  If the Tunnel directive is unset, it is set to the default tunnel mode, which is “point-to-point”.

     -X      Enables X11 forwarding.  This can also be specified on a per-host basis in a configuration file.

             X11 forwarding should be enabled with caution.  Users with the ability to bypass file permissions on the remote host (for the user's X authorization database) can access the
             local X11 display through the forwarded connection.  An attacker may then be able to perform activities such as keystroke monitoring.

             For this reason, X11 forwarding is subjected to X11 SECURITY extension restrictions by default.  Please refer to the ssh -Y option and the ForwardX11Trusted directive in
             ssh_config(5) for more information.

     -x      Disables X11 forwarding.

     -Y      Enables trusted X11 forwarding.  Trusted X11 forwardings are not subjected to the X11 SECURITY extension controls.

     -y      Send log information using the syslog(3) system module.  By default this information is sent to stderr.

     ssh may additionally obtain configuration data from a per-user configuration file and a system-wide configuration file.  The file format and configuration options are described in
     ssh_config(5).

AUTHENTICATION
     The OpenSSH SSH client supports SSH protocols 1 and 2.  The default is to use protocol 2 only, though this can be changed via the Protocol option in ssh_config(5) or the -1 and -2
     options (see above).  Protocol 1 should not be used and is only offered to support legacy devices.  It suffers from a number of cryptographic weaknesses and doesn't support many of
     the advanced features available for protocol 2.

     The methods available for authentication are: GSSAPI-based authentication, host-based authentication, public key authentication, challenge-response authentication, and password
     authentication.  Authentication methods are tried in the order specified above, though PreferredAuthentications can be used to change the default order.

     Host-based authentication works as follows: If the machine the user logs in from is listed in /etc/hosts.equiv or /etc/shosts.equiv on the remote machine, and the user names are the
     same on both sides, or if the files ~/.rhosts or ~/.shosts exist in the user's home directory on the remote machine and contain a line containing the name of the client machine and
     the name of the user on that machine, the user is considered for login.  Additionally, the server must be able to verify the client's host key (see the description of
     /etc/ssh_known_hosts and ~/.ssh/known_hosts, below) for login to be permitted.  This authentication method closes security holes due to IP spoofing, DNS spoofing, and routing spoof‐
     ing.  [Note to the administrator: /etc/hosts.equiv, ~/.rhosts, and the rlogin/rsh protocol in general, are inherently insecure and should be disabled if security is desired.]

     Public key authentication works as follows: The scheme is based on public-key cryptography, using cryptosystems where encryption and decryption are done using separate keys, and it
     is unfeasible to derive the decryption key from the encryption key.  The idea is that each user creates a public/private key pair for authentication purposes.  The server knows the
     public key, and only the user knows the private key.  ssh implements public key authentication protocol automatically, using one of the DSA, ECDSA, Ed25519 or RSA algorithms.  The
     HISTORY section of ssl(8) contains a brief discussion of the DSA and RSA algorithms.

     The file ~/.ssh/authorized_keys lists the public keys that are permitted for logging in.  When the user logs in, the ssh program tells the server which key pair it would like to use
     for authentication.  The client proves that it has access to the private key and the server checks that the corresponding public key is authorized to accept the account.

     The user creates his/her key pair by running ssh-keygen(1).  This stores the private key in ~/.ssh/identity (protocol 1), ~/.ssh/id_dsa (DSA), ~/.ssh/id_ecdsa (ECDSA),
     ~/.ssh/id_ed25519 (Ed25519), or ~/.ssh/id_rsa (RSA) and stores the public key in ~/.ssh/identity.pub (protocol 1), ~/.ssh/id_dsa.pub (DSA), ~/.ssh/id_ecdsa.pub (ECDSA),
     ~/.ssh/id_ed25519.pub (Ed25519), or ~/.ssh/id_rsa.pub (RSA) in the user's home directory.  The user should then copy the public key to ~/.ssh/authorized_keys in his/her home direc‐
     tory on the remote machine.  The authorized_keys file corresponds to the conventional ~/.rhosts file, and has one key per line, though the lines can be very long.  After this, the
     user can log in without giving the password.

     A variation on public key authentication is available in the form of certificate authentication: instead of a set of public/private keys, signed certificates are used.  This has the
     advantage that a single trusted certification authority can be used in place of many public/private keys.  See the CERTIFICATES section of ssh-keygen(1) for more information.

     The most convenient way to use public key or certificate authentication may be with an authentication agent.  See ssh-agent(1) and (optionally) the AddKeysToAgent directive in
     ssh_config(5) for more information.

     Challenge-response authentication works as follows: The server sends an arbitrary "challenge" text, and prompts for a response.  Examples of challenge-response authentication include
     BSD Authentication (see login.conf(5)) and PAM (some non-OpenBSD systems).

     Finally, if other authentication methods fail, ssh prompts the user for a password.  The password is sent to the remote host for checking; however, since all communications are
     encrypted, the password cannot be seen by someone listening on the network.

     ssh automatically maintains and checks a database containing identification for all hosts it has ever been used with.  Host keys are stored in ~/.ssh/known_hosts in the user's home
     directory.  Additionally, the file /etc/ssh_known_hosts is automatically checked for known hosts.  Any new hosts are automatically added to the user's file.  If a host's identifica‐
     tion ever changes, ssh warns about this and disables password authentication to prevent server spoofing or man-in-the-middle attacks, which could otherwise be used to circumvent the
     encryption.  The StrictHostKeyChecking option can be used to control logins to machines whose host key is not known or has changed.

     When the user's identity has been accepted by the server, the server either executes the given command in a non-interactive session or, if no command has been specified, logs into
     the machine and gives the user a normal shell as an interactive session.  All communication with the remote command or shell will be automatically encrypted.

     If an interactive session is requested ssh by default will only request a pseudo-terminal (pty) for interactive sessions when the client has one.  The flags -T and -t can be used to
     override this behaviour.

     If a pseudo-terminal has been allocated the user may use the escape characters noted below.

     If no pseudo-terminal has been allocated, the session is transparent and can be used to reliably transfer binary data.  On most systems, setting the escape character to “none” will
     also make the session transparent even if a tty is used.

     The session terminates when the command or shell on the remote machine exits and all X11 and TCP connections have been closed.

ESCAPE CHARACTERS
     When a pseudo-terminal has been requested, ssh supports a number of functions through the use of an escape character.

     A single tilde character can be sent as ~~ or by following the tilde by a character other than those described below.  The escape character must always follow a newline to be inter‐
     preted as special.  The escape character can be changed in configuration files using the EscapeChar configuration directive or on the command line by the -e option.

     The supported escapes (assuming the default ‘~’) are:

     ~.      Disconnect.

     ~^Z     Background ssh.

     ~#      List forwarded connections.

     ~&      Background ssh at logout when waiting for forwarded connection / X11 sessions to terminate.

     ~?      Display a list of escape characters.

     ~B      Send a BREAK to the remote system (only useful if the peer supports it).

     ~C      Open command line.  Currently this allows the addition of port forwardings using the -L, -R and -D options (see above).  It also allows the cancellation of existing port-for‐
             wardings with -KL[bind_address:]port for local, -KR[bind_address:]port for remote and -KD[bind_address:]port for dynamic port-forwardings.  !command allows the user to exe‐
             cute a local command if the PermitLocalCommand option is enabled in ssh_config(5).  Basic help is available, using the -h option.

     ~R      Request rekeying of the connection (only useful if the peer supports it).

     ~V      Decrease the verbosity (LogLevel) when errors are being written to stderr.

     ~v      Increase the verbosity (LogLevel) when errors are being written to stderr.

TCP FORWARDING
     Forwarding of arbitrary TCP connections over the secure channel can be specified either on the command line or in a configuration file.  One possible application of TCP forwarding is
     a secure connection to a mail server; another is going through firewalls.

     In the example below, we look at encrypting communication between an IRC client and server, even though the IRC server does not directly support encrypted communications.  This works
     as follows: the user connects to the remote host using ssh, specifying a port to be used to forward connections to the remote server.  After that it is possible to start the service
     which is to be encrypted on the client machine, connecting to the same local port, and ssh will encrypt and forward the connection.

     The following example tunnels an IRC session from client machine “127.0.0.1” (localhost) to remote server “server.example.com”:

         $ ssh -f -L 1234:localhost:6667 server.example.com sleep 10
         $ irc -c '#users' -p 1234 pinky 127.0.0.1

     This tunnels a connection to IRC server “server.example.com”, joining channel “#users”, nickname “pinky”, using port 1234.  It doesn't matter which port is used, as long as it's
     greater than 1023 (remember, only root can open sockets on privileged ports) and doesn't conflict with any ports already in use.  The connection is forwarded to port 6667 on the
     remote server, since that's the standard port for IRC services.

     The -f option backgrounds ssh and the remote command “sleep 10” is specified to allow an amount of time (10 seconds, in the example) to start the service which is to be tunnelled.
     If no connections are made within the time specified, ssh will exit.

X11 FORWARDING
     If the ForwardX11 variable is set to “yes” (or see the description of the -X, -x, and -Y options above) and the user is using X11 (the DISPLAY environment variable is set), the con‐
     nection to the X11 display is automatically forwarded to the remote side in such a way that any X11 programs started from the shell (or command) will go through the encrypted chan‐
     nel, and the connection to the real X server will be made from the local machine.  The user should not manually set DISPLAY.  Forwarding of X11 connections can be configured on the
     command line or in configuration files.

     The DISPLAY value set by ssh will point to the server machine, but with a display number greater than zero.  This is normal, and happens because ssh creates a “proxy” X server on the
     server machine for forwarding the connections over the encrypted channel.

     ssh will also automatically set up Xauthority data on the server machine.  For this purpose, it will generate a random authorization cookie, store it in Xauthority on the server, and
     verify that any forwarded connections carry this cookie and replace it by the real cookie when the connection is opened.  The real authentication cookie is never sent to the server
     machine (and no cookies are sent in the plain).

     If the ForwardAgent variable is set to “yes” (or see the description of the -A and -a options above) and the user is using an authentication agent, the connection to the agent is
     automatically forwarded to the remote side.

VERIFYING HOST KEYS
     When connecting to a server for the first time, a fingerprint of the server's public key is presented to the user (unless the option StrictHostKeyChecking has been disabled).  Fin‐
     gerprints can be determined using ssh-keygen(1):

           $ ssh-keygen -l -f /etc/ssh_host_rsa_key

     If the fingerprint is already known, it can be matched and the key can be accepted or rejected.  If only legacy (MD5) fingerprints for the server are available, the ssh-keygen(1) -E
     option may be used to downgrade the fingerprint algorithm to match.

     Because of the difficulty of comparing host keys just by looking at fingerprint strings, there is also support to compare host keys visually, using random art.  By setting the
     VisualHostKey option to “yes”, a small ASCII graphic gets displayed on every login to a server, no matter if the session itself is interactive or not.  By learning the pattern a
     known server produces, a user can easily find out that the host key has changed when a completely different pattern is displayed.  Because these patterns are not unambiguous however,
     a pattern that looks similar to the pattern remembered only gives a good probability that the host key is the same, not guaranteed proof.

     To get a listing of the fingerprints along with their random art for all known hosts, the following command line can be used:

           $ ssh-keygen -lv -f ~/.ssh/known_hosts

     If the fingerprint is unknown, an alternative method of verification is available: SSH fingerprints verified by DNS.  An additional resource record (RR), SSHFP, is added to a zone‐
     file and the connecting client is able to match the fingerprint with that of the key presented.

     In this example, we are connecting a client to a server, “host.example.com”.  The SSHFP resource records should first be added to the zonefile for host.example.com:

           $ ssh-keygen -r host.example.com.

     The output lines will have to be added to the zonefile.  To check that the zone is answering fingerprint queries:

           $ dig -t SSHFP host.example.com

     Finally the client connects:

           $ ssh -o "VerifyHostKeyDNS ask" host.example.com
           [...]
           Matching host key fingerprint found in DNS.
           Are you sure you want to continue connecting (yes/no)?

     See the VerifyHostKeyDNS option in ssh_config(5) for more information.

SSH-BASED VIRTUAL PRIVATE NETWORKS
     ssh contains support for Virtual Private Network (VPN) tunnelling using the tun(4) network pseudo-device, allowing two networks to be joined securely.  The sshd_config(5) configura‐
     tion option PermitTunnel controls whether the server supports this, and at what level (layer 2 or 3 traffic).

     The following example would connect client network 10.0.50.0/24 with remote network 10.0.99.0/24 using a point-to-point connection from 10.1.1.1 to 10.1.1.2, provided that the SSH
     server running on the gateway to the remote network, at 192.168.1.15, allows it.

     On the client:

           # ssh -f -w 0:1 192.168.1.15 true
           # ifconfig tun0 10.1.1.1 10.1.1.2 netmask 255.255.255.252
           # route add 10.0.99.0/24 10.1.1.2

     On the server:

           # ifconfig tun1 10.1.1.2 10.1.1.1 netmask 255.255.255.252
           # route add 10.0.50.0/24 10.1.1.1

     Client access may be more finely tuned via the /root/.ssh/authorized_keys file (see below) and the PermitRootLogin server option.  The following entry would permit connections on
     tun(4) device 1 from user “jane” and on tun device 2 from user “john”, if PermitRootLogin is set to “forced-commands-only”:

       tunnel="1",command="sh /etc/netstart tun1" ssh-rsa ... jane
       tunnel="2",command="sh /etc/netstart tun2" ssh-rsa ... john

     Since an SSH-based setup entails a fair amount of overhead, it may be more suited to temporary setups, such as for wireless VPNs.  More permanent VPNs are better provided by tools
     such as ipsecctl(8) and isakmpd(8).

ENVIRONMENT
     ssh will normally set the following environment variables:

     DISPLAY               The DISPLAY variable indicates the location of the X11 server.  It is automatically set by ssh to point to a value of the form “hostname:n”, where “hostname”
                           indicates the host where the shell runs, and ‘n’ is an integer ≥ 1.  ssh uses this special value to forward X11 connections over the secure channel.  The user
                           should normally not set DISPLAY explicitly, as that will render the X11 connection insecure (and will require the user to manually copy any required authoriza‐
                           tion cookies).

     HOME                  Set to the path of the user's home directory.

     LOGNAME               Synonym for USER; set for compatibility with systems that use this variable.

     MAIL                  Set to the path of the user's mailbox.

     PATH                  Set to the default PATH, as specified when compiling ssh.

     SSH_ASKPASS           If ssh needs a passphrase, it will read the passphrase from the current terminal if it was run from a terminal.  If ssh does not have a terminal associated with
                           it but DISPLAY and SSH_ASKPASS are set, it will execute the program specified by SSH_ASKPASS and open an X11 window to read the passphrase.  This is particu‐
                           larly useful when calling ssh from a .xsession or related script.  (Note that on some machines it may be necessary to redirect the input from /dev/null to make
                           this work.)

     SSH_AUTH_SOCK         Identifies the path of a UNIX-domain socket used to communicate with the agent.

     SSH_CONNECTION        Identifies the client and server ends of the connection.  The variable contains four space-separated values: client IP address, client port number, server IP
                           address, and server port number.

     SSH_ORIGINAL_COMMAND  This variable contains the original command line if a forced command is executed.  It can be used to extract the original arguments.

     SSH_TTY               This is set to the name of the tty (path to the device) associated with the current shell or command.  If the current session has no tty, this variable is not
                           set.

     TZ                    This variable is set to indicate the present time zone if it was set when the daemon was started (i.e. the daemon passes the value on to new connections).

     USER                  Set to the name of the user logging in.

     Additionally, ssh reads ~/.ssh/environment, and adds lines of the format “VARNAME=value” to the environment if the file exists and users are allowed to change their environment.  For
     more information, see the PermitUserEnvironment option in sshd_config(5).

FILES
     ~/.rhosts
             This file is used for host-based authentication (see above).  On some machines this file may need to be world-readable if the user's home directory is on an NFS partition,
             because sshd(8) reads it as root.  Additionally, this file must be owned by the user, and must not have write permissions for anyone else.  The recommended permission for
             most machines is read/write for the user, and not accessible by others.

     ~/.shosts
             This file is used in exactly the same way as .rhosts, but allows host-based authentication without permitting login with rlogin/rsh.

     ~/.ssh/
             This directory is the default location for all user-specific configuration and authentication information.  There is no general requirement to keep the entire contents of
             this directory secret, but the recommended permissions are read/write/execute for the user, and not accessible by others.

     ~/.ssh/authorized_keys
             Lists the public keys (DSA, ECDSA, Ed25519, RSA) that can be used for logging in as this user.  The format of this file is described in the sshd(8) manual page.  This file is
             not highly sensitive, but the recommended permissions are read/write for the user, and not accessible by others.

     ~/.ssh/config
             This is the per-user configuration file.  The file format and configuration options are described in ssh_config(5).  Because of the potential for abuse, this file must have
             strict permissions: read/write for the user, and not writable by others.

     ~/.ssh/environment
             Contains additional definitions for environment variables; see ENVIRONMENT, above.

     ~/.ssh/identity
     ~/.ssh/id_dsa
     ~/.ssh/id_ecdsa
     ~/.ssh/id_ed25519
     ~/.ssh/id_rsa
             Contains the private key for authentication.  These files contain sensitive data and should be readable by the user but not accessible by others (read/write/execute).  ssh
             will simply ignore a private key file if it is accessible by others.  It is possible to specify a passphrase when generating the key which will be used to encrypt the sensi‐
             tive part of this file using 3DES.

     ~/.ssh/identity.pub
     ~/.ssh/id_dsa.pub
     ~/.ssh/id_ecdsa.pub
     ~/.ssh/id_ed25519.pub
     ~/.ssh/id_rsa.pub
             Contains the public key for authentication.  These files are not sensitive and can (but need not) be readable by anyone.

     ~/.ssh/known_hosts
             Contains a list of host keys for all hosts the user has logged into that are not already in the systemwide list of known host keys.  See sshd(8) for further details of the
             format of this file.

     ~/.ssh/rc
             Commands in this file are executed by ssh when the user logs in, just before the user's shell (or command) is started.  See the sshd(8) manual page for more information.

     /etc/hosts.equiv
             This file is for host-based authentication (see above).  It should only be writable by root.

     /etc/shosts.equiv
             This file is used in exactly the same way as hosts.equiv, but allows host-based authentication without permitting login with rlogin/rsh.

     /etc/ssh_config
             Systemwide configuration file.  The file format and configuration options are described in ssh_config(5).

     /etc/ssh_host_key
     /etc/ssh_host_dsa_key
     /etc/ssh_host_ecdsa_key
     /etc/ssh_host_ed25519_key
     /etc/ssh_host_rsa_key
             These files contain the private parts of the host keys and are used for host-based authentication.

     /etc/ssh_known_hosts
             Systemwide list of known host keys.  This file should be prepared by the system administrator to contain the public host keys of all machines in the organization.  It should
             be world-readable.  See sshd(8) for further details of the format of this file.

     /etc/sshrc
             Commands in this file are executed by ssh when the user logs in, just before the user's shell (or command) is started.  See the sshd(8) manual page for more information.

EXIT STATUS
     ssh exits with the exit status of the remote command or with 255 if an error occurred.

SEE ALSO
     scp(1), sftp(1), ssh-add(1), ssh-agent(1), ssh-keygen(1), ssh-keyscan(1), tun(4), ssh_config(5), ssh-keysign(8), sshd(8)

STANDARDS
     S. Lehtinen and C. Lonvick, The Secure Shell (SSH) Protocol Assigned Numbers, RFC 4250, January 2006.

     T. Ylonen and C. Lonvick, The Secure Shell (SSH) Protocol Architecture, RFC 4251, January 2006.

     T. Ylonen and C. Lonvick, The Secure Shell (SSH) Authentication Protocol, RFC 4252, January 2006.

     T. Ylonen and C. Lonvick, The Secure Shell (SSH) Transport Layer Protocol, RFC 4253, January 2006.

     T. Ylonen and C. Lonvick, The Secure Shell (SSH) Connection Protocol, RFC 4254, January 2006.

     J. Schlyter and W. Griffin, Using DNS to Securely Publish Secure Shell (SSH) Key Fingerprints, RFC 4255, January 2006.

     F. Cusack and M. Forssen, Generic Message Exchange Authentication for the Secure Shell Protocol (SSH), RFC 4256, January 2006.

     J. Galbraith and P. Remaker, The Secure Shell (SSH) Session Channel Break Extension, RFC 4335, January 2006.

     M. Bellare, T. Kohno, and C. Namprempre, The Secure Shell (SSH) Transport Layer Encryption Modes, RFC 4344, January 2006.

     B. Harris, Improved Arcfour Modes for the Secure Shell (SSH) Transport Layer Protocol, RFC 4345, January 2006.

     M. Friedl, N. Provos, and W. Simpson, Diffie-Hellman Group Exchange for the Secure Shell (SSH) Transport Layer Protocol, RFC 4419, March 2006.

     J. Galbraith and R. Thayer, The Secure Shell (SSH) Public Key File Format, RFC 4716, November 2006.

     D. Stebila and J. Green, Elliptic Curve Algorithm Integration in the Secure Shell Transport Layer, RFC 5656, December 2009.

     A. Perrig and D. Song, Hash Visualization: a New Technique to improve Real-World Security, 1999, International Workshop on Cryptographic Techniques and E-Commerce (CrypTEC '99).

AUTHORS
     OpenSSH is a derivative of the original and free ssh 1.2.12 release by Tatu Ylonen.  Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos, Theo de Raadt and Dug Song removed many
     bugs, re-added newer features and created OpenSSH.  Markus Friedl contributed the support for SSH protocol versions 1.5 and 2.0.

BSD                                                                                    July 16, 2016                                                                                    BSD
****************************************************ssh  ends here****************************************************


****************************************************history starts here****************************************************
BASH_BUILTINS(1)                                                                  General Commands Manual                                                                  BASH_BUILTINS(1)

NAME
       bash, :, ., [, alias, bg, bind, break, builtin, caller, cd, command, compgen, complete, compopt, continue, declare, dirs, disown, echo, enable, eval, exec, exit, export, false, fc,
       fg, getopts, hash, help, history, jobs, kill, let, local, logout, mapfile, popd, printf, pushd, pwd, read, readonly, return, set, shift, shopt, source, suspend, test, times,  trap,
       true, type, typeset, ulimit, umask, unalias, unset, wait - bash built-in commands, see bash(1)

BASH BUILTIN COMMANDS
SEE ALSO
       bash(1), sh(1)

GNU Bash-4.2                                                                            2004 Apr 20                                                                        BASH_BUILTINS(1)
****************************************************history ends here****************************************************


****************************************************date starts here****************************************************
DATE(1)                                                                                User Commands                                                                                DATE(1)

NAME
       date - print or set the system date and time

SYNOPSIS
       date [OPTION]... [+FORMAT]
       date [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]

DESCRIPTION
       Display the current time in the given FORMAT, or set the system date.

       Mandatory arguments to long options are mandatory for short options too.

       -d, --date=STRING
              display time described by STRING, not 'now'

       --debug
              annotate the parsed date, and warn about questionable usage to stderr

       -f, --file=DATEFILE
              like --date; once for each line of DATEFILE

       -I[FMT], --iso-8601[=FMT]
              output  date/time in ISO 8601 format.  FMT='date' for date only (the default), 'hours', 'minutes', 'seconds', or 'ns' for date and time to the indicated precision.  Example:
              2006-08-14T02:34:56-06:00

       -R, --rfc-2822
              output date and time in RFC 2822 format.  Example: Mon, 14 Aug 2006 02:34:56 -0600

       --rfc-3339=FMT
              output date/time in RFC 3339 format.  FMT='date', 'seconds', or 'ns' for date and time to the indicated precision.  Example: 2006-08-14 02:34:56-06:00

       -r, --reference=FILE
              display the last modification time of FILE

       -s, --set=STRING
              set time described by STRING

       -u, --utc, --universal
              print or set Coordinated Universal Time (UTC)

       --help display this help and exit

       --version
              output version information and exit

       FORMAT controls the output.  Interpreted sequences are:

       %%     a literal %

       %a     locale's abbreviated weekday name (e.g., Sun)

       %A     locale's full weekday name (e.g., Sunday)

       %b     locale's abbreviated month name (e.g., Jan)

       %B     locale's full month name (e.g., January)

       %c     locale's date and time (e.g., Thu Mar  3 23:05:25 2005)

       %C     century; like %Y, except omit last two digits (e.g., 20)

       %d     day of month (e.g., 01)

       %D     date; same as %m/%d/%y

       %e     day of month, space padded; same as %_d

       %F     full date; same as %Y-%m-%d

       %g     last two digits of year of ISO week number (see %G)

       %G     year of ISO week number (see %V); normally useful only with %V

       %h     same as %b

       %H     hour (00..23)

       %I     hour (01..12)

       %j     day of year (001..366)

       %k     hour, space padded ( 0..23); same as %_H

       %l     hour, space padded ( 1..12); same as %_I

       %m     month (01..12)

       %M     minute (00..59)

       %n     a newline

       %N     nanoseconds (000000000..999999999)

       %p     locale's equivalent of either AM or PM; blank if not known

       %P     like %p, but lower case

       %q     quarter of year (1..4)

       %r     locale's 12-hour clock time (e.g., 11:11:04 PM)

       %R     24-hour hour and minute; same as %H:%M

       %s     seconds since 1970-01-01 00:00:00 UTC

       %S     second (00..60)

       %t     a tab

       %T     time; same as %H:%M:%S

       %u     day of week (1..7); 1 is Monday

       %U     week number of year, with Sunday as first day of week (00..53)

       %V     ISO week number, with Monday as first day of week (01..53)

       %w     day of week (0..6); 0 is Sunday

       %W     week number of year, with Monday as first day of week (00..53)

       %x     locale's date representation (e.g., 12/31/99)

       %X     locale's time representation (e.g., 23:13:48)

       %y     last two digits of year (00..99)

       %Y     year

       %z     +hhmm numeric time zone (e.g., -0400)

       %:z    +hh:mm numeric time zone (e.g., -04:00)

       %::z   +hh:mm:ss numeric time zone (e.g., -04:00:00)

       %:::z  numeric time zone with : to necessary precision (e.g., -04, +05:30)

       %Z     alphabetic time zone abbreviation (e.g., EDT)

       By default, date pads numeric fields with zeroes.  The following optional flags may follow '%':

       -      (hyphen) do not pad the field

       _      (underscore) pad with spaces

       0      (zero) pad with zeros

       ^      use upper case if possible

       #      use opposite case if possible

       After any flags comes an optional field width, as a decimal number; then an optional modifier, which is either E to use the locale's alternate representations if available, or O to
       use the locale's alternate numeric symbols if available.

EXAMPLES
       Convert seconds since the epoch (1970-01-01 UTC) to a date

              $ date --date='@2147483647'

       Show the time on the west coast of the US (use tzselect(1) to find TZ)

              $ TZ='America/Los_Angeles' date

       Show the local time for 9AM next Friday on the west coast of the US

              $ date --date='TZ="America/Los_Angeles" 09:00 next Fri'

DATE STRING
       The  --date=STRING is a mostly free format human readable date string such as "Sun, 29 Feb 2004 16:21:42 -0800" or "2004-02-29 16:21:42" or even "next Thursday".  A date string may
       contain items indicating calendar date, time of day, time zone, day of week, relative time, relative date, and numbers.  An empty string indicates the beginning of  the  day.   The
       date string format is more complex than is easily documented here but is fully described in the info documentation.

AUTHOR
       Written by David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report date translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/date>
       or available locally via: info '(coreutils) date invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                DATE(1)
****************************************************date ends here****************************************************


****************************************************cal  starts here****************************************************
CAL(1)                                                                                 User Commands                                                                                 CAL(1)

NAME
       cal - display a calendar

SYNOPSIS
       cal [options] [[[day] month] year]

DESCRIPTION
       cal displays a simple calendar.  If no arguments are specified, the current month is displayed.

OPTIONS
       -1, --one
              Display single month output.  (This is the default.)

       -3, --three
              Display three months spanning the date.

       -s, --sunday
              Display Sunday as the first day of the week.

       -m, --monday
              Display Monday as the first day of the week.

       -j, --julian
              Display Julian dates (days one-based, numbered from January 1).

       -y, --year
              Display a calendar for the whole year.

       -w, --week[=number]
              Display week numbers in the calendar (US or ISO-8601).

       --color[=when]
              Colorize  output.   The  when can be never, auto, or always.  Never will turn off colorizing in all situations.  Auto is default, and it will make colorizing to be in use if
              output is done to terminal.  Always will allow colors to be outputed when cal outputs to pipe, or is called from a script.

       -V, --version
              Display version information and exit.

       -h, --help
              Display help text and exit.

PARAMETERS
       A single parameter specifies the year to be displayed; note the year must be fully specified: cal 89 will not display a calendar for 1989.

       Two parameters denote the month (1 - 12) and year.

       Three parameters denote the day (1-31), month and year, and the day will be highlighted if the calendar is displayed on a terminal. If no  parameters  are  specified,  the  current
       month's calendar is displayed.

       A year starts on Jan 1. The first day of the week is determined by the locale.

       The  week  numbering depends on the choice of the first day of the week.  If Sunday (the default) is used for the first day of the week, then the customary North American numbering
       will be used, i.e. the first Sunday of the year starts the first week.  If Monday is selected, then the ISO-8601 standard week numbering is used, where the first  Thursday  of  the
       year is in week number 1.

COLORS
       Implicit coloring can be disabled as follows:

              touch /etc/terminal-colors.d/cal.disable

       For more details see terminal-colors.d(5).

BUGS
       The  cal  program  uses the 3rd of September 1752 as the date of the Gregorian calendar reformation -- that is when it happened in Great Britain and its colonies (including what is
       now the USA).  Ten days following that date were eliminated by this reformation, so the calendar for that month is rather unusual.  The actual historical dates at which the  calen‐
       dar reform happened in all the different countries (locales) are ignored.

       Alternative calendars, such as the Umm al-Qura, the Solar Hijri, the Ge'ez, or the lunisolar Hindu, are not supported.

HISTORY
       A cal command appeared in Version 6 AT&T UNIX.

AVAILABILITY
       The cal command is part of the util-linux package and is available from ftp://ftp.kernel.org/pub/linux/utils/util-linux/.

util-linux                                                                               June 2011                                                                                   CAL(1)
****************************************************cal  ends here****************************************************


****************************************************df starts here****************************************************
DF(1)                                                                                  User Commands                                                                                  DF(1)

NAME
       df - report file system disk space usage

SYNOPSIS
       df [OPTION]... [FILE]...

DESCRIPTION
       This  manual page documents the GNU version of df.  df displays the amount of disk space available on the file system containing each file name argument.  If no file name is given,
       the space available on all currently mounted file systems is shown.  Disk space is shown in 1K blocks by default, unless the environment variable POSIXLY_CORRECT is set,  in  which
       case 512-byte blocks are used.

       If  an  argument  is  the absolute file name of a disk device node containing a mounted file system, df shows the space available on that file system rather than on the file system
       containing the device node.  This version of df cannot show the space available on unmounted file systems, because on most kinds of systems doing so requires very nonportable inti‐
       mate knowledge of file system structures.

OPTIONS
       Show information about the file system on which each FILE resides, or all file systems by default.

       Mandatory arguments to long options are mandatory for short options too.

       -a, --all
              include pseudo, duplicate, inaccessible file systems

       -B, --block-size=SIZE
              scale sizes by SIZE before printing them; e.g., '-BM' prints sizes in units of 1,048,576 bytes; see SIZE format below

       -h, --human-readable
              print sizes in powers of 1024 (e.g., 1023M)

       -H, --si
              print sizes in powers of 1000 (e.g., 1.1G)

       -i, --inodes
              list inode information instead of block usage

       -k     like --block-size=1K

       -l, --local
              limit listing to local file systems

       --no-sync
              do not invoke sync before getting usage info (default)

       --output[=FIELD_LIST]
              use the output format defined by FIELD_LIST, or print all fields if FIELD_LIST is omitted.

       -P, --portability
              use the POSIX output format

       --sync invoke sync before getting usage info

       --total
              elide all entries insignificant to available space, and produce a grand total

       -t, --type=TYPE
              limit listing to file systems of type TYPE

       -T, --print-type
              print file system type

       -x, --exclude-type=TYPE
              limit listing to file systems not of type TYPE

       -v     (ignored)

       --help display this help and exit

       --version
              output version information and exit

       Display  values are in units of the first available SIZE from --block-size, and the DF_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.  Otherwise, units default to 1024
       bytes (or 512 if POSIXLY_CORRECT is set).

       The SIZE argument is an integer and optional unit (example: 10K is 10*1024).  Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).

       FIELD_LIST is a comma-separated list of columns to be included.  Valid field names are: 'source', 'fstype', 'itotal', 'iused', 'iavail', 'ipcent', 'size', 'used', 'avail', 'pcent',
       'file' and 'target' (see info page).

AUTHOR
       Written by Torbjorn Granlund, David MacKenzie, and Paul Eggert.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report df translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/df>
       or available locally via: info '(coreutils) df invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                  DF(1)
****************************************************df ends here****************************************************


****************************************************du starts here****************************************************
DU(1)                                                                                  User Commands                                                                                  DU(1)

NAME
       du - estimate file space usage

SYNOPSIS
       du [OPTION]... [FILE]...
       du [OPTION]... --files0-from=F

DESCRIPTION
       Summarize disk usage of the set of FILEs, recursively for directories.

       Mandatory arguments to long options are mandatory for short options too.

       -0, --null
              end each output line with NUL, not newline

       -a, --all
              write counts for all files, not just directories

       --apparent-size
              print apparent sizes, rather than disk usage; although the apparent size is usually smaller, it may be larger due to holes in ('sparse') files, internal fragmentation, indi‐
              rect blocks, and the like

       -B, --block-size=SIZE
              scale sizes by SIZE before printing them; e.g., '-BM' prints sizes in units of 1,048,576 bytes; see SIZE format below

       -b, --bytes
              equivalent to '--apparent-size --block-size=1'

       -c, --total
              produce a grand total

       -D, --dereference-args
              dereference only symlinks that are listed on the command line

       -d, --max-depth=N
              print the total for a directory (or file, with --all) only if it is N or fewer levels below the command line argument;  --max-depth=0 is the same as --summarize

       --files0-from=F
              summarize disk usage of the NUL-terminated file names specified in file F; if F is -, then read names from standard input

       -H     equivalent to --dereference-args (-D)

       -h, --human-readable
              print sizes in human readable format (e.g., 1K 234M 2G)

       --inodes
              list inode usage information instead of block usage

       -k     like --block-size=1K

       -L, --dereference
              dereference all symbolic links

       -l, --count-links
              count sizes many times if hard linked

       -m     like --block-size=1M

       -P, --no-dereference
              don't follow any symbolic links (this is the default)

       -S, --separate-dirs
              for directories do not include size of subdirectories

       --si   like -h, but use powers of 1000 not 1024

       -s, --summarize
              display only a total for each argument

       -t, --threshold=SIZE
              exclude entries smaller than SIZE if positive, or entries greater than SIZE if negative

       --time show time of the last modification of any file in the directory, or any of its subdirectories

       --time=WORD
              show time as WORD instead of modification time: atime, access, use, ctime or status

       --time-style=STYLE
              show times using STYLE, which can be: full-iso, long-iso, iso, or +FORMAT; FORMAT is interpreted like in 'date'

       -X, --exclude-from=FILE
              exclude files that match any pattern in FILE

       --exclude=PATTERN
              exclude files that match PATTERN

       -x, --one-file-system
              skip directories on different file systems

       --help display this help and exit

       --version
              output version information and exit

       Display values are in units of the first available SIZE from --block-size, and the DU_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.  Otherwise, units default to  1024
       bytes (or 512 if POSIXLY_CORRECT is set).

       The SIZE argument is an integer and optional unit (example: 10K is 10*1024).  Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).

PATTERNS
       PATTERN  is a shell pattern (not a regular expression).  The pattern ?  matches any one character, whereas * matches any string (composed of zero, one or multiple characters).  For
       example, *.o will match any files whose names end in .o.  Therefore, the command

              du --exclude='*.o'

       will skip all files and subdirectories ending in .o (including the file .o itself).

AUTHOR
       Written by Torbjorn Granlund, David MacKenzie, Paul Eggert, and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report du translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/du>
       or available locally via: info '(coreutils) du invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                  DU(1)
****************************************************du ends here****************************************************


****************************************************alias starts here****************************************************
BASH_BUILTINS(1)                                                                  General Commands Manual                                                                  BASH_BUILTINS(1)

NAME
       bash, :, ., [, alias, bg, bind, break, builtin, caller, cd, command, compgen, complete, compopt, continue, declare, dirs, disown, echo, enable, eval, exec, exit, export, false, fc,
       fg, getopts, hash, help, history, jobs, kill, let, local, logout, mapfile, popd, printf, pushd, pwd, read, readonly, return, set, shift, shopt, source, suspend, test, times,  trap,
       true, type, typeset, ulimit, umask, unalias, unset, wait - bash built-in commands, see bash(1)

BASH BUILTIN COMMANDS
SEE ALSO
       bash(1), sh(1)

GNU Bash-4.2                                                                            2004 Apr 20                                                                        BASH_BUILTINS(1)
****************************************************alias ends here****************************************************


****************************************************tar starts here****************************************************
TAR(1)                                                                                 GNU TAR Manual                                                                                TAR(1)

NAME
       tar - an archiving utility

SYNOPSIS
   Traditional usage
       tar {A|c|d|r|t|u|x}[GnSkUWOmpsMBiajJzZhPlRvwo] [ARG...]

   UNIX-style usage
       tar -A [OPTIONS] ARCHIVE ARCHIVE

       tar -c [-f ARCHIVE] [OPTIONS] [FILE...]

       tar -d [-f ARCHIVE] [OPTIONS] [FILE...]

       tar -t [-f ARCHIVE] [OPTIONS] [MEMBER...]

       tar -r [-f ARCHIVE] [OPTIONS] [FILE...]

       tar -u [-f ARCHIVE] [OPTIONS] [FILE...]

       tar -x [-f ARCHIVE] [OPTIONS] [MEMBER...]

   GNU-style usage
       tar {--catenate|--concatenate} [OPTIONS] ARCHIVE ARCHIVE

       tar --create [--file ARCHIVE] [OPTIONS] [FILE...]

       tar {--diff|--compare} [--file ARCHIVE] [OPTIONS] [FILE...]

       tar --delete [--file ARCHIVE] [OPTIONS] [MEMBER...]

       tar --append [-f ARCHIVE] [OPTIONS] [FILE...]

       tar --list [-f ARCHIVE] [OPTIONS] [MEMBER...]

       tar --test-label [--file ARCHIVE] [OPTIONS] [LABEL...]

       tar --update [--file ARCHIVE] [OPTIONS] [FILE...]

       tar --update [-f ARCHIVE] [OPTIONS] [FILE...]

       tar {--extract|--get} [-f ARCHIVE] [OPTIONS] [MEMBER...]

NOTE
       This  manpage  is a short description of GNU tar.  For a detailed discussion, including examples and usage recommendations, refer to the GNU Tar Manual available in texinfo format.
       If the info reader and the tar documentation are properly installed on your system, the command

           info tar

       should give you access to the complete manual.

       You can also view the manual using the info mode in emacs(1), or find it in various formats online at

           http://www.gnu.org/software/tar/manual

       If any discrepancies occur between this manpage and the GNU Tar Manual, the later shall be considered the authoritative source.

DESCRIPTION
       GNU tar is an archiving program designed to store multiple files in a single file (an archive), and to manipulate such archives.  The archive can be either  a  regular  file  or  a
       device (e.g. a tape drive, hence the name of the program, which stands for tape archiver), which can be located either on the local or on a remote machine.

   Option styles
       Options to GNU tar can be given in three different styles.  In traditional style, the first argument is a cluster of option letters and all subsequent arguments supply arguments to
       those options that require them.  The arguments are read in the same order as the option letters.  Any command line words that remain after  all  options  has  been  processed  are
       treated as non-optional arguments: file or archive member names.

       For  example, the c option requires creating the archive, the v option requests the verbose operation, and the f option takes an argument that sets the name of the archive to oper‐
       ate upon.  The following command, written in the traditional style, instructs tar to store all files from the directory /etc into the archive file  etc.tar  verbosely  listing  the
       files being archived:

       tar cfv a.tar /etc

       In  UNIX or short-option style, each option letter is prefixed with a single dash, as in other command line utilities.  If an option takes argument, the argument follows it, either
       as a separate command line word, or immediately following the option.  However, if the option takes an optional argument, the argument must follow the  option  letter  without  any
       intervening whitespace, as in -g/tmp/snar.db.

       Any number of options not taking arguments can be clustered together after a single dash, e.g. -vkp.  Options that take arguments (whether mandatory or optional), can appear at the
       end of such a cluster, e.g. -vkpf a.tar.

       The example command above written in the short-option style could look like:

       tar -cvf a.tar /etc
       or
       tar -c -v -f a.tar /etc

       In GNU or long-option style, each option begins with two dashes and has a meaningful name, consisting of lower-case letters and dashes.  When used, the long option can be  abbrevi‐
       ated to its initial letters, provided that this does not create ambiguity.  Arguments to long options are supplied either as a separate command line word, immediately following the
       option, or separated from the option by an equals sign with no intervening whitespace.  Optional arguments must always use the latter method.

       Here are several ways of writing the example command in this style:

       tar --create --file a.tar --verbose /etc
       or (abbreviating some options):
       tar --cre --file=a.tar --verb /etc

       The options in all three styles can be intermixed, although doing so with old options is not encouraged.

   Operation mode
       The options listed in the table below tell GNU tar what operation it is to perform.  Exactly one of them must be given.  Meaning of non-optional arguments depends on the  operation
       mode requested.

       -A, --catenate, --concatenate
              Append archive to the end of another archive.  The arguments are treated as the names of archives to append.  All archives must be of the same format as the archive they are
              appended to, otherwise the resulting archive might be unusable with non-GNU implementations of tar.  Notice also that when more than one archive is given, the  members  from
              archives other than the first one will be accessible in the resulting archive only if using the -i (--ignore-zeros) option.

              Compressed archives cannot be concatenated.

       -c, --create
              Create a new archive.  Arguments supply the names of the files to be archived.  Directories are archived recursively, unless the --no-recursion option is given.

       -d, --diff, --compare
              Find  differences  between  archive  and  file  system.   The  arguments are optional and specify archive members to compare.  If not given, the current working directory is
              assumed.

       --delete
              Delete from the archive.  The arguments supply names of the archive members to be removed.  At least one argument must be given.

              This option does not operate on compressed archives.  There is no short option equivalent.

       -r, --append
              Append files to the end of an archive.  Arguments have the same meaning as for -c (--create).

       -t, --list
              List the contents of an archive.  Arguments are optional.  When given, they specify the names of the members to list.

       --test-label
              Test the archive volume label and exit.  When used without arguments, it prints the volume label (if any) and exits with status 0.  When one or more command  line  arguments
              are  given.   tar  compares  the  volume label with each argument.  It exits with code 0 if a match is found, and with code 1 otherwise.  No output is displayed, unless used
              together with the -v (--verbose) option.

              There is no short option equivalent for this option.

       -u, --update
              Append files which are newer than the corresponding copy in the archive.  Arguments have the same meaning as with -c and -r options.

       -x, --extract, --get
              Extract files from an archive.  Arguments are optional.  When given, they specify names of the archive members to be extracted.

       --show-defaults
              Show built-in defaults for various tar options and exit.  No arguments are allowed.

       -?, --help
              Display a short option summary and exit.  No arguments allowed.

       --usage
              Display a list of available options and exit.  No arguments allowed.

       --version
              Print program version and copyright information and exit.

OPTIONS
   Operation modifiers
       --check-device
              Check device numbers when creating incremental archives (default).

       -g, --listed-incremental=FILE
              Handle new GNU-format incremental backups.  FILE is the name of a snapshot file, where tar stores additional information which is used to decide which  files  changed  since
              the  previous  incremental  dump and, consequently, must be dumped again.  If FILE does not exist when creating an archive, it will be created and all files will be added to
              the resulting archive (the level 0 dump).  To create incremental archives of non-zero level N, create a copy of the snapshot file created during the level N-1, and use it as
              FILE.

              When  listing  or  extracting,  the  actual  contents  of  FILE  is not inspected, it is needed only due to syntactical requirements.  It is therefore common practice to use
              /dev/null in its place.

       --hole-detection=METHOD
              Use METHOD to detect holes in sparse files.  This option implies --sparse.  Valid values for METHOD are seek and raw.  Default is seek with fallback to raw when not applica‐
              ble.

       -G, --incremental
              Handle old GNU-format incremental backups.

       --ignore-failed-read
              Do not exit with nonzero on unreadable files.

       --level=NUMBER
              Set  dump level for created listed-incremental archive.  Currently only --level=0 is meaningful: it instructs tar to truncate the snapshot file before dumping, thereby forc‐
              ing a level 0 dump.

       -n, --seek
              Assume the archive is seekable.  Normally tar determines automatically whether the archive can be seeked or not.  This option is intended for use in cases when such recogni‐
              tion fails.  It takes effect only if the archive is open for reading (e.g. with --list or --extract options).

       --no-check-device
              Do not check device numbers when creating incremental archives.

       --no-seek
              Assume the archive is not seekable.

       --occurrence[=N]
              Process  only  the  Nth  occurrence  of  each file in the archive.  This option is valid only when used with one of the following subcommands: --delete, --diff, --extract or
              --list and when a list of files is given either on the command line or via the -T option.  The default N is 1.

       --restrict
              Disable the use of some potentially harmful options.

       --sparse-version=MAJOR[.MINOR]
              Set version of the sparse format to use (implies --sparse).  This option implies --sparse.  Valid argument values are 0.0, 0.1, and 1.0.  For a detailed discussion of sparse
              formats, refer to the GNU Tar Manual, appendix D, "Sparse Formats".  Using info reader, it can be accessed running the following command: info tar 'Sparse Formats'.

       -S, --sparse
              Handle  sparse  files  efficiently.   Some files in the file system may have segments which were actually never written (quite often these are database files created by such
              systems as DBM).  When given this option, tar attempts to determine if the file is sparse prior to archiving it, and if so, to reduce the resulting archive size by not dump‐
              ing empty parts of the file.

   Overwrite control
       These options control tar actions when extracting a file over an existing copy on disk.

       -k, --keep-old-files
              Don't replace existing files when extracting.

       --keep-newer-files
              Don't replace existing files that are newer than their archive copies.

       --no-overwrite-dir
              Preserve metadata of existing directories.

       --one-top-level[=DIR]
              Extract  all  files  into  DIR,  or, if used without argument, into a subdirectory named by the base name of the archive (minus standard compression suffixes recognizable by
              --auto-compress).

       --overwrite
              Overwrite existing files when extracting.

       --overwrite-dir
              Overwrite metadata of existing directories when extracting (default).

       --recursive-unlink
              Recursively remove all files in the directory prior to extracting it.

       --remove-files
              Remove files from disk after adding them to the archive.

       --skip-old-files
              Don't replace existing files when extracting, silently skip over them.

       -U, --unlink-first
              Remove each file prior to extracting over it.

       -W, --verify
              Verify the archive after writing it.

   Output stream selection
       --ignore-command-error

       Ignore subprocess exit codes.

       --no-ignore-command-error
              Treat non-zero exit codes of children as error (default).

       -O, --to-stdout
              Extract files to standard output.

       --to-command=COMMAND
              Pipe extracted files to COMMAND.  The argument is the pathname of an external program, optionally with command line arguments.  The program will be invoked and the  contents
              of the file being extracted supplied to it on its standard output.  Additional data will be supplied via the following environment variables:

              TAR_FILETYPE
                     Type of the file. It is a single letter with the following meaning:

                             f           Regular file
                             d           Directory
                             l           Symbolic link
                             h           Hard link
                             b           Block device
                             c           Character device

                     Currently only regular files are supported.

              TAR_MODE
                     File mode, an octal number.

              TAR_FILENAME
                     The name of the file.

              TAR_REALNAME
                     Name of the file as stored in the archive.

              TAR_UNAME
                     Name of the file owner.

              TAR_GNAME
                     Name of the file owner group.

              TAR_ATIME
                     Time  of  last  access.  It  is  a decimal number, representing seconds since the Epoch.  If the archive provides times with nanosecond precision, the nanoseconds are
                     appended to the timestamp after a decimal point.

              TAR_MTIME
                     Time of last modification.

              TAR_CTIME
                     Time of last status change.

              TAR_SIZE
                     Size of the file.

              TAR_UID
                     UID of the file owner.

              TAR_GID
                     GID of the file owner.

              Additionally, the following variables contain information about tar operation mode and the archive being processed:

              TAR_VERSION
                     GNU tar version number.

              TAR_ARCHIVE
                     The name of the archive tar is processing.

              TAR_BLOCKING_FACTOR
                     Current blocking factor, i.e. number of 512-byte blocks in a record.

              TAR_VOLUME
                     Ordinal number of the volume tar is processing (set if reading a multi-volume archive).

              TAR_FORMAT
                     Format of the archive being processed.  One of: gnu, oldgnu, posix, ustar, v7.  TAR_SUBCOMMAND A short option (with a leading dash) describing the  operation  tar  is
                     executing.

   Handling of file attributes
       --atime-preserve[=METHOD]
              Preserve  access  times  on  dumped  files,  either by restoring the times after reading (METHOD=replace, this is the default) or by not setting the times in the first place
              (METHOD=system)

       --delay-directory-restore
              Delay setting modification times and permissions of extracted directories until the end of extraction.  Use this option when extracting from an  archive  which  has  unusual
              member ordering.

       --group=NAME[:GID]
              Force  NAME  as  group for added files.  If GID is not supplied, NAME can be either a user name or numeric GID.  In this case the missing part (GID or name) will be inferred
              from the current host's group database.

              When used with --group-map=FILE, affects only those files whose owner group is not listed in FILE.

       --group-map=FILE
              Read group translation map from FILE.  Empty lines are ignored.  Comments are introduced with # sign and extend to the end of line.  Each  non-empty  line  in  FILE  defines
              translation for a single group.  It must consist of two fields, delimited by any amount of whitespace:

              OLDGRP NEWGRP[:NEWGID]

              OLDGRP  is  either  a valid group name or a GID prefixed with +.  Unless NEWGID is supplied, NEWGRP must also be either a valid group name or a +GID.  Otherwise, both NEWGRP
              and NEWGID need not be listed in the system group database.

              As a result, each input file with owner group OLDGRP will be stored in archive with owner group NEWGRP and GID NEWGID.

       --mode=CHANGES
              Force symbolic mode CHANGES for added files.

       --mtime=DATE-OR-FILE
              Set mtime for added files.  DATE-OR-FILE is either a date/time in almost arbitrary format, or the name of an existing file.  In the latter case the mtime of that  file  will
              be used.

       -m, --touch
              Don't extract file modified time.

       --no-delay-directory-restore
              Cancel the effect of the prior --delay-directory-restore option.

       --no-same-owner
              Extract files as yourself (default for ordinary users).

       --no-same-permissions
              Apply the user's umask when extracting permissions from the archive (default for ordinary users).

       --numeric-owner
              Always use numbers for user/group names.

       --owner=NAME[:UID]
              Force  NAME  as  owner for added files.  If UID is not supplied, NAME can be either a user name or numeric UID.  In this case the missing part (UID or name) will be inferred
              from the current host's user database.

              When used with --owner-map=FILE, affects only those files whose owner is not listed in FILE.

       --owner-map=FILE
              Read owner translation map from FILE.  Empty lines are ignored.  Comments are introduced with # sign and extend to the end of line.  Each  non-empty  line  in  FILE  defines
              translation for a single UID.  It must consist of two fields, delimited by any amount of whitespace:

              OLDUSR NEWUSR[:NEWUID]

              OLDUSR  is either a valid user name or a UID prefixed with +.  Unless NEWUID is supplied, NEWUSR must also be either a valid user name or a +UID.  Otherwise, both NEWUSR and
              NEWUID need not be listed in the system user database.

              As a result, each input file owned by OLDUSR will be stored in archive with owner name NEWUSR and UID NEWUID.

       -p, --preserve-permissions, --same-permissions
              extract information about file permissions (default for superuser)

       --preserve
              Same as both -p and -s.

       --same-owner
              Try extracting files with the same ownership as exists in the archive (default for superuser).

       -s, --preserve-order, --same-order
              Sort names to extract to match archive

       --sort=ORDER
              When creating an archive, sort directory entries according to ORDER, which is one of none, name, or inode.

              The default is --sort=none, which stores archive members in the same order as returned by the operating system.

              Using --sort=name ensures the member ordering in the created archive is uniform and reproducible.

              Using --sort=inode reduces the number of disk seeks made when creating the archive and thus can considerably speed up archivation.  This sorting order is supported  only  if
              the underlying system provides the necessary information.

   Extended file attributes
       --acls Enable POSIX ACLs support.

       --no-acls
              Disable POSIX ACLs support.

       --selinux
              Enable SELinux context support.

       --no-selinux
              Disable SELinux context support.

       --xattrs
              Enable extended attributes support.

       --no-xattrs
              Disable extended attributes support.

       --xattrs-exclude=PATTERN
              Specify the exclude pattern for xattr keys.  PATTERN is a POSIX regular expression, e.g. --xattrs-exclude='^user.', to exclude attributes from the user namespace.

       --xattrs-include=PATTERN
              Specify the include pattern for xattr keys.  PATTERN is a POSIX regular expression.

   Device selection and switching
       -f, --file=ARCHIVE
              Use  archive  file  or device ARCHIVE.  If this option is not given, tar will first examine the environment variable `TAPE'.  If it is set, its value will be used as the ar‐
              chive name.  Otherwise, tar will assume the compiled-in default.  The default value can be inspected either using the --show-defaults option, or at the end of the tar --help
              output.

              An  archive  name  that has a colon in it specifies a file or device on a remote machine.  The part before the colon is taken as the machine name or IP address, and the part
              after it as the file or device pathname, e.g.:

              --file=remotehost:/dev/sr0

              An optional username can be prefixed to the hostname, placing a @ sign between them.

              By default, the remote host is accessed via the rsh(1) command.  Nowadays it is common to use ssh(1) instead.  You can do so by giving the following command line option:

              --rsh-command=/usr/bin/ssh

              The remote machine should have the rmt(8) command installed.  If its pathname does not match tar's default,  you  can  inform  tar  about  the  correct  pathname  using  the
              --rmt-command option.

       --force-local
              Archive file is local even if it has a colon.

       -F, --info-script=COMMAND, --new-volume-script=COMMAND
              Run COMMAND at the end of each tape (implies -M).  The command can include arguments.  When started, it will inherit tar's environment plus the following variables:

              TAR_VERSION
                     GNU tar version number.

              TAR_ARCHIVE
                     The name of the archive tar is processing.

              TAR_BLOCKING_FACTOR
                     Current blocking factor, i.e. number of 512-byte blocks in a record.

              TAR_VOLUME
                     Ordinal number of the volume tar is processing (set if reading a multi-volume archive).

              TAR_FORMAT
                     Format of the archive being processed.  One of: gnu, oldgnu, posix, ustar, v7.

              TAR_SUBCOMMAND
                     A short option (with a leading dash) describing the operation tar is executing.

              TAR_FD File descriptor which can be used to communicate the new volume name to tar.

              If the info script fails, tar exits; otherwise, it begins writing the next volume.

       -L, --tape-length=N
              Change  tape  after  writing  Nx1024 bytes.  If N is followed by a size suffix (see the subsection Size suffixes below), the suffix specifies the multiplicative factor to be
              used instead of 1024.

              This option implies -M.

       -M, --multi-volume
              Create/list/extract multi-volume archive.

       --rmt-command=COMMAND
              Use COMMAND instead of rmt when accessing remote archives.  See the description of the -f option, above.

       --rsh-command=COMMAND
              Use COMMAND instead of rsh when accessing remote archives.  See the description of the -f option, above.

       --volno-file=FILE
              When this option is used in conjunction with --multi-volume, tar will keep track of which volume of a multi-volume archive it is working in FILE.

   Device blocking
       -b, --blocking-factor=BLOCKS
              Set record size to BLOCKSx512 bytes.

       -B, --read-full-records
              When listing or extracting, accept incomplete input records after end-of-file marker.

       -i, --ignore-zeros
              Ignore zeroed blocks in archive.  Normally two consecutive 512-blocks filled with zeroes mean EOF and tar stops reading after encountering them.  This option instructs it to
              read further and is useful when reading archives created with the -A option.

       --record-size=NUMBER
              Set  record  size.   NUMBER  is the number of bytes per record.  It must be multiple of 512.  It can can be suffixed with a size suffix, e.g. --record-size=10K, for 10 Kilo‐
              bytes.  See the subsection Size suffixes, for a list of valid suffixes.

   Archive format selection
       -H, --format=FORMAT
              Create archive of the given format.  Valid formats are:

              gnu    GNU tar 1.13.x format

              oldgnu GNU format as per tar <= 1.12.

              pax, posix
                     POSIX 1003.1-2001 (pax) format.

              ustar  POSIX 1003.1-1988 (ustar) format.

              v7     Old V7 tar format.

       --old-archive, --portability
              Same as --format=v7.

       --pax-option=keyword[[:]=value][,keyword[[:]=value]]...
              Control pax keywords when creating PAX archives (-H pax).  This option is equivalent to the -o option of the pax(1)utility.

       --posix
              Same as --format=posix.

       -V, --label=TEXT
              Create archive with volume name TEXT.  If listing or extracting, use TEXT as a globbing pattern for volume name.

   Compression options
       -a, --auto-compress
              Use archive suffix to determine the compression program.

       -I, --use-compress-program=COMMAND
              Filter data through COMMAND.  It must accept the -d option, for decompression.  The argument can contain command line options.

       -j, --bzip2
              Filter the archive through bzip2(1).

       -J, --xz
              Filter the archive through xz(1).

       --lzip Filter the archive through lzip(1).

       --lzma Filter the archive through lzma(1).

       --lzop Filter the archive through lzop(1).

       --no-auto-compress
              Do not use archive suffix to determine the compression program.

       -z, --gzip, --gunzip, --ungzip
              Filter the archive through gzip(1).

       -Z, --compress, --uncompress
              Filter the archive through compress(1).

   Local file selection
       --add-file=FILE
              Add FILE to the archive (useful if its name starts with a dash).

       --backup[=CONTROL]
              Backup before removal.  The CONTROL argument, if supplied, controls the backup policy.  Its valid values are:

              none, off
                     Never make backups.

              t, numbered
                     Make numbered backups.

              nil, existing
                     Make numbered backups if numbered backups exist, simple backups otherwise.

              never, simple
                     Always make simple backups

              If CONTROL is not given, the value is taken from the VERSION_CONTROL environment variable.  If it is not set, existing is assumed.

       -C, --directory=DIR
              Change to DIR before performing any operations.  This option is order-sensitive, i.e. it affects all options that follow.

       --exclude=PATTERN
              Exclude files matching PATTERN, a glob(3)-style wildcard pattern.

       --exclude-backups
              Exclude backup and lock files.

       --exclude-caches
              Exclude contents of directories containing file CACHEDIR.TAG, except for the tag file itself.

       --exclude-caches-all
              Exclude directories containing file CACHEDIR.TAG and the file itself.

       --exclude-caches-under
              Exclude everything under directories containing CACHEDIR.TAG

       --exclude-ignore=FILE
              Before dumping a directory, see if it contains FILE.  If so, read exclusion patterns from this file.  The patterns affect only the directory itself.

       --exclude-ignore-recursive=FILE
              Same as --exclude-ignore, except that patterns from FILE affect both the directory and all its subdirectories.

       --exclude-tag=FILE
              Exclude contents of directories containing FILE, except for FILE itself.

       --exclude-tag-all=FILE
              Exclude directories containing FILE.

       --exclude-tag-under=FILE
              Exclude everything under directories containing FILE.

       --exclude-vcs
              Exclude version control system directories.

       --exclude-vcs-ignores
              Exclude files that match patterns read from VCS-specific ignore files.  Supported files are: .cvsignore, .gitignore, .bzrignore, and .hgignore.

       -h, --dereference
              Follow symlinks; archive and dump the files they point to.

       --hard-dereference
              Follow hard links; archive and dump the files they refer to.

       -K, --starting-file=MEMBER
              Begin at the given member in the archive.

       --newer-mtime=DATE
              Work on files whose data changed after the DATE.  If DATE starts with / or . it is taken to be a file name; the mtime of that file is used as the date.

       --no-null
              Disable the effect of the previous --null option.

       --no-recursion
              Avoid descending automatically in directories.

       --no-unquote
              Do not unquote input file or member names.

       --no-verbatim-files-from
              Treat each line read from a file list as if it were supplied in the command line.  I.e., leading and trailing whitespace is removed and, if the resulting string begins  with
              a dash, it is treated as tar command line option.

              This is the default behavior.  The --no-verbatim-files-from option is provided as a way to restore it after --verbatim-files-from option.

              This option is positional: it affects all --files-from options that occur after it in, until --verbatim-files-from option or end of line, whichever occurs first.

              It is implied by the --no-null option.

       --null Instruct subsequent -T options to read null-terminated names verbatim (disables special handling of names that start with a dash).

              See also --verbatim-files-from.

       -N, --newer=DATE, --after-date=DATE
              Only store files newer than DATE.  If DATE starts with / or . it is taken to be a file name; the ctime of that file is used as the date.

       --one-file-system
              Stay in local file system when creating archive.

       -P, --absolute-names
              Don't strip leading slashes from file names when creating archives.

       --recursion
              Recurse into directories (default).

       --suffix=STRING
              Backup before removal, override usual suffix.  Default suffix is ~, unless overridden by environment variable SIMPLE_BACKUP_SUFFIX.

       -T, --files-from=FILE
              Get names to extract or create from FILE.

              Unless  specified  otherwise,  the FILE must contain a list of names separated by ASCII LF (i.e. one name per line).  The names read are handled the same way as command line
              arguments.  They undergo quote removal and word splitting, and any string that starts with a - is handled as tar command line option.

              If this behavior is undesirable, it can be turned off using the --verbatim-files-from option.

              The --null option instructs tar that the names in FILE are separated by ASCII NUL character, instead of LF.  It is useful if the list is generated by find(1) -print0  predi‐
              cate.

       --unquote
              Unquote file or member names (default).

       --verbatim-files-from
              Treat each line obtained from a file list as a file name, even if it starts with a dash.  File lists are supplied with the --files-from (-T) option.  The default behavior is
              to handle names supplied in file lists as if they were typed in the command line, i.e. any names starting with a dash are treated as tar options.  The  --verbatim-files-from
              option disables this behavior.

              This option affects all --files-from options that occur after it in the command line.  Its effect is reverted by the --no-verbatim-files-from} option.

              This option is implied by the --null option.

              See also --add-file.

       -X, --exclude-from=FILE
              Exclude files matching patterns listed in FILE.

   File name transformations
       --strip-components=NUMBER
              Strip NUMBER leading components from file names on extraction.

       --transform=EXPRESSION, --xform=EXPRESSION
              Use sed replace EXPRESSION to transform file names.

   File name matching options
       These options affect both exclude and include patterns.

       --anchored
              Patterns match file name start.

       --ignore-case
              Ignore case.

       --no-anchored
              Patterns match after any / (default for exclusion).

       --no-ignore-case
              Case sensitive matching (default).

       --no-wildcards
              Verbatim string matching.

       --no-wildcards-match-slash
              Wildcards do not match /.

       --wildcards
              Use wildcards (default for exclusion).

       --wildcards-match-slash
              Wildcards match / (default for exclusion).

   Informative output
       --checkpoint[=N]
              Display progress messages every Nth record (default 10).

       --checkpoint-action=ACTION
              Run ACTION on each checkpoint.

       --clamp-mtime
              Only set time when the file is more recent than what was given with --mtime.

       --full-time
              Print file time to its full resolution.

       --index-file=FILE
              Send verbose output to FILE.

       -l, --check-links
              Print a message if not all links are dumped.

       --no-quote-chars=STRING
              Disable quoting for characters from STRING.

       --quote-chars=STRING
              Additionally quote characters from STRING.

       --quoting-style=STYLE
              Set quoting style for file and member names.  Valid values for STYLE are literal, shell, shell-always, c, c-maybe, escape, locale, clocale.

       -R, --block-number
              Show block number within archive with each message.

       --show-omitted-dirs
              When listing or extracting, list each directory that does not match search criteria.

       --show-transformed-names, --show-stored-names
              Show file or archive names after transformation by --strip and --transform options.

       --totals[=SIGNAL]
              Print total bytes after processing the archive.  If SIGNAL is given, print total bytes when this signal is delivered.  Allowed signals are: SIGHUP, SIGQUIT, SIGINT, SIGUSR1,
              and SIGUSR2.  The SIG prefix can be omitted.

       --utc  Print file modification times in UTC.

       -v, --verbose
              Verbosely list files processed.

       --warning=KEYWORD
              Enable or disable warning messages identified by KEYWORD.  The messages are suppressed if KEYWORD is prefixed with no- and enabled otherwise.

              Multiple --warning messages accumulate.

              Keywords controlling general tar operation:

              all    Enable all warning messages.  This is the default.

              none   Disable all warning messages.

              filename-with-nuls
                     "%s: file name read contains nul character"

              alone-zero-block
                     "A lone zero block at %s"

              Keywords applicable for tar --create:

              cachedir
                     "%s: contains a cache directory tag %s; %s"

              file-shrank
                     "%s: File shrank by %s bytes; padding with zeros"

              xdev   "%s: file is on a different filesystem; not dumped"

              file-ignored
                     "%s: Unknown file type; file ignored"
                     "%s: socket ignored"
                     "%s: door ignored"

              file-unchanged
                     "%s: file is unchanged; not dumped"

              ignore-archive
                     "%s: file is the archive; not dumped"

              file-removed
                     "%s: File removed before we read it"

              file-changed
                     "%s: file changed as we read it"

              Keywords applicable for tar --extract:

              existing-file
                     "%s: skipping existing file"

              timestamp
                     "%s: implausibly old time stamp %s"
                     "%s: time stamp %s is %s s in the future"

              contiguous-cast
                     "Extracting contiguous files as regular files"

              symlink-cast
                     "Attempting extraction of symbolic links as hard links"

              unknown-cast
                     "%s: Unknown file type '%c', extracted as normal file"

              ignore-newer
                     "Current %s is newer or same age"

              unknown-keyword
                     "Ignoring unknown extended header keyword '%s'"

              decompress-program
                     Controls verbose description of failures occurring when trying to run alternative decompressor programs.  This warning is disabled by  default  (unless  --verbose  is
                     used).  A common example of what you can get when using this warning is:

                     $ tar --warning=decompress-program -x -f archive.Z
                     tar (child): cannot run compress: No such file or directory
                     tar (child): trying gzip

                     This means that tar first tried to decompress archive.Z using compress, and, when that failed, switched to gzip.

              record-size
                     "Record size = %lu blocks"

              Keywords controlling incremental extraction:

              rename-directory
                     "%s: Directory has been renamed from %s"
                     "%s: Directory has been renamed"

              new-directory
                     "%s: Directory is new"

              xdev   "%s: directory is on a different device: not purging"

              bad-dumpdir
                     "Malformed dumpdir: 'X' never used"

       -w, --interactive, --confirmation
              Ask for confirmation for every action.

   Compatibility options
       -o     When creating, same as --old-archive.  When extracting, same as --no-same-owner.

   Size suffixes
               Suffix    Units                   Byte Equivalent
               b         Blocks                  SIZE x 512
               B         Kilobytes               SIZE x 1024
               c         Bytes                   SIZE
               G         Gigabytes               SIZE x 1024^3
               K         Kilobytes               SIZE x 1024
               k         Kilobytes               SIZE x 1024
               M         Megabytes               SIZE x 1024^2
               P         Petabytes               SIZE x 1024^5
               T         Terabytes               SIZE x 1024^4
               w         Words                   SIZE x 2

RETURN VALUE
       Tar exit code indicates whether it was able to successfully perform the requested operation, and if not, what kind of error occurred.

       0      Successful termination.

       1      Some  files  differ.   If tar was invoked with the --compare (--diff, -d) command line option, this means that some files in the archive differ from their disk counterparts.
              If tar was given one of the --create, --append or --update options, this exit code means that some files were changed while being archived and so the resulting archive  does
              not contain the exact copy of the file set.

       2      Fatal error.  This means that some fatal, unrecoverable error occurred.

       If  a subprocess that had been invoked by tar exited with a nonzero exit code, tar itself exits with that code as well.  This can happen, for example, if a compression option (e.g.
       -z) was used and the external compressor program failed.  Another example is rmt failure during backup to a remote device.

SEE ALSO
       bzip2(1), compress(1), gzip(1), lzma(1), lzop(1), rmt(8), symlink(7), tar(5), xz(1).

       Complete tar manual: run info tar or use emacs(1) info mode to read it.

       Online copies of GNU tar documentation in various formats can be found at:

           http://www.gnu.org/software/tar/manual

BUG REPORTS
       Report bugs to <bug-tar@gnu.org>.

COPYRIGHT
       Copyright © 2013 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
       This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.

TAR                                                                                    March 23, 2016                                                                                TAR(1)
****************************************************tar ends here****************************************************


****************************************************ping starts here****************************************************
****************************************************ping ends here****************************************************


****************************************************nohup starts here****************************************************
NOHUP(1)                                                                               User Commands                                                                               NOHUP(1)

NAME
       nohup - run a command immune to hangups, with output to a non-tty

SYNOPSIS
       nohup COMMAND [ARG]...
       nohup OPTION

DESCRIPTION
       Run COMMAND, ignoring hangup signals.

       --help display this help and exit

       --version
              output version information and exit

       If  standard input is a terminal, redirect it from an unreadable file.  If standard output is a terminal, append output to 'nohup.out' if possible, '$HOME/nohup.out' otherwise.  If
       standard error is a terminal, redirect it to standard output.  To save output to FILE, use 'nohup COMMAND > FILE'.

       NOTE: your shell may have its own version of nohup, which usually supersedes the version described here.  Please refer to your shell's documentation for details about  the  options
       it supports.

AUTHOR
       Written by Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report nohup translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/nohup>
       or available locally via: info '(coreutils) nohup invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                               NOHUP(1)
****************************************************nohup ends here****************************************************


****************************************************ifconfig starts here****************************************************
****************************************************ifconfig ends here****************************************************


****************************************************whoami starts here****************************************************
WHOAMI(1)                                                                              User Commands                                                                              WHOAMI(1)

NAME
       whoami - print effective userid

SYNOPSIS
       whoami [OPTION]...

DESCRIPTION
       Print the user name associated with the current effective user ID.  Same as id -un.

       --help display this help and exit

       --version
              output version information and exit

AUTHOR
       Written by Richard Mlynarik.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report whoami translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/whoami>
       or available locally via: info '(coreutils) whoami invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                              WHOAMI(1)
****************************************************whoami ends here****************************************************


****************************************************which starts here****************************************************
WHICH(1)                                                                          General Commands Manual                                                                          WHICH(1)

NAME
       which - shows the full path of (shell) commands.

SYNOPSIS
       which [options] [--] programname [...]

DESCRIPTION
       Which takes one or more arguments. For each of its arguments it prints to stdout the full path of the executables that would have been executed when this argument had been entered
       at the shell prompt. It does this by searching for an executable or script in the directories listed in the environment variable PATH using the same algorithm as bash(1).

       This man page is generated from the file which.texinfo.

OPTIONS
       --all, -a
           Print all matching executables in PATH, not just the first.

       --read-alias, -i
           Read aliases from stdin, reporting matching ones on stdout. This is useful in combination with using an alias for which itself. For example
           alias which=´alias | which -i´.

       --skip-alias
           Ignore option `--read-alias´, if any. This is useful to explicity search for normal binaries, while using the `--read-alias´ option in an alias or function for which.

       --read-functions
           Read shell function definitions from stdin, reporting matching ones on stdout. This is useful in combination with using a shell function for which itself.  For example:
           which() { declare -f | which --read-functions $@ }
           export -f which

       --skip-functions
           Ignore option `--read-functions´, if any. This is useful to explicity search for normal binaries, while using the `--read-functions´ option in an alias or function for which.

       --skip-dot
           Skip directories in PATH that start with a dot.

       --skip-tilde
           Skip directories in PATH that start with a tilde and executables which reside in the HOME directory.

       --show-dot
           If a directory in PATH starts with a dot and a matching executable was found for that path, then print "./programname" rather than the full path.

       --show-tilde
           Output a tilde when a directory matches the HOME directory. This option is ignored when which is invoked as root.

       --tty-only
           Stop processing options on the right if not on tty.

       --version,-v,-V
           Print version information on standard output then exit successfully.

       --help
           Print usage information on standard output then exit successfully.

RETURN VALUE
       Which returns the number of failed arguments, or -1 when no `programname´ was given.

EXAMPLE
       The recommended way to use this utility is by adding an alias (C shell) or shell function (Bourne shell) for which like the following:

       [ba]sh:

            which ()
            {
              (alias; declare -f) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot $@
            }
            export -f which

       [t]csh:

            alias which ´alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde´

       This will print the readable ~/ and ./ when starting which from your prompt, while still printing the full path when used from a script:

            > which q2
            ~/bin/q2
            > echo `which q2`
            /home/carlo/bin/q2

BUGS
       The HOME directory is determined by looking for the HOME environment variable, which aborts when this variable doesn´t exist.  Which will consider two equivalent directories to  be
       different when one of them contains a path with a symbolic link.

AUTHOR
       Carlo Wood <carlo@gnu.org>

SEE ALSO
       bash(1)

                                                                                                                                                                                   WHICH(1)
****************************************************which ends here****************************************************


****************************************************whereis starts here****************************************************
WHEREIS(1)                                                                             User Commands                                                                             WHEREIS(1)

NAME
       whereis - locate the binary, source, and manual page files for a command

SYNOPSIS
       whereis [options] [-BMS directory... -f] name...

DESCRIPTION
       whereis locates the binary, source and manual files for the specified command names.  The supplied names are first stripped of leading pathname components and any (single) trailing
       extension of the form .ext (for example: .c) Prefixes of s.  resulting from use of source code control are also dealt with.  whereis then attempts to locate the desired program  in
       the standard Linux places, and in the places specified by $PATH and $MANPATH.

       The  search  restrinctions  (options -b, -m and -s) are cumulative and always applied for the next name patterns specified on command line. The first search restrinction resets the
       search mask. For example

              whereis -bm ls tr -m gcc

       searchs for "ls" and "tr" binaries and man pages, and "gcc" man pages only.

       The options -B, -M and -S resets search paths for the next name patterns. For example

              whereis -m ls -M /usr/share/man/man1 -f cal

       searchs for "ls" man pages in all default paths, but for "cal" in /usr/share/man/man1 directory only.

OPTIONS
       -b     Search for binaries.

       -m     Search for manuals.

       -s     Search for sources.

       -u     Only show the command names that have unusual entries.  A command is said to be unusual if it does not have just one entry of each explicitly requested type.  Thus  'whereis
              -m -u *' asks for those files in the current directory which have no documentation file, or more than one.

       -B list
              Limit the places where whereis searches for binaries, by a whitespace-separated list of directories.

       -M list
              Limit the places where whereis searches for manuals, by a whitespace-separated list of directories.

       -S list
              Limit the places where whereis searches for sources, by a whitespace-separated list of directories.

       -f     Terminates the directory list and signals the start of filenames.  It must be used when any of the -B, -M, or -S options is used.

       -l     Output list of effective lookup paths the whereis is using.  When non of -B, -M, or -S is specified the option will out hard coded paths that the command was able to find on
              system.

EXAMPLE
       To find all files in /usr/bin which are not documented in /usr/man/man1 or have no source in /usr/src:

              $ cd /usr/bin
              $ whereis -u -ms -M /usr/man/man1 -S /usr/src -f *

FILE SEARCH PATHS
       By default whereis tries to find files from hard-coded paths, which are defined with glob patterns. The command attempst to use contents of $PATH and $MANPATH environment variables
       as default search path.  The easiest way to know what paths are in use is to add -l listing option.  Effects of the -B, -M, and -S are display with -l.

AVAILABILITY
       The whereis command is part of the util-linux package and is available from Linux Kernel Archive ⟨ftp://ftp.kernel.org/pub/linux/utils/util-linux/⟩.

util-linux                                                                               March 2013                                                                              WHEREIS(1)
****************************************************whereis ends here****************************************************


****************************************************comm starts here****************************************************
COMM(1)                                                                                User Commands                                                                                COMM(1)

NAME
       comm - compare two sorted files line by line

SYNOPSIS
       comm [OPTION]... FILE1 FILE2

DESCRIPTION
       Compare sorted files FILE1 and FILE2 line by line.

       When FILE1 or FILE2 (not both) is -, read standard input.

       With  no options, produce three-column output.  Column one contains lines unique to FILE1, column two contains lines unique to FILE2, and column three contains lines common to both
       files.

       -1     suppress column 1 (lines unique to FILE1)

       -2     suppress column 2 (lines unique to FILE2)

       -3     suppress column 3 (lines that appear in both files)

       --check-order
              check that the input is correctly sorted, even if all input lines are pairable

       --nocheck-order
              do not check that the input is correctly sorted

       --output-delimiter=STR
              separate columns with STR

       --total
              output a summary

       -z, --zero-terminated
              line delimiter is NUL, not newline

       --help display this help and exit

       --version
              output version information and exit

       Note, comparisons honor the rules specified by 'LC_COLLATE'.

EXAMPLES
       comm -12 file1 file2
              Print only lines present in both file1 and file2.

       comm -3 file1 file2
              Print lines in file1 not in file2, and vice versa.

AUTHOR
       Written by Richard M. Stallman and David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report comm translation bugs to <http://translationproject.org/team/>

SEE ALSO
       join(1), uniq(1)

       Full documentation at: <http://www.gnu.org/software/coreutils/comm>
       or available locally via: info '(coreutils) comm invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                COMM(1)
****************************************************comm ends here****************************************************


****************************************************cmp starts here****************************************************
CMP(1)                                                                                 User Commands                                                                                 CMP(1)

NAME
       cmp - compare two files byte by byte

SYNOPSIS
       cmp [OPTION]... FILE1 [FILE2 [SKIP1 [SKIP2]]]

DESCRIPTION
       Compare two files byte by byte.

       The optional SKIP1 and SKIP2 specify the number of bytes to skip at the beginning of each file (zero by default).

       Mandatory arguments to long options are mandatory for short options too.

       -b, --print-bytes
              print differing bytes

       -i, --ignore-initial=SKIP
              skip first SKIP bytes of both inputs

       -i, --ignore-initial=SKIP1:SKIP2
              skip first SKIP1 bytes of FILE1 and first SKIP2 bytes of FILE2

       -l, --verbose
              output byte numbers and differing byte values

       -n, --bytes=LIMIT
              compare at most LIMIT bytes

       -s, --quiet, --silent
              suppress all normal output

       --help display this help and exit

       -v, --version
              output version information and exit

       SKIP values may be followed by the following multiplicative suffixes: kB 1000, K 1024, MB 1,000,000, M 1,048,576, GB 1,000,000,000, G 1,073,741,824, and so on for T, P, E, Z, Y.

       If a FILE is '-' or missing, read standard input.  Exit status is 0 if inputs are the same, 1 if different, 2 if trouble.

AUTHOR
       Written by Torbjorn Granlund and David MacKenzie.

REPORTING BUGS
       Report bugs to: bug-diffutils@gnu.org
       GNU diffutils home page: <http://www.gnu.org/software/diffutils/>
       General help using GNU software: <http://www.gnu.org/gethelp/>

COPYRIGHT
       Copyright © 2016 Free Software Foundation, Inc.  License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       diff(1), diff3(1), sdiff(1)

       The full documentation for cmp is maintained as a Texinfo manual.  If the info and cmp programs are properly installed at your site, the command

              info cmp

       should give you access to the complete manual.

diffutils 3.5                                                                           August 2016                                                                                  CMP(1)
****************************************************cmp ends here****************************************************


****************************************************diff starts here****************************************************
DIFF(1)                                                                                User Commands                                                                                DIFF(1)

NAME
       diff - compare files line by line

SYNOPSIS
       diff [OPTION]... FILES

DESCRIPTION
       Compare FILES line by line.

       Mandatory arguments to long options are mandatory for short options too.

       --normal
              output a normal diff (the default)

       -q, --brief
              report only when files differ

       -s, --report-identical-files
              report when two files are the same

       -c, -C NUM, --context[=NUM]
              output NUM (default 3) lines of copied context

       -u, -U NUM, --unified[=NUM]
              output NUM (default 3) lines of unified context

       -e, --ed
              output an ed script

       -n, --rcs
              output an RCS format diff

       -y, --side-by-side
              output in two columns

       -W, --width=NUM
              output at most NUM (default 130) print columns

       --left-column
              output only the left column of common lines

       --suppress-common-lines
              do not output common lines

       -p, --show-c-function
              show which C function each change is in

       -F, --show-function-line=RE
              show the most recent line matching RE

       --label LABEL
              use LABEL instead of file name and timestamp (can be repeated)

       -t, --expand-tabs
              expand tabs to spaces in output

       -T, --initial-tab
              make tabs line up by prepending a tab

       --tabsize=NUM
              tab stops every NUM (default 8) print columns

       --suppress-blank-empty
              suppress space or tab before empty output lines

       -l, --paginate
              pass output through 'pr' to paginate it

       -r, --recursive
              recursively compare any subdirectories found

       --no-dereference
              don't follow symbolic links

       -N, --new-file
              treat absent files as empty

       --unidirectional-new-file
              treat absent first files as empty

       --ignore-file-name-case
              ignore case when comparing file names

       --no-ignore-file-name-case
              consider case when comparing file names

       -x, --exclude=PAT
              exclude files that match PAT

       -X, --exclude-from=FILE
              exclude files that match any pattern in FILE

       -S, --starting-file=FILE
              start with FILE when comparing directories

       --from-file=FILE1
              compare FILE1 to all operands; FILE1 can be a directory

       --to-file=FILE2
              compare all operands to FILE2; FILE2 can be a directory

       -i, --ignore-case
              ignore case differences in file contents

       -E, --ignore-tab-expansion
              ignore changes due to tab expansion

       -Z, --ignore-trailing-space
              ignore white space at line end

       -b, --ignore-space-change
              ignore changes in the amount of white space

       -w, --ignore-all-space
              ignore all white space

       -B, --ignore-blank-lines
              ignore changes where lines are all blank

       -I, --ignore-matching-lines=RE
              ignore changes where all lines match RE

       -a, --text
              treat all files as text

       --strip-trailing-cr
              strip trailing carriage return on input

       -D, --ifdef=NAME
              output merged file with '#ifdef NAME' diffs

       --GTYPE-group-format=GFMT
              format GTYPE input groups with GFMT

       --line-format=LFMT
              format all input lines with LFMT

       --LTYPE-line-format=LFMT
              format LTYPE input lines with LFMT

              These format options provide fine-grained control over the output

              of diff, generalizing -D/--ifdef.

       LTYPE is 'old', 'new', or 'unchanged'.
              GTYPE is LTYPE or 'changed'.

              GFMT (only) may contain:

       %<     lines from FILE1

       %>     lines from FILE2

       %=     lines common to FILE1 and FILE2

       %[-][WIDTH][.[PREC]]{doxX}LETTER
              printf-style spec for LETTER

              LETTERs are as follows for new group, lower case for old group:

       F      first line number

       L      last line number

       N      number of lines = L-F+1

       E      F-1

       M      L+1

       %(A=B?T:E)
              if A equals B then T else E

              LFMT (only) may contain:

       %L     contents of line

       %l     contents of line, excluding any trailing newline

       %[-][WIDTH][.[PREC]]{doxX}n
              printf-style spec for input line number

              Both GFMT and LFMT may contain:

       %%     %

       %c'C'  the single character C

       %c'\OOO'
              the character with octal code OOO

       C      the character C (other characters represent themselves)

       -d, --minimal
              try hard to find a smaller set of changes

       --horizon-lines=NUM
              keep NUM lines of the common prefix and suffix

       --speed-large-files
              assume large files and many scattered small changes

       --color[=WHEN]
              colorize the output; WHEN can be 'never', 'always', or 'auto' (the default)

       --palette=PALETTE
              specify the colors to use when --color is active PALETTE is a colon-separated list terminfo capabilities

       --help display this help and exit

       -v, --version
              output version information and exit

       FILES  are  'FILE1  FILE2' or 'DIR1 DIR2' or 'DIR FILE' or 'FILE DIR'.  If --from-file or --to-file is given, there are no restrictions on FILE(s).  If a FILE is '-', read standard
       input.  Exit status is 0 if inputs are the same, 1 if different, 2 if trouble.

AUTHOR
       Written by Paul Eggert, Mike Haertel, David Hayes, Richard Stallman, and Len Tower.

REPORTING BUGS
       Report bugs to: bug-diffutils@gnu.org
       GNU diffutils home page: <http://www.gnu.org/software/diffutils/>
       General help using GNU software: <http://www.gnu.org/gethelp/>

COPYRIGHT
       Copyright © 2016 Free Software Foundation, Inc.  License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       wdiff(1), cmp(1), diff3(1), sdiff(1), patch(1)

       The full documentation for diff is maintained as a Texinfo manual.  If the info and diff programs are properly installed at your site, the command

              info diff

       should give you access to the complete manual.

diffutils 3.5                                                                           August 2016                                                                                 DIFF(1)
****************************************************diff ends here****************************************************


****************************************************find starts here****************************************************
FIND(1)                                                                           General Commands Manual                                                                           FIND(1)

NAME
       find - search for files in a directory hierarchy

SYNOPSIS
       find [-H] [-L] [-P] [-D debugopts] [-Olevel] [starting-point...] [expression]

DESCRIPTION
       This manual page documents the GNU version of find.  GNU find searches the directory tree rooted at each given starting-point by evaluating the given expression from left to right,
       according to the rules of precedence (see section OPERATORS), until the outcome is known (the left hand side is false for and operations, true for or), at which point find moves on
       to the next file name.  If no starting-point is specified, `.' is assumed.

       If  you  are  using find in an environment where security is important (for example if you are using it to search directories that are writable by other users), you should read the
       "Security Considerations" chapter of the findutils documentation, which is called Finding Files and comes with findutils.   That document also includes a lot more detail  and  dis‐
       cussion than this manual page, so you may find it a more useful source of information.

OPTIONS
       The  -H,  -L and -P options control the treatment of symbolic links.  Command-line arguments following these are taken to be names of files or directories to be examined, up to the
       first argument that begins with `-', or the argument `(' or `!'.  That argument and any following arguments are taken to be the expression describing what is to  be  searched  for.
       If no paths are given, the current directory is used.  If no expression is given, the expression -print is used (but you should probably consider using -print0 instead, anyway).

       This  manual  page  talks about `options' within the expression list.  These options control the behaviour of find but are specified immediately after the last path name.  The five
       `real' options -H, -L, -P, -D and -O must appear before the first path name, if at all.  A double dash -- can also be used to signal that any remaining arguments  are  not  options
       (though ensuring that all start points begin with either `./' or `/' is generally safer if you use wildcards in the list of start points).

       -P     Never follow symbolic links.  This is the default behaviour.  When find examines or prints information a file, and the file is a symbolic link, the information used shall be
              taken from the properties of the symbolic link itself.

       -L     Follow symbolic links.  When find examines or prints information about files, the information used shall be taken from the properties of the file to which the  link  points,
              not  from  the link itself (unless it is a broken symbolic link or find is unable to examine the file to which the link points).  Use of this option implies -noleaf.  If you
              later use the -P option, -noleaf will still be in effect.  If -L is in effect and find discovers a symbolic link to  a  subdirectory  during  its  search,  the  subdirectory
              pointed to by the symbolic link will be searched.

              When  the  -L  option is in effect, the -type predicate will always match against the type of the file that a symbolic link points to rather than the link itself (unless the
              symbolic link is broken).  Actions that can cause symbolic links to become broken while find is executing (for example -delete) can give rise to confusing behaviour.   Using
              -L causes the -lname and -ilname predicates always to return false.

       -H     Do  not follow symbolic links, except while processing the command line arguments.  When find examines or prints information about files, the information used shall be taken
              from the properties of the symbolic link itself.   The only exception to this behaviour is when a file specified on the command line is a symbolic link, and the link can  be
              resolved.  For that situation, the information used is taken from whatever the link points to (that is, the link is followed).  The information about the link itself is used
              as a fallback if the file pointed to by the symbolic link cannot be examined.  If -H is in effect and one of the paths specified on the command line is a symbolic link to  a
              directory, the contents of that directory will be examined (though of course -maxdepth 0 would prevent this).

       If  more  than one of -H, -L and -P is specified, each overrides the others; the last one appearing on the command line takes effect.  Since it is the default, the -P option should
       be considered to be in effect unless either -H or -L is specified.

       GNU find frequently stats files during the processing of the command line itself, before any searching has begun.  These options also affect  how  those  arguments  are  processed.
       Specifically,  there  are a number of tests that compare files listed on the command line against a file we are currently considering.  In each case, the file specified on the com‐
       mand line will have been examined and some of its properties will have been saved.  If the named file is in fact a symbolic link, and the -P option is in effect (or if  neither  -H
       nor -L were specified), the information used for the comparison will be taken from the properties of the symbolic link.  Otherwise, it will be taken from the properties of the file
       the link points to.  If find cannot follow the link (for example because it has insufficient privileges or the link points to a nonexistent file) the properties of the link  itself
       will be used.

       When  the  -H or -L options are in effect, any symbolic links listed as the argument of -newer will be dereferenced, and the timestamp will be taken from the file to which the sym‐
       bolic link points.  The same consideration applies to -newerXY, -anewer and -cnewer.

       The -follow option has a similar effect to -L, though it takes effect at the point where it appears (that is, if -L is not used but -follow is, any symbolic links  appearing  after
       -follow on the command line will be dereferenced, and those before it will not).

       -D debugoptions
              Print  diagnostic information; this can be helpful to diagnose problems with why find is not doing what you want.  The list of debug options should be comma separated.  Com‐
              patibility of the debug options is not guaranteed between releases of findutils.  For a complete list of valid debug options, see the output of find -D  help.   Valid  debug
              options include

              help   Explain the debugging options

              tree   Show the expression tree in its original and optimised form.

              stat   Print messages as files are examined with the stat and lstat system calls.  The find program tries to minimise such calls.

              opt    Prints diagnostic information relating to the optimisation of the expression tree; see the -O option.

              rates  Prints a summary indicating how often each predicate succeeded or failed.

       -Olevel
              Enables  query  optimisation.    The  find  program  reorders  tests to speed up execution while preserving the overall effect; that is, predicates with side effects are not
              reordered relative to each other.  The optimisations performed at each optimisation level are as follows.

              0      Equivalent to optimisation level 1.

              1      This is the default optimisation level and corresponds to the traditional behaviour.  Expressions are reordered so that tests based only on the names  of  files  (for
                     example -name and -regex) are performed first.

              2      Any  -type or -xtype tests are performed after any tests based only on the names of files, but before any tests that require information from the inode.  On many mod‐
                     ern versions of Unix, file types are returned by readdir() and so these predicates are faster to evaluate than predicates which need to stat the file first.   If  you
                     use the -fstype FOO predicate and specify a filesystem type FOO which is not known (that is, present in `/etc/mtab') at the time find starts, that predicate is equiv‐
                     alent to -false.

              3      At this optimisation level, the full cost-based query optimiser is enabled.  The order of tests is modified so that cheap (i.e. fast) tests are  performed  first  and
                     more  expensive ones are performed later, if necessary.  Within each cost band, predicates are evaluated earlier or later according to whether they are likely to suc‐
                     ceed or not.  For -o, predicates which are likely to succeed are evaluated earlier, and for -a, predicates which are likely to fail are evaluated earlier.

              The cost-based optimiser has a fixed idea of how likely any given test is to succeed.  In some cases the probability takes account of the specific nature of  the  test  (for
              example, -type f is assumed to be more likely to succeed than -type c).  The cost-based optimiser is currently being evaluated.   If it does not actually improve the perfor‐
              mance of find, it will be removed again.  Conversely, optimisations that prove to be reliable, robust and effective may be enabled at lower optimisation  levels  over  time.
              However,  the  default  behaviour  (i.e.  optimisation level 1) will not be changed in the 4.3.x release series.  The findutils test suite runs all the tests on find at each
              optimisation level and ensures that the result is the same.

EXPRESSION
       The part of the command line after the list of starting points is the expression.  This is a kind of query specification describing how we match files and what we do with the files
       that were matched.  An expression is composed of a sequence of things:

       Tests  Tests  return  a  true or false value, usually on the basis of some property of a file we are considering.  The -empty test for example is true only when the current file is
              empty.

       Actions
              Actions have side effects (such as printing something on the standard output) and return either true or false, usually based on whether or  not  they  are  successful.   The
              -print action for example prints the name of the current file on the standard output.

       Global options
              Global  options affect the operation of tests and actions specified on any part of the command line.  Global options always return true.  The -depth option for example makes
              find traverse the file system in a depth-first order.

       Positional options
              Positional optiona affect only tests or actions which follow them.  Positional options always return true.  The -regextype option for example is positional,  specifying  the
              regular expression dialect for regulat expressions occurring later on the command line.

       Operators
              Operators join together the other items within the expression.  They include for example -o (meaning logical OR) and -a (meaning logical AND).  Where an operator is missing,
              -a is assumed.

       If the whole expression contains no actions other than -prune or -print, -print is performed on all files for which the whole expression is true.

       The -delete action also acts like an option (since it implies -depth).

   POSITIONAL OPTIONS
       Positional options always return true.  They affect only tests occurring later on the command line.

       -daystart
              Measure times (for -amin, -atime, -cmin, -ctime, -mmin, and -mtime) from the beginning of today rather than from 24 hours ago.  This option only affects tests  which  appear
              later on the command line.

       -follow
              Deprecated; use the -L option instead.  Dereference symbolic links.  Implies -noleaf.  The -follow option affects only those tests which appear after it on the command line.
              Unless the -H or -L option has been specified, the position of the -follow option changes the behaviour of the -newer predicate; any files listed as the argument  of  -newer
              will  be dereferenced if they are symbolic links.  The same consideration applies to -newerXY, -anewer and -cnewer.  Similarly, the -type predicate will always match against
              the type of the file that a symbolic link points to rather than the link itself.  Using -follow causes the -lname and -ilname predicates always to return false.

       -regextype type
              Changes the regular expression syntax understood by -regex and -iregex tests which occur later on the command line.  To see which regular expression  types  are  known,  use
              -regextype help.  The Texinfo documentation (see SEE ALSO) explains the meaning of and differences between the various types of regular expression.

       -warn, -nowarn
              Turn  warning  messages  on  or off.  These warnings apply only to the command line usage, not to any conditions that find might encounter when it searches directories.  The
              default behaviour corresponds to -warn if standard input is a tty, and to -nowarn otherwise.  If a warning message relating to command-line usage is produced, the exit  sta‐
              tus of find is not affected.  If the POSIXLY_CORRECT environment variable is set, and -warn is also used, it is not specified which, if any, warnings will be active.

   GLOBAL OPTIONS
       Global  options  always  return true.  Global options take effect even for tests which occurr earlier on the command line.  To prevent confusion, global options should specified on
       the command-line after the list of start points, just before the first test, positional option or action. If you specify a global option in some other  place,  find  will  issue  a
       warning message explaining that this can be confusing.

       The global options occur after the list of start points, and so are not the same kind of option as -L, for example.

       -d     A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.

       -depth Process each directory's contents before the directory itself.  The -delete action also implies -depth.

       -help, --help
              Print a summary of the command-line usage of find and exit.

       -ignore_readdir_race
              Normally,  find will emit an error message when it fails to stat a file.  If you give this option and a file is deleted between the time find reads the name of the file from
              the directory and the time it tries to stat the file, no error message will be issued.    This also applies to files or directories whose names  are  given  on  the  command
              line.   This  option takes effect at the time the command line is read, which means that you cannot search one part of the filesystem with this option on and part of it with
              this option off (if you need to do that, you will need to issue two find commands instead, one with the option and one without it).

       -maxdepth levels
              Descend at most levels (a non-negative integer) levels of directories below the starting-points.  -maxdepth 0
               means only apply the tests and actions to the starting-points themselves.

       -mindepth levels
              Do not apply any tests or actions at levels less than levels (a non-negative integer).  -mindepth 1 means process all files except the starting-points.

       -mount Don't descend directories on other filesystems.  An alternate name for -xdev, for compatibility with some other versions of find.

       -noignore_readdir_race
              Turns off the effect of -ignore_readdir_race.

       -noleaf
              Do not optimize by assuming that directories contain 2 fewer subdirectories than their hard link count.  This option is needed when searching filesystems that do not  follow
              the  Unix  directory-link convention, such as CD-ROM or MS-DOS filesystems or AFS volume mount points.  Each directory on a normal Unix filesystem has at least 2 hard links:
              its name and its `.'  entry.  Additionally, its subdirectories (if any) each have a `..' entry linked to that directory.  When find is examining a directory,  after  it  has
              statted  2  fewer  subdirectories  than the directory's link count, it knows that the rest of the entries in the directory are non-directories (`leaf' files in the directory
              tree).  If only the files' names need to be examined, there is no need to stat them; this gives a significant increase in search speed.

       -version, --version
              Print the find version number and exit.

       -xdev  Don't descend directories on other filesystems.

   TESTS
       Some tests, for example -newerXY and -samefile, allow comparison between the file currently being examined and some reference file specified on the command line.  When these  tests
       are  used,  the  interpretation of the reference file is determined by the options -H, -L and -P and any previous -follow, but the reference file is only examined once, at the time
       the command line is parsed.  If the reference file cannot be examined (for example, the stat(2) system call fails for it), an error message is issued, and find exits with a nonzero
       status.

       Numeric arguments can be specified as

       +n     for greater than n,

       -n     for less than n,

       n      for exactly n.

       -amin n
              File was last accessed n minutes ago.

       -anewer file
              File  was  last  accessed  more  recently than file was modified.  If file is a symbolic link and the -H option or the -L option is in effect, the access time of the file it
              points to is always used.

       -atime n
              File was last accessed n*24 hours ago.  When find figures out how many 24-hour periods ago the file was last accessed, any fractional part is ignored, so to match -atime +1,
              a file has to have been accessed at least two days ago.

       -cmin n
              File's status was last changed n minutes ago.

       -cnewer file
              File's  status  was last changed more recently than file was modified.  If file is a symbolic link and the -H option or the -L option is in effect, the status-change time of
              the file it points to is always used.

       -ctime n
              File's status was last changed n*24 hours ago.  See the comments for -atime to understand how rounding affects the interpretation of file status change times.

       -empty File is empty and is either a regular file or a directory.

       -executable
              Matches files which are executable and directories which are searchable (in a file name resolution sense).  This takes into account access control lists  and  other  permis‐
              sions  artefacts  which  the -perm test ignores.  This test makes use of the access(2) system call, and so can be fooled by NFS servers which do UID mapping (or root-squash‐
              ing), since many systems implement access(2) in the client's kernel and so cannot make use of the UID mapping information held on the server.  Because  this  test  is  based
              only on the result of the access(2) system call, there is no guarantee that a file for which this test succeeds can actually be executed.

       -false Always false.

       -fstype type
              File  is  on  a  filesystem of type type.  The valid filesystem types vary among different versions of Unix; an incomplete list of filesystem types that are accepted on some
              version of Unix or another is: ufs, 4.2, 4.3, nfs, tmp, mfs, S51K, S52K.  You can use -printf with the %F directive to see the types of your filesystems.

       -gid n File's numeric group ID is n.

       -group gname
              File belongs to group gname (numeric group ID allowed).

       -ilname pattern
              Like -lname, but the match is case insensitive.  If the -L option or the -follow option is in effect, this test returns false unless the symbolic link is broken.

       -iname pattern
              Like -name, but the match is case insensitive.  For example, the patterns `fo*' and `F??' match the file names `Foo', `FOO', `foo', `fOo', etc.   The  pattern  `*foo*`  will
              also match a file called '.foobar'.

       -inum n
              File has inode number n.  It is normally easier to use the -samefile test instead.

       -ipath pattern
              Like -path.  but the match is case insensitive.

       -iregex pattern
              Like -regex, but the match is case insensitive.

       -iwholename pattern
              See -ipath.  This alternative is less portable than -ipath.

       -links n
              File has n links.

       -lname pattern
              File  is  a  symbolic  link  whose contents match shell pattern pattern.  The metacharacters do not treat `/' or `.' specially.  If the -L option or the -follow option is in
              effect, this test returns false unless the symbolic link is broken.

       -mmin n
              File's data was last modified n minutes ago.

       -mtime n
              File's data was last modified n*24 hours ago.  See the comments for -atime to understand how rounding affects the interpretation of file modification times.

       -name pattern
              Base of file name (the path with the leading directories removed) matches shell pattern pattern.  Because the leading directories are removed, the file names considered  for
              a match with -name will never include a slash, so `-name a/b' will never match anything (you probably need to use -path instead).  A warning is issued if you try to do this,
              unless the environment variable POSIXLY_CORRECT is set.  The metacharacters (`*', `?', and `[]') match a `.' at the start of the base  name  (this  is  a  change  in  findu‐
              tils-4.2.2;  see section STANDARDS CONFORMANCE below).  To ignore a directory and the files under it, use -prune; see an example in the description of -path.  Braces are not
              recognised as being special, despite the fact that some shells including Bash imbue braces with a special meaning in shell patterns.  The filename matching is performed with
              the use of the fnmatch(3) library function.   Don't forget to enclose the pattern in quotes in order to protect it from expansion by the shell.

       -newer file
              File  was  modified  more  recently than file.  If file is a symbolic link and the -H option or the -L option is in effect, the modification time of the file it points to is
              always used.

       -newerXY reference
              Succeeds if timestamp X of the file being considered is newer than timestamp Y of the file reference.   The letters X and Y can be any of the following letters:

              a   The access time of the file reference
              B   The birth time of the file reference
              c   The inode status change time of reference
              m   The modification time of the file reference
              t   reference is interpreted directly as a time

              Some combinations are invalid; for example, it is invalid for X to be t.  Some combinations are not implemented on all systems; for example B is not supported  on  all  sys‐
              tems.   If  an invalid or unsupported combination of XY is specified, a fatal error results.  Time specifications are interpreted as for the argument to the -d option of GNU
              date.  If you try to use the birth time of a reference file, and the birth time cannot be determined, a fatal error message results.  If you specify a test which  refers  to
              the birth time of files being examined, this test will fail for any files where the birth time is unknown.

       -nogroup
              No group corresponds to file's numeric group ID.

       -nouser
              No user corresponds to file's numeric user ID.

       -path pattern
              File name matches shell pattern pattern.  The metacharacters do not treat `/' or `.' specially; so, for example,
                        find . -path "./sr*sc"
              will  print  an  entry  for  a directory called `./src/misc' (if one exists).  To ignore a whole directory tree, use -prune rather than checking every file in the tree.  For
              example, to skip the directory `src/emacs' and all files and directories under it, and print the names of the other files found, do something like this:
                        find . -path ./src/emacs -prune -o -print
              Note that the pattern match test applies to the whole file name, starting from one of the start points named on the command line.  It would only make sense to use  an  abso‐
              lute path name here if the relevant start point is also an absolute path.  This means that this command will never match anything:
                        find bar -path /foo/bar/myfile -print
              Find  compares  the  -path  argument  with the concatenation of a directory name and the base name of the file it's examining.  Since the concatenation will never end with a
              slash, -path arguments ending in a slash will match nothing (except perhaps a start point specified on the command line).  The predicate -path is  also  supported  by  HP-UX
              find and will be in a forthcoming version of the POSIX standard.

       -perm mode
              File's  permission  bits  are exactly mode (octal or symbolic).  Since an exact match is required, if you want to use this form for symbolic modes, you may have to specify a
              rather complex mode string.  For example `-perm g=w' will only match files which have mode 0020 (that is, ones for which group write permission is the only permission  set).
              It is more likely that you will want to use the `/' or `-' forms, for example `-perm -g=w', which matches any file with group write permission.  See the EXAMPLES section for
              some illustrative examples.

       -perm -mode
              All of the permission bits mode are set for the file.  Symbolic modes are accepted in this form, and this is usually the way in which you would want to use them.   You  must
              specify `u', `g' or `o' if you use a symbolic mode.   See the EXAMPLES section for some illustrative examples.

       -perm /mode
              Any of the permission bits mode are set for the file.  Symbolic modes are accepted in this form.  You must specify `u', `g' or `o' if you use a symbolic mode.  See the EXAM‐
              PLES section for some illustrative examples.  If no permission bits in mode are set, this test matches any file (the idea here is to be  consistent  with  the  behaviour  of
              -perm -000).

       -perm +mode
              This is no longer supported (and has been deprecated since 2005).  Use -perm /mode instead.

       -readable
              Matches  files  which  are  readable.  This takes into account access control lists and other permissions artefacts which the -perm test ignores.  This test makes use of the
              access(2) system call, and so can be fooled by NFS servers which do UID mapping (or root-squashing), since many systems implement access(2) in the  client's  kernel  and  so
              cannot make use of the UID mapping information held on the server.

       -regex pattern
              File  name  matches  regular  expression  pattern.   This is a match on the whole path, not a search.  For example, to match a file named `./fubar3', you can use the regular
              expression `.*bar.' or `.*b.*3', but not `f.*r3'.  The regular expressions understood by find are by default Emacs Regular Expressions, but this  can  be  changed  with  the
              -regextype option.

       -samefile name
              File refers to the same inode as name.   When -L is in effect, this can include symbolic links.

       -size n[cwbkMG]
              File uses n units of space, rounding up.  The following suffixes can be used:

              `b'    for 512-byte blocks (this is the default if no suffix is used)

              `c'    for bytes

              `w'    for two-byte words

              `k'    for Kilobytes (units of 1024 bytes)

              `M'    for Megabytes (units of 1048576 bytes)

              `G'    for Gigabytes (units of 1073741824 bytes)

              The  size does not count indirect blocks, but it does count blocks in sparse files that are not actually allocated.  Bear in mind that the `%k' and `%b' format specifiers of
              -printf handle sparse files differently.  The `b' suffix always denotes 512-byte blocks and never 1 Kilobyte blocks, which is different to the behaviour of -ls.  The + and -
              prefixes signify greater than and less than, as usual, but bear in mind that the size is rounded up to the next unit (so a 1-byte file is not matched by -size -1M).

       -true  Always true.

       -type c
              File is of type c:

              b      block (buffered) special

              c      character (unbuffered) special

              d      directory

              p      named pipe (FIFO)

              f      regular file

              l      symbolic  link;  this is never true if the -L option or the -follow option is in effect, unless the symbolic link is broken.  If you want to search for symbolic links
                     when -L is in effect, use -xtype.

              s      socket

              D      door (Solaris)

       -uid n File's numeric user ID is n.

       -used n
              File was last accessed n days after its status was last changed.

       -user uname
              File is owned by user uname (numeric user ID allowed).

       -wholename pattern
              See -path.  This alternative is less portable than -path.

       -writable
              Matches files which are writable.  This takes into account access control lists and other permissions artefacts which the -perm test ignores.  This test  makes  use  of  the
              access(2)  system  call,  and  so can be fooled by NFS servers which do UID mapping (or root-squashing), since many systems implement access(2) in the client's kernel and so
              cannot make use of the UID mapping information held on the server.

       -xtype c
              The same as -type unless the file is a symbolic link.  For symbolic links: if the -H or -P option was specified, true if the file is a link to a file of type c;  if  the  -L
              option has been given, true if c is `l'.  In other words, for symbolic links, -xtype checks the type of the file that -type does not check.

       -context pattern
              (SELinux only) Security context of the file matches glob pattern.

   ACTIONS
       -delete
              Delete  files;  true  if  removal  succeeded.   If  the removal failed, an error message is issued.  If -delete fails, find's exit status will be nonzero (when it eventually
              exits).  Use of -delete automatically turns on the `-depth' option.

              Warnings: Don't forget that the find command line is evaluated as an expression, so putting -delete first will make find try to delete everything below the  starting  points
              you  specified.  When testing a find command line that you later intend to use with -delete, you should explicitly specify -depth in order to avoid later surprises.  Because
              -delete implies -depth, you cannot usefully use -prune and -delete together.

       -exec command ;
              Execute command; true if 0 status is returned.  All following arguments to find are taken to be arguments to the command until an argument consisting of `;' is  encountered.
              The  string  `{}'  is  replaced by the current file name being processed everywhere it occurs in the arguments to the command, not just in arguments where it is alone, as in
              some versions of find.  Both of these constructions might need to be escaped (with a `\') or quoted to protect them from expansion by the shell.  See  the  EXAMPLES  section
              for  examples  of  the  use  of  the  -exec option.  The specified command is run once for each matched file.  The command is executed in the starting directory.   There are
              unavoidable security problems surrounding use of the -exec action; you should use the -execdir option instead.

       -exec command {} +
              This variant of the -exec action runs the specified command on the selected files, but the command line is built by appending each selected file name at the end;  the  total
              number of invocations of the command will be much less than the number of matched files.  The command line is built in much the same way that xargs builds its command lines.
              Only one instance of `{}' is allowed within the command.  The command is executed in the starting directory.  If find encounters an error, this can sometimes cause an  imme‐
              diate exit, so some pending commands may not be run at all.  This variant of -exec always returns true.

       -execdir command ;

       -execdir command {} +
              Like  -exec,  but the specified command is run from the subdirectory containing the matched file, which is not normally the directory in which you started find.  This a much
              more secure method for invoking commands, as it avoids race conditions during resolution of the paths to the matched files.  As with  the  -exec  action,  the  `+'  form  of
              -execdir  will  build a command line to process more than one matched file, but any given invocation of command will only list files that exist in the same subdirectory.  If
              you use this option, you must ensure that your $PATH environment variable does not reference `.'; otherwise, an attacker can run any commands they like by leaving an  appro‐
              priately-named  file  in  a directory in which you will run -execdir.  The same applies to having entries in $PATH which are empty or which are not absolute directory names.
              If find encounters an error, this can sometimes cause an immediate exit, so some pending commands may not be run at all. The result of the action depends on whether the + or
              the ; variant is being used; -execdir command {} + always returns true, while -execdir command {} ; returns true only if command returns 0.

       -fls file
              True; like -ls but write to file like -fprint.  The output file is always created, even if the predicate is never matched.  See the UNUSUAL FILENAMES section for information
              about how unusual characters in filenames are handled.

       -fprint file
              True; print the full file name into file file.  If file does not exist when find is run, it is created; if it does exist, it is truncated.  The file names `/dev/stdout'  and
              `/dev/stderr'  are handled specially; they refer to the standard output and standard error output, respectively.  The output file is always created, even if the predicate is
              never matched.  See the UNUSUAL FILENAMES section for information about how unusual characters in filenames are handled.

       -fprint0 file
              True; like -print0 but write to file like -fprint.  The output file is always created, even if the predicate is never matched.  See the UNUSUAL FILENAMES section for  infor‐
              mation about how unusual characters in filenames are handled.

       -fprintf file format
              True;  like -printf but write to file like -fprint.  The output file is always created, even if the predicate is never matched.  See the UNUSUAL FILENAMES section for infor‐
              mation about how unusual characters in filenames are handled.

       -ls    True; list current file in ls -dils format on standard output.  The block counts are of 1K blocks, unless the environment variable POSIXLY_CORRECT  is  set,  in  which  case
              512-byte blocks are used.  See the UNUSUAL FILENAMES section for information about how unusual characters in filenames are handled.

       -ok command ;
              Like  -exec  but  ask  the  user  first.   If  the  user agrees, run the command.  Otherwise just return false.  If the command is run, its standard input is redirected from
              /dev/null.

              The response to the prompt is matched against a pair of regular expressions to determine if it is an affirmative or negative response.  This regular expression  is  obtained
              from  the  system  if the `POSIXLY_CORRECT' environment variable is set, or otherwise from find's message translations.  If the system has no suitable definition, find's own
              definition will be used.   In either case, the interpretation of the regular expression itself will be affected by the environment variables 'LC_CTYPE'  (character  classes)
              and 'LC_COLLATE' (character ranges and equivalence classes).

       -okdir command ;
              Like  -execdir  but  ask  the user first in the same way as for -ok.  If the user does not agree, just return false.  If the command is run, its standard input is redirected
              from /dev/null.

       -print True; print the full file name on the standard output, followed by a newline.   If you are piping the output of find into another program and there is the faintest possibil‐
              ity that the files which you are searching for might contain a newline, then you should seriously consider using the -print0 option instead of -print.  See the UNUSUAL FILE‐
              NAMES section for information about how unusual characters in filenames are handled.

       -print0
              True; print the full file name on the standard output, followed by a null character (instead of the newline character that -print uses).  This allows file names that contain
              newlines or other types of white space to be correctly interpreted by programs that process the find output.  This option corresponds to the -0 option of xargs.

       -printf format
              True;  print  format  on  the  standard  output,  interpreting `\' escapes and `%' directives.  Field widths and precisions can be specified as with the `printf' C function.
              Please note that many of the fields are printed as %s rather than %d, and this may mean that flags don't work as you might expect.  This also means that the  `-'  flag  does
              work (it forces fields to be left-aligned).  Unlike -print, -printf does not add a newline at the end of the string.  The escapes and directives are:

              \a     Alarm bell.

              \b     Backspace.

              \c     Stop printing from this format immediately and flush the output.

              \f     Form feed.

              \n     Newline.

              \r     Carriage return.

              \t     Horizontal tab.

              \v     Vertical tab.

              \0     ASCII NUL.

              \\     A literal backslash (`\').

              \NNN   The character whose ASCII code is NNN (octal).

              A `\' character followed by any other character is treated as an ordinary character, so they both are printed.

              %%     A literal percent sign.

              %a     File's last access time in the format returned by the C `ctime' function.

              %Ak    File's  last  access time in the format specified by k, which is either `@' or a directive for the C `strftime' function.  The possible values for k are listed below;
                     some of them might not be available on all systems, due to differences in `strftime' between systems.

                     @      seconds since Jan. 1, 1970, 00:00 GMT, with fractional part.

                     Time fields:

                     H      hour (00..23)

                     I      hour (01..12)

                     k      hour ( 0..23)

                     l      hour ( 1..12)

                     M      minute (00..59)

                     p      locale's AM or PM

                     r      time, 12-hour (hh:mm:ss [AP]M)

                     S      Second (00.00 .. 61.00).  There is a fractional part.

                     T      time, 24-hour (hh:mm:ss)

                     +      Date and time, separated by `+', for example `2004-04-28+22:22:05.0'.  This is a GNU extension.  The time is given  in  the  current  timezone  (which  may  be
                            affected by setting the TZ environment variable).  The seconds field includes a fractional part.

                     X      locale's time representation (H:M:S)

                     Z      time zone (e.g., EDT), or nothing if no time zone is determinable

                     Date fields:

                     a      locale's abbreviated weekday name (Sun..Sat)

                     A      locale's full weekday name, variable length (Sunday..Saturday)

                     b      locale's abbreviated month name (Jan..Dec)

                     B      locale's full month name, variable length (January..December)

                     c      locale's  date  and time (Sat Nov 04 12:02:33 EST 1989).  The format is the same as for ctime(3) and so to preserve compatibility with that format, there is no
                            fractional part in the seconds field.

                     d      day of month (01..31)

                     D      date (mm/dd/yy)

                     h      same as b

                     j      day of year (001..366)

                     m      month (01..12)

                     U      week number of year with Sunday as first day of week (00..53)

                     w      day of week (0..6)

                     W      week number of year with Monday as first day of week (00..53)

                     x      locale's date representation (mm/dd/yy)

                     y      last two digits of year (00..99)

                     Y      year (1970...)

              %b     The amount of disk space used for this file in 512-byte blocks.  Since disk space is allocated in multiples of the filesystem block size this is usually greater  than
                     %s/512, but it can also be smaller if the file is a sparse file.

              %c     File's last status change time in the format returned by the C `ctime' function.

              %Ck    File's last status change time in the format specified by k, which is the same as for %A.

              %d     File's depth in the directory tree; 0 means the file is a starting-point.

              %D     The device number on which the file exists (the st_dev field of struct stat), in decimal.

              %f     File's name with any leading directories removed (only the last element).

              %F     Type of the filesystem the file is on; this value can be used for -fstype.

              %g     File's group name, or numeric group ID if the group has no name.

              %G     File's numeric group ID.

              %h     Leading  directories  of file's name (all but the last element).  If the file name contains no slashes (since it is in the current directory) the %h specifier expands
                     to ".".

              %H     Starting-point under which file was found.

              %i     File's inode number (in decimal).

              %k     The amount of disk space used for this file in 1K blocks.  Since disk space is allocated in multiples of the filesystem  block  size  this  is  usually  greater  than
                     %s/1024, but it can also be smaller if the file is a sparse file.

              %l     Object of symbolic link (empty string if file is not a symbolic link).

              %m     File's  permission  bits  (in  octal).   This option uses the `traditional' numbers which most Unix implementations use, but if your particular implementation uses an
                     unusual ordering of octal permissions bits, you will see a difference between the actual value of the file's mode and the output of %m.   Normally you  will  want  to
                     have a leading zero on this number, and to do this, you should use the # flag (as in, for example, `%#m').

              %M     File's permissions (in symbolic form, as for ls).  This directive is supported in findutils 4.2.5 and later.

              %n     Number of hard links to file.

              %p     File's name.

              %P     File's name with the name of the starting-point under which it was found removed.

              %s     File's size in bytes.

              %S     File's sparseness.  This is calculated as (BLOCKSIZE*st_blocks / st_size).  The exact value you will get for an ordinary file of a certain length is system-dependent.
                     However, normally sparse files will have values less than 1.0, and files which use indirect blocks may have a value which is greater than 1.0.   The  value  used  for
                     BLOCKSIZE  is  system-dependent, but is usually 512 bytes.   If the file size is zero, the value printed is undefined.  On systems which lack support for st_blocks, a
                     file's sparseness is assumed to be 1.0.

              %t     File's last modification time in the format returned by the C `ctime' function.

              %Tk    File's last modification time in the format specified by k, which is the same as for %A.

              %u     File's user name, or numeric user ID if the user has no name.

              %U     File's numeric user ID.

              %y     File's type (like in ls -l), U=unknown type (shouldn't happen)

              %Y     File's type (like %y), plus follow symlinks: L=loop, N=nonexistent

              %Z     (SELinux only) file's security context.

              %{ %[ %(
                     Reserved for future use.

              A `%' character followed by any other character is discarded, but the other character is printed (don't rely on this, as further format characters may be introduced).  A `%'
              at  the  end  of  the  format argument causes undefined behaviour since there is no following character.  In some locales, it may hide your door keys, while in others it may
              remove the final page from the novel you are reading.

              The %m and %d directives support the # , 0 and + flags, but the other directives do not, even if they print numbers.  Numeric directives that  do  not  support  these  flags
              include G, U, b, D, k and n.  The `-' format flag is supported and changes the alignment of a field from right-justified (which is the default) to left-justified.

              See the UNUSUAL FILENAMES section for information about how unusual characters in filenames are handled.

       -prune True;  if the file is a directory, do not descend into it.  If -depth is given, false; no effect.  Because -delete implies -depth, you cannot usefully use -prune and -delete
              together.

       -quit  Exit immediately.  No child processes will be left running, but no more paths specified on the command line will be processed.  For example, find  /tmp/foo  /tmp/bar  -print
              -quit  will  print  only  /tmp/foo.  Any command lines which have been built up with -execdir ... {} + will be invoked before find exits.   The exit status may or may not be
              zero, depending on whether an error has already occurred.

   OPERATORS
       Listed in order of decreasing precedence:

       ( expr )
              Force precedence.  Since parentheses are special to the shell, you will normally need to quote them.  Many of the examples in this manual page use backslashes for this  pur‐
              pose: `\(...\)' instead of `(...)'.

       ! expr True if expr is false.  This character will also usually need protection from interpretation by the shell.

       -not expr
              Same as ! expr, but not POSIX compliant.

       expr1 expr2
              Two expressions in a row are taken to be joined with an implied "and"; expr2 is not evaluated if expr1 is false.

       expr1 -a expr2
              Same as expr1 expr2.

       expr1 -and expr2
              Same as expr1 expr2, but not POSIX compliant.

       expr1 -o expr2
              Or; expr2 is not evaluated if expr1 is true.

       expr1 -or expr2
              Same as expr1 -o expr2, but not POSIX compliant.

       expr1 , expr2
              List; both expr1 and expr2 are always evaluated.  The value of expr1 is discarded; the value of the list is the value of expr2.  The comma operator can be useful for search‐
              ing for several different types of thing, but traversing the filesystem hierarchy only once.  The -fprintf action can be used to list the various matched items into  several
              different output files.

UNUSUAL FILENAMES
       Many of the actions of find result in the printing of data which is under the control of other users.  This includes file names, sizes, modification times and so forth.  File names
       are a potential problem since they can contain any character except `\0' and `/'.  Unusual characters in file names can do unexpected and often undesirable things to your  terminal
       (for example, changing the settings of your function keys on some terminals).  Unusual characters are handled differently by various actions, as described below.

       -print0, -fprint0
              Always print the exact filename, unchanged, even if the output is going to a terminal.

       -ls, -fls
              Unusual characters are always escaped.  White space, backslash, and double quote characters are printed using C-style escaping (for example `\f', `\"').  Other unusual char‐
              acters are printed using an octal escape.  Other printable characters (for -ls and -fls these are the characters between octal 041 and 0176) are printed as-is.

       -printf, -fprintf
              If the output is not going to a terminal, it is printed as-is.  Otherwise, the result depends on which directive is in use.  The directives %D, %F, %g, %G, %H,  %Y,  and  %y
              expand  to  values  which are not under control of files' owners, and so are printed as-is.  The directives %a, %b, %c, %d, %i, %k, %m, %M, %n, %s, %t, %u and %U have values
              which are under the control of files' owners but which cannot be used to send arbitrary data to the terminal, and so these are printed as-is.  The directives %f, %h, %l,  %p
              and  %P  are  quoted.  This quoting is performed in the same way as for GNU ls.  This is not the same quoting mechanism as the one used for -ls and -fls.  If you are able to
              decide what format to use for the output of find then it is normally better to use `\0' as a terminator than to use newline, as file names can contain white space  and  new‐
              line characters.  The setting of the `LC_CTYPE' environment variable is used to determine which characters need to be quoted.

       -print, -fprint
              Quoting  is handled in the same way as for -printf and -fprintf.  If you are using find in a script or in a situation where the matched files might have arbitrary names, you
              should consider using -print0 instead of -print.

       The -ok and -okdir actions print the current filename as-is.  This may change in a future release.

STANDARDS CONFORMANCE
       For closest compliance to the POSIX standard, you should set the POSIXLY_CORRECT environment variable.  The following options are specified in the POSIX standard (IEEE Std  1003.1,
       2003 Edition):

       -H     This option is supported.

       -L     This option is supported.

       -name  This  option  is  supported, but POSIX conformance depends on the POSIX conformance of the system's fnmatch(3) library function.  As of findutils-4.2.2, shell metacharacters
              (`*', `?' or `[]' for example) will match a leading `.', because IEEE PASC interpretation 126 requires this.   This is a change from previous versions of findutils.

       -type  Supported.   POSIX specifies `b', `c', `d', `l', `p', `f' and `s'.  GNU find also supports `D', representing a Door, where the OS provides these.

       -ok    Supported.  Interpretation of the response is according to the "yes" and "no" patterns selected by setting the `LC_MESSAGES' environment variable.   When  the  `POSIXLY_COR‐
              RECT'  environment  variable is set, these patterns are taken system's definition of a positive (yes) or negative (no) response.  See the system's documentation for nl_lang‐
              info(3), in particular YESEXPR and NOEXPR.    When `POSIXLY_CORRECT' is not set, the patterns are instead taken from find's own message catalogue.

       -newer Supported.  If the file specified is a symbolic link, it is always dereferenced.  This is a change from previous behaviour, which used to take the  relevant  time  from  the
              symbolic link; see the HISTORY section below.

       -perm  Supported.   If  the POSIXLY_CORRECT environment variable is not set, some mode arguments (for example +a+x) which are not valid in POSIX are supported for backward-compati‐
              bility.

       Other predicates
              The predicates -atime, -ctime, -depth, -group, -links, -mtime, -nogroup, -nouser, -print, -prune, -size, -user and -xdev `-atime', `-ctime',  `-depth',  `-group',  `-links',
              `-mtime', `-nogroup', `-nouser', `-perm', `-print', `-prune', `-size', `-user' and `-xdev', are all supported.

       The POSIX standard specifies parentheses `(', `)', negation `!' and the `and' and `or' operators ( -a, -o).

       All other options, predicates, expressions and so forth are extensions beyond the POSIX standard.  Many of these extensions are not unique to GNU find, however.

       The POSIX standard requires that find detects loops:

              The find utility shall detect infinite loops; that is, entering a previously visited directory that is an ancestor of the last file encountered.  When it detects an infinite
              loop, find shall write a diagnostic message to standard error and shall either recover its position in the hierarchy or terminate.

       GNU find complies with these requirements.  The link count of directories which contain entries which are hard links to an ancestor will often be lower than they  otherwise  should
       be.   This  can  mean  that GNU find will sometimes optimise away the visiting of a subdirectory which is actually a link to an ancestor.  Since find does not actually enter such a
       subdirectory, it is allowed to avoid emitting a diagnostic message.  Although this behaviour may be somewhat confusing, it is unlikely that anybody actually depends on this  behav‐
       iour.   If  the  leaf  optimisation has been turned off with -noleaf, the directory entry will always be examined and the diagnostic message will be issued where it is appropriate.
       Symbolic links cannot be used to create filesystem cycles as such, but if the -L option or the -follow option is in use, a diagnostic message is issued when find encounters a  loop
       of  symbolic links.  As with loops containing hard links, the leaf optimisation will often mean that find knows that it doesn't need to call stat() or chdir() on the symbolic link,
       so this diagnostic is frequently not necessary.

       The -d option is supported for compatibility with various BSD systems, but you should use the POSIX-compliant option -depth instead.

       The POSIXLY_CORRECT environment variable does not affect the behaviour of the -regex or -iregex tests because those tests aren't specified in the POSIX standard.

ENVIRONMENT VARIABLES
       LANG   Provides a default value for the internationalization variables that are unset or null.

       LC_ALL If set to a non-empty string value, override the values of all the other internationalization variables.

       LC_COLLATE
              The POSIX standard specifies that this variable affects the pattern matching to be used for the -name option.   GNU find uses the fnmatch(3) library function, and so support
              for  `LC_COLLATE' depends on the system library.    This variable also affects the interpretation of the response to -ok; while the `LC_MESSAGES' variable selects the actual
              pattern used to interpret the response to -ok, the interpretation of any bracket expressions in the pattern will be affected by `LC_COLLATE'.

       LC_CTYPE
              This variable affects the treatment of character classes used in regular expressions and also with the -name test, if the system's fnmatch(3) library function supports this.
              This variable also affects the interpretation of any character classes in the regular expressions used to interpret the response to the prompt issued by -ok.  The `LC_CTYPE'
              environment variable will also affect which characters are considered to be unprintable when filenames are printed; see the section UNUSUAL FILENAMES.

       LC_MESSAGES
              Determines the locale to be used for internationalised messages.  If the `POSIXLY_CORRECT' environment variable is set,  this  also  determines  the  interpretation  of  the
              response to the prompt made by the -ok action.

       NLSPATH
              Determines the location of the internationalisation message catalogues.

       PATH   Affects the directories which are searched to find the executables invoked by -exec, -execdir, -ok and -okdir.

       POSIXLY_CORRECT
              Determines the block size used by -ls and -fls.  If POSIXLY_CORRECT is set, blocks are units of 512 bytes.  Otherwise they are units of 1024 bytes.

              Setting  this variable also turns off warning messages (that is, implies -nowarn) by default, because POSIX requires that apart from the output for -ok, all messages printed
              on stderr are diagnostics and must result in a non-zero exit status.

              When POSIXLY_CORRECT is not set, -perm +zzz is treated just like -perm /zzz if +zzz is not a valid symbolic mode.  When POSIXLY_CORRECT is set, such constructs  are  treated
              as an error.

              When  POSIXLY_CORRECT is set, the response to the prompt made by the -ok action is interpreted according to the system's message catalogue, as opposed to according to find's
              own message translations.

       TZ     Affects the time zone used for some of the time-related format directives of -printf and -fprintf.

EXAMPLES
       find /tmp -name core -type f -print | xargs /bin/rm -f

       Find files named core in or below the directory /tmp and delete them.  Note that this will work incorrectly if there are any filenames containing newlines, single or double quotes,
       or spaces.

       find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f

       Find  files named core in or below the directory /tmp and delete them, processing filenames in such a way that file or directory names containing single or double quotes, spaces or
       newlines are correctly handled.  The -name test comes before the -type test in order to avoid having to call stat(2) on every file.

       find . -type f -exec file '{}' \;

       Runs `file' on every file in or below the current directory.  Notice that the braces are enclosed in single quote marks to protect them from interpretation as shell script punctua‐
       tion.  The semicolon is similarly protected by the use of a backslash, though single quotes could have been used in that case also.

       find / \( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\n' \) , \
       \( -size +100M -fprintf /root/big.txt '%-10s %p\n' \)

       Traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt.

       find $HOME -mtime 0

       Search  for  files in your home directory which have been modified in the last twenty-four hours.  This command works this way because the time since each file was last modified is
       divided by 24 hours and any remainder is discarded.  That means that to match -mtime 0, a file will have to have a modification in the past which is less than 24 hours ago.

       find /sbin /usr/sbin -executable \! -readable -print

       Search for files which are executable but not readable.

       find . -perm 664

       Search for files which have read and write permission for their owner, and group, but which other users can read but not write to.  Files which meet these criteria but  have  other
       permissions bits set (for example if someone can execute the file) will not be matched.

       find . -perm -664

       Search  for  files  which have read and write permission for their owner and group, and which other users can read, without regard to the presence of any extra permission bits (for
       example the executable bit).  This will match a file which has mode 0777, for example.

       find . -perm /222

       Search for files which are writable by somebody (their owner, or their group, or anybody else).

       find . -perm /220
       find . -perm /u+w,g+w
       find . -perm /u=w,g=w

       All three of these commands do the same thing, but the first one uses the octal representation of the file mode, and the other two use the symbolic form.  These commands all search
       for files which are writable by either their owner or their group.  The files don't have to be writable by both the owner and group to be matched; either will do.

       find . -perm -220
       find . -perm -g+w,u+w

       Both these commands do the same thing; search for files which are writable by both their owner and their group.

       find . -perm -444 -perm /222 ! -perm /111
       find . -perm -a+r -perm /a+w ! -perm /a+x

       These  two  commands both search for files that are readable for everybody ( -perm -444 or -perm -a+r), have at least one write bit set ( -perm /222 or -perm /a+w) but are not exe‐
       cutable for anybody ( ! -perm /111 and ! -perm /a+x respectively).

       cd /source-dir
       find . -name .snapshot -prune -o \( \! -name *~ -print0 \)|
       cpio -pmd0 /dest-dir

       This command copies the contents of /source-dir to /dest-dir, but omits files and directories named .snapshot (and anything in them).  It also omits files or directories whose name
       ends  in  ~,  but not their contents.  The construct -prune -o \( ... -print0 \) is quite common.  The idea here is that the expression before -prune matches things which are to be
       pruned.  However, the -prune action itself returns true, so the following -o ensures that the right hand side is evaluated only for those directories which didn't get  pruned  (the
       contents of the pruned directories are not even visited, so their contents are irrelevant).  The expression on the right hand side of the -o is in parentheses only for clarity.  It
       emphasises that the -print0 action takes place only for things that didn't have -prune applied to them.  Because the default `and' condition between tests binds more  tightly  than
       -o, this is the default anyway, but the parentheses help to show what is going on.

       find repo/ -exec test -d {}/.svn \; -or \
       -exec test -d {}/.git \; -or -exec test -d {}/CVS \; \
       -print -prune

       Given the following directory of projects and their associated SCM administrative directories, perform an efficient search for the projects' roots:

       repo/project1/CVS
       repo/gnu/project2/.svn
       repo/gnu/project3/.svn
       repo/gnu/project3/src/.svn
       repo/project4/.git

       In  this  example,  -prune  prevents  unnecessary  descent  into  directories  that have already been discovered (for example we do not search project3/src because we already found
       project3/.svn), but ensures sibling directories (project2 and project3) are found.

EXIT STATUS
       find exits with status 0 if all files are processed successfully, greater than 0 if errors occur.   This is deliberately a very broad description, but if the return value  is  non-
       zero, you should not rely on the correctness of the results of find.

       When  some error occurs, find may stop immediately, without completing all the actions specified.  For example, some starting points may not have been examined or some pending pro‐
       gram invocations for -exec ... {} + or -execdir ... {} + may not have been performed.

SEE ALSO
       locate(1), locatedb(5), updatedb(1), xargs(1), chmod(1), fnmatch(3), regex(7), stat(2), lstat(2), ls(1), printf(3), strftime(3), ctime(3)

       The full documentation for find is maintained as a Texinfo manual.  If the info and find programs are properly installed at your site, the command info find should give you  access
       to the complete manual.

HISTORY
       As of findutils-4.2.2, shell metacharacters (`*', `?' or `[]' for example) used in filename patterns will match a leading `.', because IEEE POSIX interpretation 126 requires this.

       As of findutils-4.3.3, -perm /000 now matches all files instead of none.

       Nanosecond-resolution timestamps were implemented in findutils-4.3.3.

       As  of  findutils-4.3.11, the -delete action sets find's exit status to a nonzero value when it fails.  However, find will not exit immediately.  Previously, find's exit status was
       unaffected by the failure of -delete.

       Feature                Added in   Also occurs in
       -newerXY               4.3.3      BSD
       -D                     4.3.1
       -O                     4.3.1
       -readable              4.3.0
       -writable              4.3.0
       -executable            4.3.0
       -regextype             4.2.24
       -exec ... +            4.2.12     POSIX
       -execdir               4.2.12     BSD
       -okdir                 4.2.12
       -samefile              4.2.11
       -H                     4.2.5      POSIX
       -L                     4.2.5      POSIX
       -P                     4.2.5      BSD
       -delete                4.2.3
       -quit                  4.2.3
       -d                     4.2.3      BSD
       -wholename             4.2.0
       -iwholename            4.2.0
       -ignore_readdir_race   4.2.0
       -fls                   4.0
       -ilname                3.8
       -iname                 3.8
       -ipath                 3.8
       -iregex                3.8

       The syntax -perm +MODE was removed in findutils-4.5.12, in favour of -perm /MODE.  The +MODE syntax had been deprecated since findutils-4.2.21 which was released in 2005.

NON-BUGS
       $ find . -name *.c -print
       find: paths must precede expression
       Usage: find [-H] [-L] [-P] [-Olevel] [-D help|tree|search|stat|rates|opt|exec] [path...] [expression]

       This happens because *.c has been expanded by the shell resulting in find actually receiving a command line like this:

       find . -name bigram.c code.c frcode.c locate.c -print

       That command is of course not going to work.  Instead of doing things this way, you should enclose the pattern in quotes or escape the wildcard:
       $ find . -name '*.c' -print
       $ find . -name \*.c -print

BUGS
       There are security problems inherent in the behaviour that the POSIX standard specifies for find, which therefore cannot be fixed.  For example,  the  -exec  action  is  inherently
       insecure, and -execdir should be used instead.  Please see Finding Files for more information.

       The environment variable LC_COLLATE has no effect on the -ok action.

       The best way to report a bug is to use the form at http://savannah.gnu.org/bugs/?group=findutils.  The reason for this is that you will then be able to track progress in fixing the
       problem.   Other comments about find(1) and about the findutils package in general can be sent to the bug-findutils mailing list.  To  join  the  list,  send  email  to  bug-findu‐
       tils-request@gnu.org.

                                                                                                                                                                                    FIND(1)
****************************************************find ends here****************************************************


****************************************************tee starts here****************************************************
TEE(1)                                                                                 User Commands                                                                                 TEE(1)

NAME
       tee - read from standard input and write to standard output and files

SYNOPSIS
       tee [OPTION]... [FILE]...

DESCRIPTION
       Copy standard input to each FILE, and also to standard output.

       -a, --append
              append to the given FILEs, do not overwrite

       -i, --ignore-interrupts
              ignore interrupt signals

       -p     diagnose errors writing to non pipes

       --output-error[=MODE]
              set behavior on write error.  See MODE below

       --help display this help and exit

       --version
              output version information and exit

   MODE determines behavior with write errors on the outputs:
       'warn' diagnose errors writing to any output

       'warn-nopipe'
              diagnose errors writing to any output not a pipe

       'exit' exit on error writing to any output

       'exit-nopipe'
              exit on error writing to any output not a pipe

       The  default  MODE  for the -p option is 'warn-nopipe'.  The default operation when --output-error is not specified, is to exit immediately on error writing to a pipe, and diagnose
       errors writing to non pipe outputs.

AUTHOR
       Written by Mike Parker, Richard M. Stallman, and David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report tee translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/tee>
       or available locally via: info '(coreutils) tee invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                 TEE(1)
****************************************************tee ends here****************************************************


****************************************************pwd starts here****************************************************
PWD(1)                                                                                 User Commands                                                                                 PWD(1)

NAME
       pwd - print name of current/working directory

SYNOPSIS
       pwd [OPTION]...

DESCRIPTION
       Print the full filename of the current working directory.

       -L, --logical
              use PWD from environment, even if it contains symlinks

       -P, --physical
              avoid all symlinks

       --help display this help and exit

       --version
              output version information and exit

       If no option is specified, -P is assumed.

       NOTE:  your shell may have its own version of pwd, which usually supersedes the version described here.  Please refer to your shell's documentation for details about the options it
       supports.

AUTHOR
       Written by Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report pwd translation bugs to <http://translationproject.org/team/>

SEE ALSO
       getcwd(3)

       Full documentation at: <http://www.gnu.org/software/coreutils/pwd>
       or available locally via: info '(coreutils) pwd invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                 PWD(1)
****************************************************pwd ends here****************************************************


****************************************************tail starts here****************************************************
TAIL(1)                                                                                User Commands                                                                                TAIL(1)

NAME
       tail - output the last part of files

SYNOPSIS
       tail [OPTION]... [FILE]...

DESCRIPTION
       Print the last 10 lines of each FILE to standard output.  With more than one FILE, precede each with a header giving the file name.

       With no FILE, or when FILE is -, read standard input.

       Mandatory arguments to long options are mandatory for short options too.

       -c, --bytes=[+]NUM
              output the last NUM bytes; or use -c +NUM to output starting with byte NUM of each file

       -f, --follow[={name|descriptor}]
              output appended data as the file grows;

              an absent option argument means 'descriptor'

       -F     same as --follow=name --retry

       -n, --lines=[+]NUM
              output the last NUM lines, instead of the last 10; or use -n +NUM to output starting with line NUM

       --max-unchanged-stats=N
              with --follow=name, reopen a FILE which has not

              changed size after N (default 5) iterations to see if it has been unlinked or renamed (this is the usual case of rotated log files); with inotify, this option is rarely use‐
              ful

       --pid=PID
              with -f, terminate after process ID, PID dies

       -q, --quiet, --silent
              never output headers giving file names

       --retry
              keep trying to open a file if it is inaccessible

       -s, --sleep-interval=N
              with -f, sleep for approximately N seconds (default 1.0) between iterations; with inotify and --pid=P, check process P at least once every N seconds

       -v, --verbose
              always output headers giving file names

       -z, --zero-terminated
              line delimiter is NUL, not newline

       --help display this help and exit

       --version
              output version information and exit

       NUM may have a multiplier suffix: b 512, kB 1000, K 1024, MB 1000*1000, M 1024*1024, GB 1000*1000*1000, G 1024*1024*1024, and so on for T, P, E, Z, Y.

       With --follow (-f), tail defaults to following the file descriptor, which means that even if a tail'ed file is renamed, tail will continue to track its end.  This default  behavior
       is  not  desirable  when  you  really want to track the actual name of the file, not the file descriptor (e.g., log rotation).  Use --follow=name in that case.  That causes tail to
       track the named file in a way that accommodates renaming, removal and creation.

AUTHOR
       Written by Paul Rubin, David MacKenzie, Ian Lance Taylor, and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report tail translation bugs to <http://translationproject.org/team/>

SEE ALSO
       head(1)

       Full documentation at: <http://www.gnu.org/software/coreutils/tail>
       or available locally via: info '(coreutils) tail invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                TAIL(1)
****************************************************tail ends here****************************************************


****************************************************getopt starts here****************************************************
GETOPT(1)                                                                              User Commands                                                                              GETOPT(1)

NAME
       getopt - parse command options (enhanced)

SYNOPSIS
       getopt optstring parameters
       getopt [options] [--] optstring parameters
       getopt [options] -o|--options optstring [options] [--] parameters

DESCRIPTION
       getopt is used to break up (parse) options in command lines for easy parsing by shell procedures, and to check for legal options.  It uses the GNU getopt(3) routines to do this.

       The parameters getopt is called with can be divided into two parts: options which modify the way getopt will do the parsing (the options and the optstring in the SYNOPSIS), and the
       parameters which are to be parsed (parameters in the SYNOPSIS).  The second part will start at the first non-option parameter that is not an option argument,  or  after  the  first
       occurrence of '--'.  If no '-o' or '--options' option is found in the first part, the first parameter of the second part is used as the short options string.

       If the environment variable GETOPT_COMPATIBLE is set, or if the first parameter is not an option (does not start with a '-', the first format in the SYNOPSIS), getopt will generate
       output that is compatible with that of other versions of getopt(1).  It will still do parameter shuffling and recognize optional  arguments  (see  section  COMPATIBILITY  for  more
       information).

       Traditional  implementations  of  getopt(1)  are unable to cope with whitespace and other (shell-specific) special characters in arguments and non-option parameters.  To solve this
       problem, this implementation can generate quoted output which must once again be interpreted by the shell (usually by using the eval command).  This has the  effect  of  preserving
       those  characters,  but  you  must  call  getopt  in a way that is no longer compatible with other versions (the second or third format in the SYNOPSIS).  To determine whether this
       enhanced version of getopt(1) is installed, a special test option (-T) can be used.

OPTIONS
       -a, --alternative
              Allow long options to start with a single '-'.

       -h, --help
              Display help text and exit.  No other output is generated.

       -l, --longoptions longopts
              The long (multi-character) options to be recognized.  More than one option name may be specified at once, by separating the names with commas.  This option may be given more
              than once, the longopts are cumulative.  Each long option name in longopts may be followed by one colon to indicate it has a required argument, and by two colons to indicate
              it has an optional argument.

       -n, --name progname
              The name that will be used by the getopt(3) routines when it reports errors.  Note that errors of getopt(1) are still reported as coming from getopt.

       -o, --options shortopts
              The short (one-character) options to be recognized.  If this option is not found, the first parameter of getopt that does not start with a '-' (and is not  an  option  argu‐
              ment)  is  used as the short options string.  Each short option character in shortopts may be followed by one colon to indicate it has a required argument, and by two colons
              to indicate it has an optional argument.  The first character of shortopts may be '+' or '-' to influence the way options are parsed and output  is  generated  (see  section
              SCANNING MODES for details).

       -q, --quiet
              Disable error reporting by getopt(3).

       -Q, --quiet-output
              Do not generate normal output.  Errors are still reported by getopt(3), unless you also use -q.

       -s, --shell shell
              Set quoting conventions to those of shell.  If the -s option is not given, the BASH conventions are used.  Valid arguments are currently 'sh' 'bash', 'csh', and 'tcsh'.

       -u, --unquoted
              Do not quote the output.  Note that whitespace and special (shell-dependent) characters can cause havoc in this mode (like they do with other getopt(1) implementations).

       -T, --test
              Test  if  your getopt(1) is this enhanced version or an old version.  This generates no output, and sets the error status to 4.  Other implementations of getopt(1), and this
              version if the environment variable GETOPT_COMPATIBLE is set, will return '--' and error status 0.

       -V, --version
              Display version information and exit.  No other output is generated.

PARSING
       This section specifies the format of the second part of the parameters of getopt (the parameters in the SYNOPSIS).  The next section (OUTPUT) describes the output  that  is  gener‐
       ated.   These  parameters  were typically the parameters a shell function was called with.  Care must be taken that each parameter the shell function was called with corresponds to
       exactly one parameter in the parameter list of getopt (see the EXAMPLES).  All parsing is done by the GNU getopt(3) routines.

       The parameters are parsed from left to right.  Each parameter is classified as a short option, a long option, an argument to an option, or a non-option parameter.

       A simple short option is a '-' followed by a short option character.  If the option has a required argument, it may be written directly after the option character or  as  the  next
       parameter (i.e. separated by whitespace on the command line).  If the option has an optional argument, it must be written directly after the option character if present.

       It is possible to specify several short options after one '-', as long as all (except possibly the last) do not have required or optional arguments.

       A  long  option normally begins with '--' followed by the long option name.  If the option has a required argument, it may be written directly after the long option name, separated
       by '=', or as the next argument (i.e. separated by whitespace on the command line).  If the option has an optional argument, it must be written directly after the long option name,
       separated  by  '=', if present (if you add the '=' but nothing behind it, it is interpreted as if no argument was present; this is a slight bug, see the BUGS).  Long options may be
       abbreviated, as long as the abbreviation is not ambiguous.

       Each parameter not starting with a '-', and not a required argument of a previous option, is a non-option parameter.  Each parameter after a '--' parameter is always interpreted as
       a  non-option  parameter.   If  the  environment  variable  POSIXLY_CORRECT  is  set,  or if the short option string started with a '+', all remaining parameters are interpreted as
       non-option parameters as soon as the first non-option parameter is found.

OUTPUT
       Output is generated for each element described in the previous section.  Output is done in the same order as the elements are specified in the input, except for non-option  parame‐
       ters.   Output  can be done in compatible (unquoted) mode, or in such way that whitespace and other special characters within arguments and non-option parameters are preserved (see
       QUOTING).  When the output is processed in the shell script, it will seem to be composed of distinct elements that can be processed one by one (by using the shift command  in  most
       shell languages).  This is imperfect in unquoted mode, as elements can be split at unexpected places if they contain whitespace or special characters.

       If  there  are problems parsing the parameters, for example because a required argument is not found or an option is not recognized, an error will be reported on stderr, there will
       be no output for the offending element, and a non-zero error status is returned.

       For a short option, a single '-' and the option character are generated as one parameter.  If the option has an argument, the next parameter will be the argument.   If  the  option
       takes  an  optional argument, but none was found, the next parameter will be generated but be empty in quoting mode, but no second parameter will be generated in unquoted (compati‐
       ble) mode.  Note that many other getopt(1) implementations do not support optional arguments.

       If several short options were specified after a single '-', each will be present in the output as a separate parameter.

       For a long option, '--' and the full option name are generated as one parameter.  This is done regardless whether the option was abbreviated or specified with a single '-'  in  the
       input.  Arguments are handled as with short options.

       Normally,  no  non-option  parameters output is generated until all options and their arguments have been generated.  Then '--' is generated as a single parameter, and after it the
       non-option parameters in the order they were found, each as a separate parameter.  Only if the first character of the short options string was a '-', non-option parameter output is
       generated  at  the  place  they are found in the input (this is not supported if the first format of the SYNOPSIS is used; in that case all preceding occurrences of '-' and '+' are
       ignored).

QUOTING
       In compatible mode, whitespace or 'special' characters in arguments or non-option parameters are not handled correctly.  As the output is fed to the shell script, the  script  does
       not  know  how  it  is supposed to break the output into separate parameters.  To circumvent this problem, this implementation offers quoting.  The idea is that output is generated
       with quotes around each parameter.  When this output is once again fed to the shell (usually by a shell eval command), it is split correctly into separate parameters.

       Quoting is not enabled if the environment variable GETOPT_COMPATIBLE is set, if the first form of the SYNOPSIS is used, or if the option '-u' is found.

       Different shells use different quoting conventions.  You can use the '-s' option to select the shell you are using.  The following shells are  currently  supported:  'sh',  'bash',
       'csh'  and  'tcsh'.  Actually, only two 'flavors' are distinguished: sh-like quoting conventions and csh-like quoting conventions.  Chances are that if you use another shell script
       language, one of these flavors can still be used.

SCANNING MODES
       The first character of the short options string may be a '-' or a '+' to indicate a special scanning mode.  If the first calling form in the SYNOPSIS is used they are ignored;  the
       environment variable POSIXLY_CORRECT is still examined, though.

       If  the first character is '+', or if the environment variable POSIXLY_CORRECT is set, parsing stops as soon as the first non-option parameter (i.e. a parameter that does not start
       with a '-') is found that is not an option argument.  The remaining parameters are all interpreted as non-option parameters.

       If the first character is a '-', non-option parameters are outputted at the place where they are found; in normal operation, they are all collected at the end  of  output  after  a
       '--' parameter has been generated.  Note that this '--' parameter is still generated, but it will always be the last parameter in this mode.

COMPATIBILITY
       This  version  of  getopt(1)  is written to be as compatible as possible to other versions.  Usually you can just replace them with this version without any modifications, and with
       some advantages.

       If the first character of the first parameter of getopt is not a '-', getopt goes into compatibility mode.  It will interpret its first parameter as the string  of  short  options,
       and  all  other arguments will be parsed.  It will still do parameter shuffling (i.e. all non-option parameters are output at the end), unless the environment variable POSIXLY_COR‐
       RECT is set.

       The environment variable GETOPT_COMPATIBLE forces getopt into compatibility mode.  Setting both this environment variable and POSIXLY_CORRECT offers 100% compatibility for  'diffi‐
       cult' programs.  Usually, though, neither is needed.

       In compatibility mode, leading '-' and '+' characters in the short options string are ignored.

RETURN CODES
       getopt returns error code 0 for successful parsing, 1 if getopt(3) returns errors, 2 if it does not understand its own parameters, 3 if an internal error occurs like out-of-memory,
       and 4 if it is called with -T.

EXAMPLES
       Example scripts for (ba)sh and (t)csh are provided with the getopt(1) distribution, and are optionally installed in /usr/share/getopt/ or /usr/share/doc/ in the  util-linux  subdi‐
       rectory.

ENVIRONMENT
       POSIXLY_CORRECT
              This  environment  variable  is examined by the getopt(3) routines.  If it is set, parsing stops as soon as a parameter is found that is not an option or an option argument.
              All remaining parameters are also interpreted as non-option parameters, regardless whether they start with a '-'.

       GETOPT_COMPATIBLE
              Forces getopt to use the first calling format as specified in the SYNOPSIS.

BUGS
       getopt(3) can parse long options with optional arguments that are given an empty optional argument (but can not do this for short options).  This getopt(1)  treats  optional  argu‐
       ments that are empty as if they were not present.

       The syntax if you do not want any short option variables at all is not very intuitive (you have to set them explicitly to the empty string).

AUTHOR
       Frodo Looijaard ⟨frodo@frodo.looijaard.name⟩

SEE ALSO
       getopt(3), bash(1), tcsh(1).

AVAILABILITY
       The getopt command is part of the util-linux package and is available from Linux Kernel Archive ⟨ftp://ftp.kernel.org/pub/linux/utils/util-linux/⟩.

util-linux                                                                               June 2012                                                                                GETOPT(1)
****************************************************getopt ends here****************************************************


****************************************************basename starts here****************************************************
BASENAME(1)                                                                            User Commands                                                                            BASENAME(1)

NAME
       basename - strip directory and suffix from filenames

SYNOPSIS
       basename NAME [SUFFIX]
       basename OPTION... NAME...

DESCRIPTION
       Print NAME with any leading directory components removed.  If specified, also remove a trailing SUFFIX.

       Mandatory arguments to long options are mandatory for short options too.

       -a, --multiple
              support multiple arguments and treat each as a NAME

       -s, --suffix=SUFFIX
              remove a trailing SUFFIX; implies -a

       -z, --zero
              end each output line with NUL, not newline

       --help display this help and exit

       --version
              output version information and exit

EXAMPLES
       basename /usr/bin/sort
              -> "sort"

       basename include/stdio.h .h
              -> "stdio"

       basename -s .h include/stdio.h
              -> "stdio"

       basename -a any/str1 any/str2
              -> "str1" followed by "str2"

AUTHOR
       Written by David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report basename translation bugs to <http://translationproject.org/team/>

SEE ALSO
       dirname(1), readlink(1)

       Full documentation at: <http://www.gnu.org/software/coreutils/basename>
       or available locally via: info '(coreutils) basename invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                            BASENAME(1)
****************************************************basename ends here****************************************************


****************************************************uname starts here****************************************************
UNAME(1)                                                                               User Commands                                                                               UNAME(1)

NAME
       uname - print system information

SYNOPSIS
       uname [OPTION]...

DESCRIPTION
       Print certain system information.  With no OPTION, same as -s.

       -a, --all
              print all information, in the following order, except omit -p and -i if unknown:

       -s, --kernel-name
              print the kernel name

       -n, --nodename
              print the network node hostname

       -r, --kernel-release
              print the kernel release

       -v, --kernel-version
              print the kernel version

       -m, --machine
              print the machine hardware name

       -p, --processor
              print the processor type (non-portable)

       -i, --hardware-platform
              print the hardware platform (non-portable)

       -o, --operating-system
              print the operating system

       --help display this help and exit

       --version
              output version information and exit

AUTHOR
       Written by David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report uname translation bugs to <http://translationproject.org/team/>

SEE ALSO
       arch(1), uname(2)

       Full documentation at: <http://www.gnu.org/software/coreutils/uname>
       or available locally via: info '(coreutils) uname invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                               UNAME(1)
****************************************************uname ends here****************************************************


****************************************************sort starts here****************************************************
SORT(1)                                                                                User Commands                                                                                SORT(1)

NAME
       sort - sort lines of text files

SYNOPSIS
       sort [OPTION]... [FILE]...
       sort [OPTION]... --files0-from=F

DESCRIPTION
       Write sorted concatenation of all FILE(s) to standard output.

       With no FILE, or when FILE is -, read standard input.

       Mandatory arguments to long options are mandatory for short options too.  Ordering options:

       -b, --ignore-leading-blanks
              ignore leading blanks

       -d, --dictionary-order
              consider only blanks and alphanumeric characters

       -f, --ignore-case
              fold lower case to upper case characters

       -g, --general-numeric-sort
              compare according to general numerical value

       -i, --ignore-nonprinting
              consider only printable characters

       -M, --month-sort
              compare (unknown) < 'JAN' < ... < 'DEC'

       -h, --human-numeric-sort
              compare human readable numbers (e.g., 2K 1G)

       -n, --numeric-sort
              compare according to string numerical value

       -R, --random-sort
              shuffle, but group identical keys.  See shuf(1)

       --random-source=FILE
              get random bytes from FILE

       -r, --reverse
              reverse the result of comparisons

       --sort=WORD
              sort according to WORD: general-numeric -g, human-numeric -h, month -M, numeric -n, random -R, version -V

       -V, --version-sort
              natural sort of (version) numbers within text

       Other options:

       --batch-size=NMERGE
              merge at most NMERGE inputs at once; for more use temp files

       -c, --check, --check=diagnose-first
              check for sorted input; do not sort

       -C, --check=quiet, --check=silent
              like -c, but do not report first bad line

       --compress-program=PROG
              compress temporaries with PROG; decompress them with PROG -d

       --debug
              annotate the part of the line used to sort, and warn about questionable usage to stderr

       --files0-from=F
              read input from the files specified by NUL-terminated names in file F; If F is - then read names from standard input

       -k, --key=KEYDEF
              sort via a key; KEYDEF gives location and type

       -m, --merge
              merge already sorted files; do not sort

       -o, --output=FILE
              write result to FILE instead of standard output

       -s, --stable
              stabilize sort by disabling last-resort comparison

       -S, --buffer-size=SIZE
              use SIZE for main memory buffer

       -t, --field-separator=SEP
              use SEP instead of non-blank to blank transition

       -T, --temporary-directory=DIR
              use DIR for temporaries, not $TMPDIR or /tmp; multiple options specify multiple directories

       --parallel=N
              change the number of sorts run concurrently to N

       -u, --unique
              with -c, check for strict ordering; without -c, output only the first of an equal run

       -z, --zero-terminated
              line delimiter is NUL, not newline

       --help display this help and exit

       --version
              output version information and exit

       KEYDEF  is  F[.C][OPTS][,F[.C][OPTS]]  for  start  and  stop  position,  where F is a field number and C a character position in the field; both are origin 1, and the stop position
       defaults to the line's end.  If neither -t nor -b is in effect, characters in a field are counted from the beginning of the preceding whitespace.  OPTS is one or more single-letter
       ordering  options  [bdfgiMhnRrV],  which  override global ordering options for that key.  If no key is given, use the entire line as the key.  Use --debug to diagnose incorrect key
       usage.

       SIZE may be followed by the following multiplicative suffixes: % 1% of memory, b 1, K 1024 (default), and so on for M, G, T, P, E, Z, Y.

       *** WARNING *** The locale specified by the environment affects sort order.  Set LC_ALL=C to get the traditional sort order that uses native byte values.

AUTHOR
       Written by Mike Haertel and Paul Eggert.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report sort translation bugs to <http://translationproject.org/team/>

SEE ALSO
       shuf(1), uniq(1)

       Full documentation at: <http://www.gnu.org/software/coreutils/sort>
       or available locally via: info '(coreutils) sort invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                SORT(1)
****************************************************sort ends here****************************************************


****************************************************wc starts here****************************************************
WC(1)                                                                                  User Commands                                                                                  WC(1)

NAME
       wc - print newline, word, and byte counts for each file

SYNOPSIS
       wc [OPTION]... [FILE]...
       wc [OPTION]... --files0-from=F

DESCRIPTION
       Print  newline,  word,  and  byte  counts for each FILE, and a total line if more than one FILE is specified.  A word is a non-zero-length sequence of characters delimited by white
       space.

       With no FILE, or when FILE is -, read standard input.

       The options below may be used to select which counts are printed, always in the following order: newline, word, character, byte, maximum line length.

       -c, --bytes
              print the byte counts

       -m, --chars
              print the character counts

       -l, --lines
              print the newline counts

       --files0-from=F
              read input from the files specified by NUL-terminated names in file F; If F is - then read names from standard input

       -L, --max-line-length
              print the maximum display width

       -w, --words
              print the word counts

       --help display this help and exit

       --version
              output version information and exit

AUTHOR
       Written by Paul Rubin and David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report wc translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/wc>
       or available locally via: info '(coreutils) wc invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                  WC(1)
****************************************************wc ends here****************************************************


****************************************************cat starts here****************************************************
CAT(1)                                                                                 User Commands                                                                                 CAT(1)

NAME
       cat - concatenate files and print on the standard output

SYNOPSIS
       cat [OPTION]... [FILE]...

DESCRIPTION
       Concatenate FILE(s) to standard output.

       With no FILE, or when FILE is -, read standard input.

       -A, --show-all
              equivalent to -vET

       -b, --number-nonblank
              number nonempty output lines, overrides -n

       -e     equivalent to -vE

       -E, --show-ends
              display $ at end of each line

       -n, --number
              number all output lines

       -s, --squeeze-blank
              suppress repeated empty output lines

       -t     equivalent to -vT

       -T, --show-tabs
              display TAB characters as ^I

       -u     (ignored)

       -v, --show-nonprinting
              use ^ and M- notation, except for LFD and TAB

       --help display this help and exit

       --version
              output version information and exit

EXAMPLES
       cat f - g
              Output f's contents, then standard input, then g's contents.

       cat    Copy standard input to standard output.

AUTHOR
       Written by Torbjorn Granlund and Richard M. Stallman.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report cat translation bugs to <http://translationproject.org/team/>

SEE ALSO
       tac(1)

       Full documentation at: <http://www.gnu.org/software/coreutils/cat>
       or available locally via: info '(coreutils) cat invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                 CAT(1)
****************************************************cat ends here****************************************************


****************************************************man starts here****************************************************
MAN(1)                                                                               Manual pager utils                                                                              MAN(1)

NAME
       man - an interface to the on-line reference manuals

SYNOPSIS
       man [-C file] [-d] [-D] [--warnings[=warnings]] [-R encoding] [-L locale] [-m system[,...]] [-M path] [-S list] [-e extension] [-i|-I] [--regex|--wildcard] [--names-only] [-a] [-u]
       [--no-subpages] [-P pager] [-r prompt]  [-7]  [-E  encoding]  [--no-hyphenation]  [--no-justification]  [-p  string]  [-t]  [-T[device]]  [-H[browser]]  [-X[dpi]]  [-Z]  [[section]
       page ...] ...
       man -k [apropos options] regexp ...
       man -K [-w|-W] [-S list] [-i|-I] [--regex] [section] term ...
       man -f [whatis options] page ...
       man  -l  [-C  file] [-d] [-D] [--warnings[=warnings]] [-R encoding] [-L locale] [-P pager] [-r prompt] [-7] [-E encoding] [-p string] [-t] [-T[device]] [-H[browser]] [-X[dpi]] [-Z]
       file ...
       man -w|-W [-C file] [-d] [-D] page ...
       man -c [-C file] [-d] [-D] page ...
       man [-?V]

DESCRIPTION
       man is the system's manual pager.  Each page argument given to man is normally the name of a program, utility or function.  The manual page associated with each of these  arguments
       is  then found and displayed.  A section, if provided, will direct man to look only in that section of the manual.  The default action is to search in all of the available sections
       following a pre-defined order ("1 1p 8 2 3 3p 4 5 6 7 9 0p n" by default, unless overridden by the SECTION directive in /etc/man_db.conf), and to show only the  first  page  found,
       even if page exists in several sections.

       The table below shows the section numbers of the manual followed by the types of pages they contain.

       1   Executable programs or shell commands
       2   System calls (functions provided by the kernel)
       3   Library calls (functions within program libraries)
       4   Special files (usually found in /dev)
       5   File formats and conventions eg /etc/passwd
       6   Games
       7   Miscellaneous (including macro packages and conventions), e.g. man(7), groff(7)
       8   System administration commands (usually only for root)
       9   Kernel routines [Non standard]

       A manual page consists of several sections.

       Conventional section names include NAME, SYNOPSIS, CONFIGURATION, DESCRIPTION, OPTIONS, EXIT STATUS, RETURN VALUE, ERRORS, ENVIRONMENT, FILES, VERSIONS, CONFORMING TO, NOTES, BUGS,
       EXAMPLE, AUTHORS, and SEE ALSO.

       The following conventions apply to the SYNOPSIS section and can be used as a guide in other sections.

       bold text          type exactly as shown.
       italic text        replace with appropriate argument.
       [-abc]             any or all arguments within [ ] are optional.
       -a|-b              options delimited by | cannot be used together.
       argument ...       argument is repeatable.
       [expression] ...   entire expression within [ ] is repeatable.

       Exact rendering may vary depending on the output device.  For instance, man will usually not be able to render italics when running in a terminal, and will typically use underlined
       or coloured text instead.

       The command or function illustration is a pattern that should match all possible invocations.  In some cases it is advisable to illustrate several exclusive invocations as is shown
       in the SYNOPSIS section of this manual page.

EXAMPLES
       man ls
           Display the manual page for the item (program) ls.

       man -a intro
           Display, in succession, all of the available intro manual pages contained within the manual.  It is possible to quit between successive displays or skip any of them.

       man -t alias | lpr -Pps
           Format the manual page referenced by `alias', usually a shell manual page, into the default troff or groff format and pipe it to the printer named ps.  The default  output  for
           groff is usually PostScript.  man --help should advise as to which processor is bound to the -t option.

       man -l -Tdvi ./foo.1x.gz > ./foo.1x.dvi
           This  command will decompress and format the nroff source manual page ./foo.1x.gz into a device independent (dvi) file.  The redirection is necessary as the -T flag causes out‐
           put to be directed to stdout with no pager.  The output could be viewed with a program such as xdvi or further processed into PostScript using a program such as dvips.

       man -k printf
           Search the short descriptions and manual page names for the keyword printf as regular expression.  Print out any matches.  Equivalent to apropos printf.

       man -f smail
           Lookup the manual pages referenced by smail and print out the short descriptions of any found.  Equivalent to whatis smail.

OVERVIEW
       Many options are available to man in order to give as much flexibility as possible to the user.  Changes can be made to the search path, section order, output processor, and  other
       behaviours and operations detailed below.

       If set, various environment variables are interrogated to determine the operation of man.  It is possible to set the `catch all' variable $MANOPT to any string in command line for‐
       mat with the exception that any spaces used as part of an option's argument must be escaped (preceded by a backslash).  man will parse $MANOPT prior  to  parsing  its  own  command
       line.  Those options requiring an argument will be overridden by the same options found on the command line.  To reset all of the options set in $MANOPT, -D can be specified as the
       initial command line option.  This will allow man to `forget' about the options specified in $MANOPT although they must still have been valid.

       The manual pager utilities packaged as man-db make extensive use of index database caches.  These caches contain information such as where each manual page  can  be  found  on  the
       filesystem  and  what  its  whatis  (short one line description of the man page) contains, and allow man to run faster than if it had to search the filesystem each time to find the
       appropriate manual page.  If requested using the -u option, man will ensure that the caches remain consistent, which can obviate the need to manually run software to update  tradi‐
       tional whatis text databases.

       If man cannot find a mandb initiated index database for a particular manual page hierarchy, it will still search for the requested manual pages, although file globbing will be nec‐
       essary to search within that hierarchy.  If whatis or apropos fails to find an index it will try to extract information from a traditional whatis database instead.

       These utilities support compressed source nroff files having, by default, the extensions of .Z, .z and .gz.  It is possible to deal with any compression extension, but this  infor‐
       mation  must  be  known  at  compile  time.   Also,  by  default,  any  cat pages produced are compressed using gzip.  Each `global' manual page hierarchy such as /usr/share/man or
       /usr/X11R6/man may have any directory as its cat page hierarchy.  Traditionally the cat pages are stored under the same hierarchy as the man pages, but for reasons  such  as  those
       specified  in  the  File Hierarchy Standard (FHS), it may be better to store them elsewhere.  For details on how to do this, please read manpath(5).  For details on why to do this,
       read the standard.

       International support is available with this package.  Native language manual pages are accessible (if available on your system) via use of locale functions.  To activate such sup‐
       port,  it  is necessary to set either $LC_MESSAGES, $LANG or another system dependent environment variable to your language locale, usually specified in the POSIX 1003.1 based for‐
       mat:

       <language>[_<territory>[.<character-set>[,<version>]]]

       If the desired page is available in your locale, it will be displayed in lieu of the standard (usually American English) page.

       Support for international message catalogues is also featured in this package and can be activated in the same way, again if available.  If you find that the manual pages and  mes‐
       sage  catalogues supplied with this package are not available in your native language and you would like to supply them, please contact the maintainer who will be coordinating such
       activity.

       For information regarding other features and extensions available with this manual pager, please read the documents supplied with the package.

DEFAULTS
       man will search for the desired manual pages within the index database caches. If the -u option is given, a cache consistency check is performed to ensure the databases  accurately
       reflect  the  filesystem.   If this option is always given, it is not generally necessary to run mandb after the caches are initially created, unless a cache becomes corrupt.  How‐
       ever, the cache consistency check can be slow on systems with many manual pages installed, so it is not performed by default, and system administrators may wish to run mandb  every
       week  or so to keep the database caches fresh.  To forestall problems caused by outdated caches, man will fall back to file globbing if a cache lookup fails, just as it would if no
       cache was present.

       Once a manual page has been located, a check is performed to find out if a relative preformatted `cat' file already exists and is newer than the nroff file.  If  it  does  and  is,
       this  preformatted  file  is  (usually) decompressed and then displayed, via use of a pager.  The pager can be specified in a number of ways, or else will fall back to a default is
       used (see option -P for details).  If no cat is found or is older than the nroff file, the nroff is filtered through various programs and is shown immediately.

       If a cat file can be produced (a relative cat directory exists and has appropriate permissions), man will compress and store the cat file in the background.

       The filters are deciphered by a number of means.  Firstly, the command line option -p or the environment variable $MANROFFSEQ is interrogated.  If -p was not used and the  environ‐
       ment variable was not set, the initial line of the nroff file is parsed for a preprocessor string.  To contain a valid preprocessor string, the first line must resemble

       '\" <string>

       where string can be any combination of letters described by option -p below.

       If none of the above methods provide any filter information, a default set is used.

       A  formatting  pipeline  is  formed  from  the  filters  and the primary formatter (nroff or [tg]roff with -t) and executed.  Alternatively, if an executable program mandb_nfmt (or
       mandb_tfmt with -t) exists in the man tree root, it is executed instead.  It gets passed the manual source file, the preprocessor string, and optionally the device  specified  with
       -T or -E as arguments.

OPTIONS
       Non argument options that are duplicated either on the command line, in $MANOPT, or both, are not harmful.  For options that require an argument, each duplication will override the
       previous argument value.

   General options
       -C file, --config-file=file
              Use this user configuration file rather than the default of ~/.manpath.

       -d, --debug
              Print debugging information.

       -D, --default
              This option is normally issued as the very first option and resets man's behaviour to its default.  Its use is to reset those options that may have been set in $MANOPT.  Any
              options that follow -D will have their usual effect.

       --warnings[=warnings]
              Enable warnings from groff.  This may be used to perform sanity checks on the source text of manual pages.  warnings is a comma-separated list of warning names; if it is not
              supplied, the default is "mac".  See the “Warnings” node in info groff for a list of available warning names.

   Main modes of operation
       -f, --whatis
              Equivalent to whatis.  Display a short description from the manual page, if available.  See whatis(1) for details.

       -k, --apropos
              Equivalent to apropos.  Search the short manual page descriptions for keywords and display any matches.  See apropos(1) for details.

       -K, --global-apropos
              Search for text in all manual pages.  This is a brute-force search, and is likely to take some time; if you can, you should specify a section to reduce the number  of  pages
              that need to be searched.  Search terms may be simple strings (the default), or regular expressions if the --regex option is used.

       -l, --local-file
              Activate  `local' mode.  Format and display local manual files instead of searching through the system's manual collection.  Each manual page argument will be interpreted as
              an nroff source file in the correct format.  No cat file is produced.  If '-' is listed as one of the arguments, input will be taken from stdin.  When  this  option  is  not
              used, and man fails to find the page required, before displaying the error message, it attempts to act as if this option was supplied, using the name as a filename and look‐
              ing for an exact match.

       -w, --where, --path, --location
              Don't actually display the manual pages, but do print the location(s) of the source nroff files that would be formatted.

       -W, --where-cat, --location-cat
              Don't actually display the manual pages, but do print the location(s) of the cat files that would be displayed.  If -w and -W are both specified, print both separated  by  a
              space.

       -c, --catman
              This option is not for general use and should only be used by the catman program.

       -R encoding, --recode=encoding
              Instead  of formatting the manual page in the usual way, output its source converted to the specified encoding.  If you already know the encoding of the source file, you can
              also use manconv(1) directly.  However, this option allows you to convert several manual pages to a single encoding without having to explicitly state the encoding of  each,
              provided that they were already installed in a structure similar to a manual page hierarchy.

   Finding manual pages
       -L locale, --locale=locale
              man  will  normally  determine your current locale by a call to the C function setlocale(3) which interrogates various environment variables, possibly including $LC_MESSAGES
              and $LANG.  To temporarily override the determined value, use this option to supply a locale string directly to man.  Note that it will not take effect until the search  for
              pages actually begins.  Output such as the help message will always be displayed in the initially determined locale.

       -m system[,...], --systems=system[,...]
              If this system has access to other operating system's manual pages, they can be accessed using this option.  To search for a manual page from NewOS's manual page collection,
              use the option -m NewOS.

              The system specified can be a combination of comma delimited operating system names.  To include a search of the native operating system's manual pages, include  the  system
              name man in the argument string.  This option will override the $SYSTEM environment variable.

       -M path, --manpath=path
              Specify an alternate manpath to use.  By default, man uses manpath derived code to determine the path to search.  This option overrides the $MANPATH environment variable and
              causes option -m to be ignored.

              A path specified as a manpath must be the root of a manual page hierarchy structured into sections as described in the man-db manual (under "The manual  page  system").   To
              view manual pages outside such hierarchies, see the -l option.

       -S list, -s list, --sections=list
              List  is  a  colon- or comma-separated list of `order specific' manual sections to search.  This option overrides the $MANSECT environment variable.  (The -s spelling is for
              compatibility with System V.)

       -e sub-extension, --extension=sub-extension
              Some systems incorporate large packages of manual pages, such as those that accompany the Tcl package, into the main manual page hierarchy.  To get  around  the  problem  of
              having  two  manual  pages  with  the same name such as exit(3), the Tcl pages were usually all assigned to section l.  As this is unfortunate, it is now possible to put the
              pages in the correct section, and to assign a specific `extension' to them, in this case, exit(3tcl).  Under normal operation, man will  display  exit(3)  in  preference  to
              exit(3tcl).   To  negotiate  this  situation and to avoid having to know which section the page you require resides in, it is now possible to give man a sub-extension string
              indicating which package the page must belong to.  Using the above example, supplying the option -e tcl to man will restrict the search to pages having an extension of *tcl.

       -i, --ignore-case
              Ignore case when searching for manual pages.  This is the default.

       -I, --match-case
              Search for manual pages case-sensitively.

       --regex
              Show all pages with any part of either their names or their descriptions matching each page argument as a regular expression, as with apropos(1).  Since there is usually  no
              reasonable way to pick a "best" page when searching for a regular expression, this option implies -a.

       --wildcard
              Show  all  pages  with any part of either their names or their descriptions matching each page argument using shell-style wildcards, as with apropos(1) --wildcard.  The page
              argument must match the entire name or description, or match on word boundaries in the description.  Since there is usually no reasonable way to  pick  a  "best"  page  when
              searching for a wildcard, this option implies -a.

       --names-only
              If the --regex or --wildcard option is used, match only page names, not page descriptions, as with whatis(1).  Otherwise, no effect.

       -a, --all
              By  default,  man  will exit after displaying the most suitable manual page it finds.  Using this option forces man to display all the manual pages with names that match the
              search criteria.

       -u, --update
              This option causes man to perform an `inode level' consistency check on its database caches to ensure that they are an accurate representation of the  filesystem.   It  will
              only have a useful effect if man is installed with the setuid bit set.

       --no-subpages
              By  default,  man will try to interpret pairs of manual page names given on the command line as equivalent to a single manual page name containing a hyphen or an underscore.
              This supports the common pattern of programs that implement a number of subcommands, allowing them to provide manual pages for each that can be accessed using similar syntax
              as would be used to invoke the subcommands themselves.  For example:

                $ man -aw git diff
                /usr/share/man/man1/git-diff.1.gz

              To disable this behaviour, use the --no-subpages option.

                $ man -aw --no-subpages git diff
                /usr/share/man/man1/git.1.gz
                /usr/share/man/man3/Git.3pm.gz
                /usr/share/man/man1/diff.1.gz

   Controlling formatted output
       -P pager, --pager=pager
              Specify  which  output  pager  to  use.  By default, man uses less.  This option overrides the $MANPAGER environment variable, which in turn overrides the $PAGER environment
              variable.  It is not used in conjunction with -f or -k.

              The value may be a simple command name or a command with arguments, and may use shell quoting (backslashes, single quotes, or double quotes).  It may not use pipes  to  con‐
              nect multiple commands; if you need that, use a wrapper script, which may take the file to display either as an argument or on standard input.

       -r prompt, --prompt=prompt
              If a recent version of less is used as the pager, man will attempt to set its prompt and some sensible options.  The default prompt looks like

               Manual page name(sec) line x

              where name denotes the manual page name, sec denotes the section it was found under and x the current line number.  This is achieved by using the $LESS environment variable.

              Supplying -r with a string will override this default.  The string may contain the text $MAN_PN which will be expanded to the name of the current manual page and its section
              name surrounded by `(' and `)'.  The string used to produce the default could be expressed as

              \ Manual\ page\ \$MAN_PN\ ?ltline\ %lt?L/%L.:
              byte\ %bB?s/%s..?\ (END):?pB\ %pB\\%..
              (press h for help or q to quit)

              It is broken into three lines here for the sake of readability only.  For its meaning see the less(1) manual page.  The prompt string is first evaluated by the  shell.   All
              double  quotes,  back-quotes and backslashes in the prompt must be escaped by a preceding backslash.  The prompt string may end in an escaped $ which may be followed by fur‐
              ther options for less.  By default man sets the -ix8 options.

              The $MANLESS environment variable described below may be used to set a default prompt string if none is supplied on the command line.

       -7, --ascii
              When viewing a pure ascii(7) manual page on a 7 bit terminal or terminal emulator, some characters may not display correctly when using the latin1(7) device description with
              GNU  nroff.   This  option allows pure ascii manual pages to be displayed in ascii with the latin1 device.  It will not translate any latin1 text.  The following table shows
              the translations performed: some parts of it may only be displayed properly when using GNU nroff's latin1(7) device.

              Description           Octal   latin1   ascii
              ─────────────────────────────────────────────
              continuation hyphen    255      ‐        -
              bullet (middle dot)    267      ·        o
              acute accent           264      ´        '
              multiplication sign    327      ×        x

              If the latin1 column displays correctly, your terminal may be set up for latin1 characters and this option is not necessary.  If the latin1 and ascii columns are  identical,
              you are reading this page using this option or man did not format this page using the latin1 device description.  If the latin1 column is missing or corrupt, you may need to
              view manual pages with this option.

              This option is ignored when using options -t, -H, -T, or -Z and may be useless for nroff other than GNU's.

       -E encoding, --encoding=encoding
              Generate output for a character encoding other than the default.  For backward compatibility, encoding may be an nroff device such as ascii, latin1, or utf8  as  well  as  a
              true character encoding such as UTF-8.

       --no-hyphenation, --nh
              Normally,  nroff  will  automatically hyphenate text at line breaks even in words that do not contain hyphens, if it is necessary to do so to lay out words on a line without
              excessive spacing.  This option disables automatic hyphenation, so words will only be hyphenated if they already contain hyphens.

              If you are writing a manual page and simply want to prevent nroff from hyphenating a word at an inappropriate point, do not use this option, but consult the nroff documenta‐
              tion  instead;  for instance, you can put "\%" inside a word to indicate that it may be hyphenated at that point, or put "\%" at the start of a word to prevent it from being
              hyphenated.

       --no-justification, --nj
              Normally, nroff will automatically justify text to both margins.  This option disables full justification, leaving justified  only  to  the  left  margin,  sometimes  called
              "ragged-right" text.

              If  you  are  writing a manual page and simply want to prevent nroff from justifying certain paragraphs, do not use this option, but consult the nroff documentation instead;
              for instance, you can use the ".na", ".nf", ".fi", and ".ad" requests to temporarily disable adjusting and filling.

       -p string, --preprocessor=string
              Specify the sequence of preprocessors to run before nroff or troff/groff.  Not all installations will have a full set of preprocessors.  Some of the  preprocessors  and  the
              letters  used  to  designate  them  are: eqn (e), grap (g), pic (p), tbl (t), vgrind (v), refer (r).  This option overrides the $MANROFFSEQ environment variable.  zsoelim is
              always run as the very first preprocessor.

       -t, --troff
              Use groff -mandoc to format the manual page to stdout.  This option is not required in conjunction with -H, -T, or -Z.

       -T[device], --troff-device[=device]
              This option is used to change groff (or possibly troff's) output to be suitable for a device other than the default.  It implies -t.   Examples  (provided  with  Groff-1.17)
              include dvi, latin1, ps, utf8, X75 and X100.

       -H[browser], --html[=browser]
              This  option will cause groff to produce HTML output, and will display that output in a web browser.  The choice of browser is determined by the optional browser argument if
              one is provided, by the $BROWSER environment variable, or by a compile-time default if that is unset (usually lynx).  This option implies -t, and will  only  work  with  GNU
              troff.

       -X[dpi], --gxditview[=dpi]
              This  option displays the output of groff in a graphical window using the gxditview program.  The dpi (dots per inch) may be 75, 75-12, 100, or 100-12, defaulting to 75; the
              -12 variants use a 12-point base font.  This option implies -T with the X75, X75-12, X100, or X100-12 device respectively.

       -Z, --ditroff
              groff will run troff and then use an appropriate post-processor to produce output suitable for the chosen device.  If groff -mandoc is groff, this option is passed to  groff
              and will suppress the use of a post-processor.  It implies -t.

   Getting help
       -?, --help
              Print a help message and exit.

       --usage
              Print a short usage message and exit.

       -V, --version
              Display version information.

EXIT STATUS
       0      Successful program execution.

       1      Usage, syntax or configuration file error.

       2      Operational error.

       3      A child process returned a non-zero exit status.

       16     At least one of the pages/files/keywords didn't exist or wasn't matched.

ENVIRONMENT
       MANPATH
              If $MANPATH is set, its value is used as the path to search for manual pages.

       MANROFFOPT
              The contents of $MANROFFOPT are added to the command line every time man invokes the formatter (nroff, troff, or groff).

       MANROFFSEQ
              If $MANROFFSEQ is set, its value is used to determine the set of preprocessors to pass each manual page through.  The default preprocessor list is system dependent.

       MANSECT
              If  $MANSECT is set, its value is a colon-delimited list of sections and it is used to determine which manual sections to search and in what order.  The default is "1 1p 8 2
              3 3p 4 5 6 7 9 0p n", unless overridden by the SECTION directive in /etc/man_db.conf.

       MANPAGER, PAGER
              If $MANPAGER or $PAGER is set ($MANPAGER is used in preference), its value is used as the name of the program used to display the manual page.  By default, less is used.

              The value may be a simple command name or a command with arguments, and may use shell quoting (backslashes, single quotes, or double quotes).  It may not use pipes  to  con‐
              nect multiple commands; if you need that, use a wrapper script, which may take the file to display either as an argument or on standard input.

       MANLESS
              If  $MANLESS  is  set,  its  value will be used as the default prompt string for the less pager, as if it had been passed using the -r option (so any occurrences of the text
              $MAN_PN will be expanded in the same way).  For example, if you want to set the prompt string unconditionally to “my prompt string”, set $MANLESS  to  ‘-Psmy prompt string’.
              Using the -r option overrides this environment variable.

       BROWSER
              If  $BROWSER  is  set,  its  value is a colon-delimited list of commands, each of which in turn is used to try to start a web browser for man --html.  In each command, %s is
              replaced by a filename containing the HTML output from groff, %% is replaced by a single percent sign (%), and %c is replaced by a colon (:).

       SYSTEM If $SYSTEM is set, it will have the same effect as if it had been specified as the argument to the -m option.

       MANOPT If $MANOPT is set, it will be parsed prior to man's command line and is expected to be in a similar format.  As all of the other man specific environment  variables  can  be
              expressed  as  command  line  options,  and are thus candidates for being included in $MANOPT it is expected that they will become obsolete.  N.B.  All spaces that should be
              interpreted as part of an option's argument must be escaped.

       MANWIDTH
              If $MANWIDTH is set, its value is used as the line length for which manual pages should be formatted.  If it is not set, manual pages will be formatted with  a  line  length
              appropriate  to  the current terminal (using the value of $COLUMNS, an ioctl(2) if available, or falling back to 80 characters if neither is available).  Cat pages will only
              be saved when the default formatting can be used, that is when the terminal line length is between 66 and 80 characters.

       MAN_KEEP_FORMATTING
              Normally, when output is not being directed to a terminal (such as to a file or a pipe), formatting characters are discarded to make it easier to  read  the  result  without
              special  tools.   However,  if $MAN_KEEP_FORMATTING is set to any non-empty value, these formatting characters are retained.  This may be useful for wrappers around man that
              can interpret formatting characters.

       MAN_KEEP_STDERR
              Normally, when output is being directed to a terminal (usually to a pager), any error output from the command used to produce formatted versions of manual pages is discarded
              to  avoid  interfering  with  the pager's display.  Programs such as groff often produce relatively minor error messages about typographical problems such as poor alignment,
              which are unsightly and generally confusing when displayed along with the manual page.  However, some users want to see them anyway, so, if $MAN_KEEP_STDERR is  set  to  any
              non-empty value, error output will be displayed as usual.

       LANG, LC_MESSAGES
              Depending  on system and implementation, either or both of $LANG and $LC_MESSAGES will be interrogated for the current message locale.  man will display its messages in that
              locale (if available).  See setlocale(3) for precise details.

FILES
       /etc/man_db.conf
              man-db configuration file.

       /usr/share/man
              A global manual page hierarchy.

       /usr/share/man/index.(bt|db|dir|pag)
              A traditional global index database cache.

       /var/cache/man/index.(bt|db|dir|pag)
              An FHS compliant global index database cache.

SEE ALSO
       apropos(1), groff(1), less(1), manpath(1), nroff(1), troff(1), whatis(1), zsoelim(1), setlocale(3), manpath(5), ascii(7), latin1(7), man(7), catman(8), mandb(8), the man-db package
       manual, FSSTND

HISTORY
       1990, 1991 – Originally written by John W. Eaton (jwe@che.utexas.edu).

       Dec 23 1992: Rik Faith (faith@cs.unc.edu) applied bug fixes supplied by Willem Kasdorp (wkasdo@nikhefk.nikef.nl).

       30th April 1994 – 23rd February 2000: Wilf. (G.Wilford@ee.surrey.ac.uk) has been developing and maintaining this package with the help of a few dedicated people.

       30th October 1996 – 30th March 2001: Fabrizio Polacco <fpolacco@debian.org> maintained and enhanced this package for the Debian project, with the help of all the community.

       31st March 2001 – present day: Colin Watson <cjwatson@debian.org> is now developing and maintaining man-db.

2.7.5                                                                                    2015-11-06                                                                                  MAN(1)
****************************************************man ends here****************************************************


****************************************************head starts here****************************************************
HEAD(1)                                                                                User Commands                                                                                HEAD(1)

NAME
       head - output the first part of files

SYNOPSIS
       head [OPTION]... [FILE]...

DESCRIPTION
       Print the first 10 lines of each FILE to standard output.  With more than one FILE, precede each with a header giving the file name.

       With no FILE, or when FILE is -, read standard input.

       Mandatory arguments to long options are mandatory for short options too.

       -c, --bytes=[-]NUM
              print the first NUM bytes of each file; with the leading '-', print all but the last NUM bytes of each file

       -n, --lines=[-]NUM
              print the first NUM lines instead of the first 10; with the leading '-', print all but the last NUM lines of each file

       -q, --quiet, --silent
              never print headers giving file names

       -v, --verbose
              always print headers giving file names

       -z, --zero-terminated
              line delimiter is NUL, not newline

       --help display this help and exit

       --version
              output version information and exit

       NUM may have a multiplier suffix: b 512, kB 1000, K 1024, MB 1000*1000, M 1024*1024, GB 1000*1000*1000, G 1024*1024*1024, and so on for T, P, E, Z, Y.

AUTHOR
       Written by David MacKenzie and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report head translation bugs to <http://translationproject.org/team/>

SEE ALSO
       tail(1)

       Full documentation at: <http://www.gnu.org/software/coreutils/head>
       or available locally via: info '(coreutils) head invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                HEAD(1)
****************************************************head ends here****************************************************


****************************************************chgrp starts here****************************************************
CHGRP(1)                                                                               User Commands                                                                               CHGRP(1)

NAME
       chgrp - change group ownership

SYNOPSIS
       chgrp [OPTION]... GROUP FILE...
       chgrp [OPTION]... --reference=RFILE FILE...

DESCRIPTION
       Change the group of each FILE to GROUP.  With --reference, change the group of each FILE to that of RFILE.

       -c, --changes
              like verbose but report only when a change is made

       -f, --silent, --quiet
              suppress most error messages

       -v, --verbose
              output a diagnostic for every file processed

       --dereference
              affect the referent of each symbolic link (this is the default), rather than the symbolic link itself

       -h, --no-dereference
              affect symbolic links instead of any referenced file (useful only on systems that can change the ownership of a symlink)

       --no-preserve-root
              do not treat '/' specially (the default)

       --preserve-root
              fail to operate recursively on '/'

       --reference=RFILE
              use RFILE's group rather than specifying a GROUP value

       -R, --recursive
              operate on files and directories recursively

       The following options modify how a hierarchy is traversed when the -R option is also specified.  If more than one is specified, only the final one takes effect.

       -H     if a command line argument is a symbolic link to a directory, traverse it

       -L     traverse every symbolic link to a directory encountered

       -P     do not traverse any symbolic links (default)

       --help display this help and exit

       --version
              output version information and exit

EXAMPLES
       chgrp staff /u
              Change the group of /u to "staff".

       chgrp -hR staff /u
              Change the group of /u and subfiles to "staff".

AUTHOR
       Written by David MacKenzie and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report chgrp translation bugs to <http://translationproject.org/team/>

SEE ALSO
       chown(1), chown(2)

       Full documentation at: <http://www.gnu.org/software/coreutils/chgrp>
       or available locally via: info '(coreutils) chgrp invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                               CHGRP(1)
****************************************************chgrp ends here****************************************************


****************************************************chown starts here****************************************************
CHOWN(1)                                                                               User Commands                                                                               CHOWN(1)

NAME
       chown - change file owner and group

SYNOPSIS
       chown [OPTION]... [OWNER][:[GROUP]] FILE...
       chown [OPTION]... --reference=RFILE FILE...

DESCRIPTION
       This manual page documents the GNU version of chown.  chown changes the user and/or group ownership of each given file.  If only an owner (a user name or numeric user ID) is given,
       that user is made the owner of each given file, and the files' group is not changed.  If the owner is followed by a colon and a group name (or numeric group  ID),  with  no  spaces
       between  them,  the  group ownership of the files is changed as well.  If a colon but no group name follows the user name, that user is made the owner of the files and the group of
       the files is changed to that user's login group.  If the colon and group are given, but the owner is omitted, only the group of the files is changed; in this case,  chown  performs
       the same function as chgrp.  If only a colon is given, or if the entire operand is empty, neither the owner nor the group is changed.

OPTIONS
       Change the owner and/or group of each FILE to OWNER and/or GROUP.  With --reference, change the owner and group of each FILE to those of RFILE.

       -c, --changes
              like verbose but report only when a change is made

       -f, --silent, --quiet
              suppress most error messages

       -v, --verbose
              output a diagnostic for every file processed

       --dereference
              affect the referent of each symbolic link (this is the default), rather than the symbolic link itself

       -h, --no-dereference
              affect symbolic links instead of any referenced file (useful only on systems that can change the ownership of a symlink)

       --from=CURRENT_OWNER:CURRENT_GROUP
              change  the  owner and/or group of each file only if its current owner and/or group match those specified here.  Either may be omitted, in which case a match is not required
              for the omitted attribute

       --no-preserve-root
              do not treat '/' specially (the default)

       --preserve-root
              fail to operate recursively on '/'

       --reference=RFILE
              use RFILE's owner and group rather than specifying OWNER:GROUP values

       -R, --recursive
              operate on files and directories recursively

       The following options modify how a hierarchy is traversed when the -R option is also specified.  If more than one is specified, only the final one takes effect.

       -H     if a command line argument is a symbolic link to a directory, traverse it

       -L     traverse every symbolic link to a directory encountered

       -P     do not traverse any symbolic links (default)

       --help display this help and exit

       --version
              output version information and exit

       Owner is unchanged if missing.  Group is unchanged if missing, but changed to login group if implied by a ':' following a symbolic OWNER.  OWNER and GROUP may be numeric as well as
       symbolic.

EXAMPLES
       chown root /u
              Change the owner of /u to "root".

       chown root:staff /u
              Likewise, but also change its group to "staff".

       chown -hR root /u
              Change the owner of /u and subfiles to "root".

AUTHOR
       Written by David MacKenzie and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report chown translation bugs to <http://translationproject.org/team/>

SEE ALSO
       chown(2)

       Full documentation at: <http://www.gnu.org/software/coreutils/chown>
       or available locally via: info '(coreutils) chown invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                               CHOWN(1)
****************************************************chown ends here****************************************************


****************************************************crontab starts here****************************************************
****************************************************crontab ends here****************************************************


****************************************************cut starts here****************************************************
CUT(1)                                                                                 User Commands                                                                                 CUT(1)

NAME
       cut - remove sections from each line of files

SYNOPSIS
       cut OPTION... [FILE]...

DESCRIPTION
       Print selected parts of lines from each FILE to standard output.

       With no FILE, or when FILE is -, read standard input.

       Mandatory arguments to long options are mandatory for short options too.

       -b, --bytes=LIST
              select only these bytes

       -c, --characters=LIST
              select only these characters

       -d, --delimiter=DELIM
              use DELIM instead of TAB for field delimiter

       -f, --fields=LIST
              select only these fields;  also print any line that contains no delimiter character, unless the -s option is specified

       -n     (ignored)

       --complement
              complement the set of selected bytes, characters or fields

       -s, --only-delimited
              do not print lines not containing delimiters

       --output-delimiter=STRING
              use STRING as the output delimiter the default is to use the input delimiter

       -z, --zero-terminated
              line delimiter is NUL, not newline

       --help display this help and exit

       --version
              output version information and exit

       Use  one, and only one of -b, -c or -f.  Each LIST is made up of one range, or many ranges separated by commas.  Selected input is written in the same order that it is read, and is
       written exactly once.  Each range is one of:

       N      N'th byte, character or field, counted from 1

       N-     from N'th byte, character or field, to end of line

       N-M    from N'th to M'th (included) byte, character or field

       -M     from first to M'th (included) byte, character or field

AUTHOR
       Written by David M. Ihnat, David MacKenzie, and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report cut translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/cut>
       or available locally via: info '(coreutils) cut invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                 CUT(1)
****************************************************cut ends here****************************************************


****************************************************dirname starts here****************************************************
DIRNAME(1)                                                                             User Commands                                                                             DIRNAME(1)

NAME
       dirname - strip last component from file name

SYNOPSIS
       dirname [OPTION] NAME...

DESCRIPTION
       Output each NAME with its last non-slash component and trailing slashes removed; if NAME contains no /'s, output '.' (meaning the current directory).

       -z, --zero
              end each output line with NUL, not newline

       --help display this help and exit

       --version
              output version information and exit

EXAMPLES
       dirname /usr/bin/
              -> "/usr"

       dirname dir1/str dir2/str
              -> "dir1" followed by "dir2"

       dirname stdio.h
              -> "."

AUTHOR
       Written by David MacKenzie and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report dirname translation bugs to <http://translationproject.org/team/>

SEE ALSO
       basename(1), readlink(1)

       Full documentation at: <http://www.gnu.org/software/coreutils/dirname>
       or available locally via: info '(coreutils) dirname invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                             DIRNAME(1)
****************************************************dirname ends here****************************************************


****************************************************echo starts here****************************************************
ECHO(1)                                                                                User Commands                                                                                ECHO(1)

NAME
       echo - display a line of text

SYNOPSIS
       echo [SHORT-OPTION]... [STRING]...
       echo LONG-OPTION

DESCRIPTION
       Echo the STRING(s) to standard output.

       -n     do not output the trailing newline

       -e     enable interpretation of backslash escapes

       -E     disable interpretation of backslash escapes (default)

       --help display this help and exit

       --version
              output version information and exit

       If -e is in effect, the following sequences are recognized:

       \\     backslash

       \a     alert (BEL)

       \b     backspace

       \c     produce no further output

       \e     escape

       \f     form feed

       \n     new line

       \r     carriage return

       \t     horizontal tab

       \v     vertical tab

       \0NNN  byte with octal value NNN (1 to 3 digits)

       \xHH   byte with hexadecimal value HH (1 to 2 digits)

       NOTE: your shell may have its own version of echo, which usually supersedes the version described here.  Please refer to your shell's documentation for details about the options it
       supports.

AUTHOR
       Written by Brian Fox and Chet Ramey.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report echo translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/echo>
       or available locally via: info '(coreutils) echo invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                ECHO(1)
****************************************************echo ends here****************************************************


****************************************************env starts here****************************************************
ENV(1)                                                                                 User Commands                                                                                 ENV(1)

NAME
       env - run a program in a modified environment

SYNOPSIS
       env [OPTION]... [-] [NAME=VALUE]... [COMMAND [ARG]...]

DESCRIPTION
       Set each NAME to VALUE in the environment and run COMMAND.

       Mandatory arguments to long options are mandatory for short options too.

       -i, --ignore-environment
              start with an empty environment

       -0, --null
              end each output line with NUL, not newline

       -u, --unset=NAME
              remove variable from the environment

       --help display this help and exit

       --version
              output version information and exit

       A mere - implies -i.  If no COMMAND, print the resulting environment.

AUTHOR
       Written by Richard Mlynarik and David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report env translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/env>
       or available locally via: info '(coreutils) env invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                 ENV(1)
****************************************************env ends here****************************************************


****************************************************expr starts here****************************************************
EXPR(1)                                                                                User Commands                                                                                EXPR(1)

NAME
       expr - evaluate expressions

SYNOPSIS
       expr EXPRESSION
       expr OPTION

DESCRIPTION
       --help display this help and exit

       --version
              output version information and exit

       Print the value of EXPRESSION to standard output.  A blank line below separates increasing precedence groups.  EXPRESSION may be:

       ARG1 | ARG2
              ARG1 if it is neither null nor 0, otherwise ARG2

       ARG1 & ARG2
              ARG1 if neither argument is null or 0, otherwise 0

       ARG1 < ARG2
              ARG1 is less than ARG2

       ARG1 <= ARG2
              ARG1 is less than or equal to ARG2

       ARG1 = ARG2
              ARG1 is equal to ARG2

       ARG1 != ARG2
              ARG1 is unequal to ARG2

       ARG1 >= ARG2
              ARG1 is greater than or equal to ARG2

       ARG1 > ARG2
              ARG1 is greater than ARG2

       ARG1 + ARG2
              arithmetic sum of ARG1 and ARG2

       ARG1 - ARG2
              arithmetic difference of ARG1 and ARG2

       ARG1 * ARG2
              arithmetic product of ARG1 and ARG2

       ARG1 / ARG2
              arithmetic quotient of ARG1 divided by ARG2

       ARG1 % ARG2
              arithmetic remainder of ARG1 divided by ARG2

       STRING : REGEXP
              anchored pattern match of REGEXP in STRING

       match STRING REGEXP
              same as STRING : REGEXP

       substr STRING POS LENGTH
              substring of STRING, POS counted from 1

       index STRING CHARS
              index in STRING where any CHARS is found, or 0

       length STRING
              length of STRING

       + TOKEN
              interpret TOKEN as a string, even if it is a

              keyword like 'match' or an operator like '/'

       ( EXPRESSION )
              value of EXPRESSION

       Beware  that  many operators need to be escaped or quoted for shells.  Comparisons are arithmetic if both ARGs are numbers, else lexicographical.  Pattern matches return the string
       matched between \( and \) or null; if \( and \) are not used, they return the number of characters matched or 0.

       Exit status is 0 if EXPRESSION is neither null nor 0, 1 if EXPRESSION is null or 0, 2 if EXPRESSION is syntactically invalid, and 3 if an error occurred.

AUTHOR
       Written by Mike Parker, James Youngman, and Paul Eggert.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report expr translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/expr>
       or available locally via: info '(coreutils) expr invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                EXPR(1)
****************************************************expr ends here****************************************************


****************************************************ln starts here****************************************************
LN(1)                                                                                  User Commands                                                                                  LN(1)

NAME
       ln - make links between files

SYNOPSIS
       ln [OPTION]... [-T] TARGET LINK_NAME   (1st form)
       ln [OPTION]... TARGET                  (2nd form)
       ln [OPTION]... TARGET... DIRECTORY     (3rd form)
       ln [OPTION]... -t DIRECTORY TARGET...  (4th form)

DESCRIPTION
       In  the  1st  form,  create a link to TARGET with the name LINK_NAME.  In the 2nd form, create a link to TARGET in the current directory.  In the 3rd and 4th forms, create links to
       each TARGET in DIRECTORY.  Create hard links by default, symbolic links with --symbolic.  By default, each destination (name of new link) should not already exist.   When  creating
       hard links, each TARGET must exist.  Symbolic links can hold arbitrary text; if later resolved, a relative link is interpreted in relation to its parent directory.

       Mandatory arguments to long options are mandatory for short options too.

       --backup[=CONTROL]
              make a backup of each existing destination file

       -b     like --backup but does not accept an argument

       -d, -F, --directory
              allow the superuser to attempt to hard link directories (note: will probably fail due to system restrictions, even for the superuser)

       -f, --force
              remove existing destination files

       -i, --interactive
              prompt whether to remove destinations

       -L, --logical
              dereference TARGETs that are symbolic links

       -n, --no-dereference
              treat LINK_NAME as a normal file if it is a symbolic link to a directory

       -P, --physical
              make hard links directly to symbolic links

       -r, --relative
              create symbolic links relative to link location

       -s, --symbolic
              make symbolic links instead of hard links

       -S, --suffix=SUFFIX
              override the usual backup suffix

       -t, --target-directory=DIRECTORY
              specify the DIRECTORY in which to create the links

       -T, --no-target-directory
              treat LINK_NAME as a normal file always

       -v, --verbose
              print name of each linked file

       --help display this help and exit

       --version
              output version information and exit

       The backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.  The version control method may be selected via the --backup option or through the VERSION_CONTROL envi‐
       ronment variable.  Here are the values:

       none, off
              never make backups (even if --backup is given)

       numbered, t
              make numbered backups

       existing, nil
              numbered if numbered backups exist, simple otherwise

       simple, never
              always make simple backups

       Using -s ignores -L and -P.  Otherwise, the last option specified controls behavior when a TARGET is a symbolic link, defaulting to -P.

AUTHOR
       Written by Mike Parker and David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report ln translation bugs to <http://translationproject.org/team/>

SEE ALSO
       link(2), symlink(2)

       Full documentation at: <http://www.gnu.org/software/coreutils/ln>
       or available locally via: info '(coreutils) ln invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                  LN(1)
****************************************************ln ends here****************************************************


****************************************************read starts here****************************************************
BASH_BUILTINS(1)                                                                  General Commands Manual                                                                  BASH_BUILTINS(1)

NAME
       bash, :, ., [, alias, bg, bind, break, builtin, caller, cd, command, compgen, complete, compopt, continue, declare, dirs, disown, echo, enable, eval, exec, exit, export, false, fc,
       fg, getopts, hash, help, history, jobs, kill, let, local, logout, mapfile, popd, printf, pushd, pwd, read, readonly, return, set, shift, shopt, source, suspend, test, times,  trap,
       true, type, typeset, ulimit, umask, unalias, unset, wait - bash built-in commands, see bash(1)

BASH BUILTIN COMMANDS
SEE ALSO
       bash(1), sh(1)

GNU Bash-4.2                                                                            2004 Apr 20                                                                        BASH_BUILTINS(1)
****************************************************read ends here****************************************************


****************************************************split  starts here****************************************************
SPLIT(1)                                                                               User Commands                                                                               SPLIT(1)

NAME
       split - split a file into pieces

SYNOPSIS
       split [OPTION]... [FILE [PREFIX]]

DESCRIPTION
       Output pieces of FILE to PREFIXaa, PREFIXab, ...; default size is 1000 lines, and default PREFIX is 'x'.

       With no FILE, or when FILE is -, read standard input.

       Mandatory arguments to long options are mandatory for short options too.

       -a, --suffix-length=N
              generate suffixes of length N (default 2)

       --additional-suffix=SUFFIX
              append an additional SUFFIX to file names

       -b, --bytes=SIZE
              put SIZE bytes per output file

       -C, --line-bytes=SIZE
              put at most SIZE bytes of records per output file

       -d     use numeric suffixes starting at 0, not alphabetic

       --numeric-suffixes[=FROM]
              same as -d, but allow setting the start value

       -e, --elide-empty-files
              do not generate empty output files with '-n'

       --filter=COMMAND
              write to shell COMMAND; file name is $FILE

       -l, --lines=NUMBER
              put NUMBER lines/records per output file

       -n, --number=CHUNKS
              generate CHUNKS output files; see explanation below

       -t, --separator=SEP
              use SEP instead of newline as the record separator; '\0' (zero) specifies the NUL character

       -u, --unbuffered
              immediately copy input to output with '-n r/...'

       --verbose
              print a diagnostic just before each output file is opened

       --help display this help and exit

       --version
              output version information and exit

       The SIZE argument is an integer and optional unit (example: 10K is 10*1024).  Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).

   CHUNKS may be:
       N      split into N files based on size of input

       K/N    output Kth of N to stdout

       l/N    split into N files without splitting lines/records

       l/K/N  output Kth of N to stdout without splitting lines/records

       r/N    like 'l' but use round robin distribution

       r/K/N  likewise but only output Kth of N to stdout

AUTHOR
       Written by Torbjorn Granlund and Richard M. Stallman.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report split translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/split>
       or available locally via: info '(coreutils) split invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                               SPLIT(1)
****************************************************split  ends here****************************************************


****************************************************test  starts here****************************************************
TEST(1)                                                                                User Commands                                                                                TEST(1)

NAME
       test - check file types and compare values

SYNOPSIS
       test EXPRESSION
       test

       [ EXPRESSION ]
       [ ]
       [ OPTION

DESCRIPTION
       Exit with the status determined by EXPRESSION.

       --help display this help and exit

       --version
              output version information and exit

       An omitted EXPRESSION defaults to false.  Otherwise, EXPRESSION is true or false and sets exit status.  It is one of:

       ( EXPRESSION )
              EXPRESSION is true

       ! EXPRESSION
              EXPRESSION is false

       EXPRESSION1 -a EXPRESSION2
              both EXPRESSION1 and EXPRESSION2 are true

       EXPRESSION1 -o EXPRESSION2
              either EXPRESSION1 or EXPRESSION2 is true

       -n STRING
              the length of STRING is nonzero

       STRING equivalent to -n STRING

       -z STRING
              the length of STRING is zero

       STRING1 = STRING2
              the strings are equal

       STRING1 != STRING2
              the strings are not equal

       INTEGER1 -eq INTEGER2
              INTEGER1 is equal to INTEGER2

       INTEGER1 -ge INTEGER2
              INTEGER1 is greater than or equal to INTEGER2

       INTEGER1 -gt INTEGER2
              INTEGER1 is greater than INTEGER2

       INTEGER1 -le INTEGER2
              INTEGER1 is less than or equal to INTEGER2

       INTEGER1 -lt INTEGER2
              INTEGER1 is less than INTEGER2

       INTEGER1 -ne INTEGER2
              INTEGER1 is not equal to INTEGER2

       FILE1 -ef FILE2
              FILE1 and FILE2 have the same device and inode numbers

       FILE1 -nt FILE2
              FILE1 is newer (modification date) than FILE2

       FILE1 -ot FILE2
              FILE1 is older than FILE2

       -b FILE
              FILE exists and is block special

       -c FILE
              FILE exists and is character special

       -d FILE
              FILE exists and is a directory

       -e FILE
              FILE exists

       -f FILE
              FILE exists and is a regular file

       -g FILE
              FILE exists and is set-group-ID

       -G FILE
              FILE exists and is owned by the effective group ID

       -h FILE
              FILE exists and is a symbolic link (same as -L)

       -k FILE
              FILE exists and has its sticky bit set

       -L FILE
              FILE exists and is a symbolic link (same as -h)

       -O FILE
              FILE exists and is owned by the effective user ID

       -p FILE
              FILE exists and is a named pipe

       -r FILE
              FILE exists and read permission is granted

       -s FILE
              FILE exists and has a size greater than zero

       -S FILE
              FILE exists and is a socket

       -t FD  file descriptor FD is opened on a terminal

       -u FILE
              FILE exists and its set-user-ID bit is set

       -w FILE
              FILE exists and write permission is granted

       -x FILE
              FILE exists and execute (or search) permission is granted

       Except  for  -h  and  -L,  all FILE-related tests dereference symbolic links.  Beware that parentheses need to be escaped (e.g., by backslashes) for shells.  INTEGER may also be -l
       STRING, which evaluates to the length of STRING.

       NOTE: Binary -a and -o are inherently ambiguous.  Use 'test EXPR1 && test EXPR2' or 'test EXPR1 || test EXPR2' instead.

       NOTE: [ honors the --help and --version options, but test does not.  test treats each of those as it treats any other nonempty STRING.

       NOTE: your shell may have its own version of test and/or [, which usually supersedes the version described here.  Please refer to your shell's documentation for details  about  the
       options it supports.

AUTHOR
       Written by Kevin Braunsdorf and Matthew Bradburn.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report [ translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/[>
       or available locally via: info '(coreutils) test invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                TEST(1)
****************************************************test  ends here****************************************************


****************************************************touch starts here****************************************************
TOUCH(1)                                                                               User Commands                                                                               TOUCH(1)

NAME
       touch - change file timestamps

SYNOPSIS
       touch [OPTION]... FILE...

DESCRIPTION
       Update the access and modification times of each FILE to the current time.

       A FILE argument that does not exist is created empty, unless -c or -h is supplied.

       A FILE argument string of - is handled specially and causes touch to change the times of the file associated with standard output.

       Mandatory arguments to long options are mandatory for short options too.

       -a     change only the access time

       -c, --no-create
              do not create any files

       -d, --date=STRING
              parse STRING and use it instead of current time

       -f     (ignored)

       -h, --no-dereference
              affect each symbolic link instead of any referenced file (useful only on systems that can change the timestamps of a symlink)

       -m     change only the modification time

       -r, --reference=FILE
              use this file's times instead of current time

       -t STAMP
              use [[CC]YY]MMDDhhmm[.ss] instead of current time

       --time=WORD
              change the specified time: WORD is access, atime, or use: equivalent to -a WORD is modify or mtime: equivalent to -m

       --help display this help and exit

       --version
              output version information and exit

       Note that the -d and -t options accept different time-date formats.

DATE STRING
       The  --date=STRING is a mostly free format human readable date string such as "Sun, 29 Feb 2004 16:21:42 -0800" or "2004-02-29 16:21:42" or even "next Thursday".  A date string may
       contain items indicating calendar date, time of day, time zone, day of week, relative time, relative date, and numbers.  An empty string indicates the beginning of  the  day.   The
       date string format is more complex than is easily documented here but is fully described in the info documentation.

AUTHOR
       Written by Paul Rubin, Arnold Robbins, Jim Kingdon, David MacKenzie, and Randy Smith.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report touch translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/touch>
       or available locally via: info '(coreutils) touch invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                               TOUCH(1)
****************************************************touch ends here****************************************************


****************************************************tr starts here****************************************************
TR(1)                                                                                  User Commands                                                                                  TR(1)

NAME
       tr - translate or delete characters

SYNOPSIS
       tr [OPTION]... SET1 [SET2]

DESCRIPTION
       Translate, squeeze, and/or delete characters from standard input, writing to standard output.

       -c, -C, --complement
              use the complement of SET1

       -d, --delete
              delete characters in SET1, do not translate

       -s, --squeeze-repeats
              replace each sequence of a repeated character that is listed in the last specified SET, with a single occurrence of that character

       -t, --truncate-set1
              first truncate SET1 to length of SET2

       --help display this help and exit

       --version
              output version information and exit

       SETs are specified as strings of characters.  Most represent themselves.  Interpreted sequences are:

       \NNN   character with octal value NNN (1 to 3 octal digits)

       \\     backslash

       \a     audible BEL

       \b     backspace

       \f     form feed

       \n     new line

       \r     return

       \t     horizontal tab

       \v     vertical tab

       CHAR1-CHAR2
              all characters from CHAR1 to CHAR2 in ascending order

       [CHAR*]
              in SET2, copies of CHAR until length of SET1

       [CHAR*REPEAT]
              REPEAT copies of CHAR, REPEAT octal if starting with 0

       [:alnum:]
              all letters and digits

       [:alpha:]
              all letters

       [:blank:]
              all horizontal whitespace

       [:cntrl:]
              all control characters

       [:digit:]
              all digits

       [:graph:]
              all printable characters, not including space

       [:lower:]
              all lower case letters

       [:print:]
              all printable characters, including space

       [:punct:]
              all punctuation characters

       [:space:]
              all horizontal or vertical whitespace

       [:upper:]
              all upper case letters

       [:xdigit:]
              all hexadecimal digits

       [=CHAR=]
              all characters which are equivalent to CHAR

       Translation  occurs  if -d is not given and both SET1 and SET2 appear.  -t may be used only when translating.  SET2 is extended to length of SET1 by repeating its last character as
       necessary.  Excess characters of SET2 are ignored.  Only [:lower:] and [:upper:] are guaranteed to expand in ascending order; used in SET2 while translating, they may only be  used
       in pairs to specify case conversion.  -s uses the last specified SET, and occurs after translation or deletion.

AUTHOR
       Written by Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report tr translation bugs to <http://translationproject.org/team/>

SEE ALSO
       Full documentation at: <http://www.gnu.org/software/coreutils/tr>
       or available locally via: info '(coreutils) tr invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                  TR(1)
****************************************************tr ends here****************************************************


****************************************************uniq starts here****************************************************
UNIQ(1)                                                                                User Commands                                                                                UNIQ(1)

NAME
       uniq - report or omit repeated lines

SYNOPSIS
       uniq [OPTION]... [INPUT [OUTPUT]]

DESCRIPTION
       Filter adjacent matching lines from INPUT (or standard input), writing to OUTPUT (or standard output).

       With no options, matching lines are merged to the first occurrence.

       Mandatory arguments to long options are mandatory for short options too.

       -c, --count
              prefix lines by the number of occurrences

       -d, --repeated
              only print duplicate lines, one for each group

       -D     print all duplicate lines

       --all-repeated[=METHOD]
              like -D, but allow separating groups with an empty line; METHOD={none(default),prepend,separate}

       -f, --skip-fields=N
              avoid comparing the first N fields

       --group[=METHOD]
              show all items, separating groups with an empty line; METHOD={separate(default),prepend,append,both}

       -i, --ignore-case
              ignore differences in case when comparing

       -s, --skip-chars=N
              avoid comparing the first N characters

       -u, --unique
              only print unique lines

       -z, --zero-terminated
              line delimiter is NUL, not newline

       -w, --check-chars=N
              compare no more than N characters in lines

       --help display this help and exit

       --version
              output version information and exit

       A field is a run of blanks (usually spaces and/or TABs), then non-blank characters.  Fields are skipped before chars.

       Note:  'uniq'  does  not  detect repeated lines unless they are adjacent.  You may want to sort the input first, or use 'sort -u' without 'uniq'.  Also, comparisons honor the rules
       specified by 'LC_COLLATE'.

AUTHOR
       Written by Richard M. Stallman and David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report uniq translation bugs to <http://translationproject.org/team/>

SEE ALSO
       comm(1), join(1), sort(1)

       Full documentation at: <http://www.gnu.org/software/coreutils/uniq>
       or available locally via: info '(coreutils) uniq invocation'

       Packaged by Cygwin (8.26-2)
       Copyright © 2016 Free Software Foundation, Inc.
       License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

GNU coreutils 8.26                                                                     November 2016                                                                                UNIQ(1)
****************************************************uniq ends here****************************************************


****************************************************zcat starts here****************************************************
GZIP(1)                                                                           General Commands Manual                                                                           GZIP(1)

NAME
       gzip, gunzip, zcat - compress or expand files

SYNOPSIS
       gzip [ -acdfhklLnNrtvV19 ] [-S suffix] [ name ...  ]
       gunzip [ -acfhklLnNrtvV ] [-S suffix] [ name ...  ]
       zcat [ -fhLV ] [ name ...  ]

DESCRIPTION
       Gzip  reduces  the size of the named files using Lempel-Ziv coding (LZ77).  Whenever possible, each file is replaced by one with the extension .gz, while keeping the same ownership
       modes, access and modification times.  (The default extension is -gz for VMS, z for MSDOS, OS/2 FAT, Windows NT FAT and Atari.)  If no files are specified, or if  a  file  name  is
       "-", the standard input is compressed to the standard output.  Gzip will only attempt to compress regular files.  In particular, it will ignore symbolic links.

       If  the  compressed  file  name is too long for its file system, gzip truncates it.  Gzip attempts to truncate only the parts of the file name longer than 3 characters.  (A part is
       delimited by dots.) If the name consists of small parts only, the longest parts are truncated. For example, if file names are limited to 14 characters, gzip.msdos.exe is compressed
       to gzi.msd.exe.gz.  Names are not truncated on systems which do not have a limit on file name length.

       By  default,  gzip  keeps  the  original file name and timestamp in the compressed file. These are used when decompressing the file with the -N option. This is useful when the com‐
       pressed file name was truncated or when the time stamp was not preserved after a file transfer.

       Compressed files can be restored to their original form using gzip -d or gunzip or zcat.  If the original name saved in the compressed file is not suitable for its file  system,  a
       new name is constructed from the original one to make it legal.

       gunzip  takes a list of files on its command line and replaces each file whose name ends with .gz, -gz, .z, -z, or _z (ignoring case) and which begins with the correct magic number
       with an uncompressed file without the original extension.  gunzip also recognizes the special extensions .tgz and .taz as shorthands for .tar.gz and .tar.Z respectively.  When com‐
       pressing, gzip uses the .tgz extension if necessary instead of truncating a file with a .tar extension.

       gunzip  can currently decompress files created by gzip, zip, compress, compress -H or pack.  The detection of the input format is automatic.  When using the first two formats, gun‐
       zip checks a 32 bit CRC. For pack and gunzip checks the uncompressed length. The standard compress format was not designed to allow consistency checks. However gunzip is  sometimes
       able  to detect a bad .Z file. If you get an error when uncompressing a .Z file, do not assume that the .Z file is correct simply because the standard uncompress does not complain.
       This generally means that the standard uncompress does not check its input, and happily generates garbage output.  The SCO compress -H format  (lzh  compression  method)  does  not
       include a CRC but also allows some consistency checks.

       Files  created  by  zip  can  be  uncompressed by gzip only if they have a single member compressed with the 'deflation' method. This feature is only intended to help conversion of
       tar.zip files to the tar.gz format.  To extract a zip file with a single member, use a command like gunzip <foo.zip or gunzip -S .zip foo.zip.  To extract zip  files  with  several
       members, use unzip instead of gunzip.

       zcat  is identical to gunzip -c.  (On some systems, zcat may be installed as gzcat to preserve the original link to compress.)  zcat uncompresses either a list of files on the com‐
       mand line or its standard input and writes the uncompressed data on standard output.  zcat will uncompress files that have the correct magic number whether they have a  .gz  suffix
       or not.

       Gzip  uses  the  Lempel-Ziv  algorithm used in zip and PKZIP.  The amount of compression obtained depends on the size of the input and the distribution of common substrings.  Typi‐
       cally, text such as source code or English is reduced by 60-70%.  Compression is generally much better than that achieved by LZW (as used in compress), Huffman coding (as  used  in
       pack), or adaptive Huffman coding (compact).

       Compression  is  always  performed, even if the compressed file is slightly larger than the original. The worst case expansion is a few bytes for the gzip file header, plus 5 bytes
       every 32K block, or an expansion ratio of 0.015% for large files. Note that the actual number of used disk blocks almost never increases.  gzip preserves the  mode,  ownership  and
       timestamps of files when compressing or decompressing.

OPTIONS
       -a --ascii
              Ascii  text mode: convert end-of-lines using local conventions. This option is supported only on some non-Unix systems. For MSDOS, CR LF is converted to LF when compressing,
              and LF is converted to CR LF when decompressing.

       -c --stdout --to-stdout
              Write output on standard output; keep original files unchanged.  If there are several input files, the output consists of a sequence of independently compressed members.  To
              obtain better compression, concatenate all input files before compressing them.

       -d --decompress --uncompress
              Decompress.

       -f --force
              Force  compression or decompression even if the file has multiple links or the corresponding file already exists, or if the compressed data is read from or written to a ter‐
              minal. If the input data is not in a format recognized by gzip, and if the option --stdout is also given, copy the input data without change to the standard output: let zcat
              behave as cat.  If -f is not given, and when not running in the background, gzip prompts to verify whether an existing file should be overwritten.

       -h --help
              Display a help screen and quit.

       -k --keep
              Keep (don't delete) input files during compression or decompression.

       -l --list
              For each compressed file, list the following fields:

                  compressed size: size of the compressed file
                  uncompressed size: size of the uncompressed file
                  ratio: compression ratio (0.0% if unknown)
                  uncompressed_name: name of the uncompressed file

              The uncompressed size is given as -1 for files not in gzip format, such as compressed .Z files. To get the uncompressed size for such a file, you can use:

                  zcat file.Z | wc -c

              In combination with the --verbose option, the following fields are also displayed:

                  method: compression method
                  crc: the 32-bit CRC of the uncompressed data
                  date & time: time stamp for the uncompressed file

              The compression methods currently supported are deflate, compress, lzh (SCO compress -H) and pack.  The crc is given as ffffffff for a file not in gzip format.

              With --name, the uncompressed name,  date and time  are those stored within the compress file if present.

              With  --verbose,  the size totals and compression ratio for all files is also displayed, unless some sizes are unknown. With --quiet, the title and totals lines are not dis‐
              played.

       -L --license
              Display the gzip license and quit.

       -n --no-name
              When compressing, do not save the original file name and time stamp by default. (The original name is always saved if the name had to be truncated.) When  decompressing,  do
              not restore the original file name if present (remove only the gzip suffix from the compressed file name) and do not restore the original time stamp if present (copy it from
              the compressed file). This option is the default when decompressing.

       -N --name
              When compressing, always save the original file name and time stamp; this is the default. When decompressing, restore the original file name and time stamp if present.  This
              option is useful on systems which have a limit on file name length or when the time stamp has been lost after a file transfer.

       -q --quiet
              Suppress all warnings.

       -r --recursive
              Travel the directory structure recursively. If any of the file names specified on the command line are directories, gzip will descend into the directory and compress all the
              files it finds there (or decompress them in the case of gunzip ).

       -S .suf --suffix .suf
              When compressing, use suffix .suf instead of .gz.  Any non-empty suffix can be given, but suffixes other than .z and .gz should be avoided to avoid confusion when files  are
              transferred to other systems.

              When decompressing, add .suf to the beginning of the list of suffixes to try, when deriving an output file name from an input file name.

       --synchronous
              Use synchronous output.  With this option, gzip is less likely to lose data during a system crash, but it can be considerably slower.

       -t --test
              Test. Check the compressed file integrity.

       -v --verbose
              Verbose. Display the name and percentage reduction for each file compressed or decompressed.

       -V --version
              Version. Display the version number and compilation options then quit.

       -# --fast --best
              Regulate  the speed of compression using the specified digit #, where -1 or --fast indicates the fastest compression method (less compression) and -9 or --best indicates the
              slowest compression method (best compression).  The default compression level is -6 (that is, biased towards high compression at expense of speed).

       --rsyncable
              When you synchronize a compressed file between two computers, this option allows rsync to transfer only files that were changed in the archive instead of the entire archive.
              Normally,  after a change is made to any file in the archive, the compression algorithm can generate a new version of the archive that does not match the previous version of
              the archive. In this case, rsync transfers the entire new version of the archive to the remote computer.  With this option, rsync can transfer only the changed files as well
              as a small amount of metadata that is required to update the archive structure in the area that was changed.

ADVANCED USAGE
       Multiple compressed files can be concatenated. In this case, gunzip will extract all members at once. For example:

             gzip -c file1  > foo.gz
             gzip -c file2 >> foo.gz

       Then

             gunzip -c foo

       is equivalent to

             cat file1 file2

       In  case  of damage to one member of a .gz file, other members can still be recovered (if the damaged member is removed). However, you can get better compression by compressing all
       members at once:

             cat file1 file2 | gzip > foo.gz

       compresses better than

             gzip -c file1 file2 > foo.gz

       If you want to recompress concatenated files to get better compression, do:

             gzip -cd old.gz | gzip > new.gz

       If a compressed file consists of several members, the uncompressed size and CRC reported by the --list option applies to the last member only. If you need the uncompressed size for
       all members, you can use:

             gzip -cd file.gz | wc -c

       If  you wish to create a single archive file with multiple members so that members can later be extracted independently, use an archiver such as tar or zip. GNU tar supports the -z
       option to invoke gzip transparently. gzip is designed as a complement to tar, not as a replacement.

ENVIRONMENT
       The obsolescent environment variable GZIP can hold a set of default options for gzip.  These options are interpreted first and can be overwritten by explicit command  line  parame‐
       ters.   As  this  can  cause  problems when using scripts, this feature is supported only for options that are reasonably likely to not cause too much harm, and gzip warns if it is
       used.  This feature will be removed in a future release of gzip.

       You can use an alias or script instead.  For example, if gzip is in the directory /usr/bin you can prepend $HOME/bin to your PATH and create  an  executable  script  $HOME/bin/gzip
       containing the following:

             #! /bin/sh
             export PATH=/usr/bin
             exec gzip -9 "$@"

       On VMS, the name of the obsolescent environment variable is GZIP_OPT, to avoid a conflict with the symbol set for invocation of the program.

SEE ALSO
       znew(1), zcmp(1), zmore(1), zforce(1), gzexe(1), zip(1), unzip(1), compress(1)

       The gzip file format is specified in P. Deutsch, GZIP file format specification version 4.3, <http://www.ietf.org/rfc/rfc1952.txt>, Internet RFC 1952 (May 1996).  The zip deflation
       format is specified in P. Deutsch, DEFLATE Compressed Data Format Specification version 1.3, <http://www.ietf.org/rfc/rfc1951.txt>, Internet RFC 1951 (May 1996).

DIAGNOSTICS
       Exit status is normally 0; if an error occurs, exit status is 1. If a warning occurs, exit status is 2.

       Usage: gzip [-cdfhklLnNrtvV19] [-S suffix] [file ...]
              Invalid options were specified on the command line.

       file: not in gzip format
              The file specified to gunzip has not been compressed.

       file: Corrupt input. Use zcat to recover some data.
              The compressed file has been damaged. The data up to the point of failure can be recovered using

                    zcat file > recover

       file: compressed with xx bits, can only handle yy bits
              File was compressed (using LZW) by a program that could deal with more bits than the decompress code on this machine.  Recompress the file with gzip, which compresses better
              and uses less memory.

       file: already has .gz suffix -- unchanged
              The file is assumed to be already compressed.  Rename the file and try again.

       file already exists; do you wish to overwrite (y or n)?
              Respond "y" if you want the output file to be replaced; "n" if not.

       gunzip: corrupt input
              A SIGSEGV violation was detected which usually means that the input file has been corrupted.

       xx.x% Percentage of the input saved by compression.
              (Relevant only for -v and -l.)

       -- not a regular file or directory: ignored
              When the input file is not a regular file or directory, (e.g. a symbolic link, socket, FIFO, device file), it is left unaltered.

       -- has xx other links: unchanged
              The input file has links; it is left unchanged.  See ln(1) for more information. Use the -f flag to force compression of multiply-linked files.

CAVEATS
       When  writing compressed data to a tape, it is generally necessary to pad the output with zeroes up to a block boundary. When the data is read and the whole block is passed to gun‐
       zip for decompression, gunzip detects that there is extra trailing garbage after the compressed data and emits a warning by default.  You can use the --quiet option to suppress the
       warning.

BUGS
       The  gzip format represents the input size modulo 2^32, so the --list option reports incorrect uncompressed sizes and compression ratios for uncompressed files 4 GB and larger.  To
       work around this problem, you can use the following command to discover a large uncompressed file's true size:

             zcat file.gz | wc -c

       The --list option reports sizes as -1 and crc as ffffffff if the compressed file is on a non seekable media.

       In some rare cases, the --best option gives worse compression than the default compression level (-6). On some highly redundant files, compress compresses better than gzip.

COPYRIGHT NOTICE
       Copyright © 1998-1999, 2001-2002, 2012, 2015-2016 Free Software Foundation, Inc.
       Copyright © 1992, 1993 Jean-loup Gailly

       Permission is granted to make and distribute verbatim copies of this manual provided the copyright notice and this permission notice are preserved on all copies.

       Permission is granted to copy and distribute modified versions of this manual under the conditions for verbatim copying, provided that the entire resulting derived work is distrib‐
       uted under the terms of a permission notice identical to this one.

       Permission is granted to copy and distribute translations of this manual into another language, under the above conditions for modified versions, except that this permission notice
       may be stated in a translation approved by the Foundation.

                                                                                           local                                                                                    GZIP(1)
****************************************************zcat ends here****************************************************


